#!/bin/sh
# Run this once plain, and once with '-m' flag
echo "Cleaning .py files"
rm *.py
status=0
failed=0
tests=0
passed=0
flags=
mflag=
case "$1" in
-*m*) flags="$flags $1" 
      shift
      mflag="-m";;
 -*)  flags="$flags $1"
      shift;;
esac
if [ "$mflag" != "-m" ]; then
    echo
    echo "Generating test modules"
    for f in *.pm
    do
        echo "==================== $f ===================="
        ../pythonizer $flags $f
        if [ $? -ne 0 ]; then
           echo "$f run with pythonizer FAILED"
           ((failed++))
           status=1
           continue
        fi
        pyf=${f%.pm}.py
        python -m py_compile "$pyf"
        if [ $? -ne 0 ]; then
           echo "$pyf compile with python FAILED"
           ((failed++))
           status=1
           continue
        fi
        ((passed++))
    done;
fi

echo
echo "Running pythonizer tests"
for f in *.pl;
do
   if [ "$mflag" = "-m" ]; then
       if grep -s "$f" skip_with_dash_m.txt; then
           echo "========== $f skipped with -m =========="
           continue
       fi
   fi
   echo "==================== $f ===================="
   ((tests++))
   perl $f
   if [ $? -ne 0 ]; then
      echo "$f run with perl FAILED - skipping next steps"
      ((failed++))
      status=1
      continue
   fi
   ../pythonizer $flags $f
   if [ $? -ne 0 ]; then
      echo "$f run with pythonizer FAILED"
      ((failed++))
      status=1
      continue
   fi
   pyf=${f%.pl}.py
   python $pyf
   if [ $? -ne 0 ]; then
      echo "$pyf run with python FAILED"
      ((failed++))
      status=1
      continue
   fi
   ((passed++))
done;
if [ $status -eq 0 ]; then
   echo "pythonizer $tests tests PASSED!"
else
   echo "pythonizer $passed tests PASSED. $failed tests FAILED!"
   exit 1
fi
exit 0
