#!/usr/bin/env python3
# Generated by "pythonizer -v0 A.pm" v1.030 run by joe on Wed Apr 19 09:51:32 2023
import builtins, perllib, sys, types
import A.A as _A_A

if "A" in sys.modules and hasattr(sys.modules["A"], "A"):
    delattr(sys.modules["A"], "A")

perllib.init_package("A", is_class=True)


def new(*_args):
    [class_] = perllib.list_of_n(_args, 1)
    return perllib.bless(perllib.Hash(), class_)


A.new = types.MethodType(new, A)


def hello(*_args):
    a_a = A.A.new()
    return a_a.hello()


A.hello = hello

builtins.__PACKAGE__ = "A"

# SKIPPED: use strict;
perllib.WARNING = 1
