{"condition":[[736,{"type":"and_3","op":"and","right":"not $main::remap_all","left":"$main::remap_global"}],[736,{"left":"$main::remap_global and not $main::remap_all","right":"$class eq \"global\"","op":"and","type":"and_3"}],[740,{"op":"and","type":"and_3","left":"$main::remap_global","right":"not $main::remap_all"}],[740,{"left":"$main::remap_global and not $main::remap_all","right":"$class eq \"global\"","op":"and","type":"and_3"}],[744,{"type":"and_3","op":"and","right":"not $main::remap_all","left":"$main::remap_global"}],[744,{"type":"and_3","op":"and","right":"$class eq \"global\"","left":"$main::remap_global and not $main::remap_all"}],[748,{"left":"$main::remap_global","right":"not $main::remap_all","op":"and","type":"and_3"}],[748,{"op":"and","type":"and_3","left":"$main::remap_global and not $main::remap_all","right":"$class eq \"global\""}],[766,{"left":"$tno != 0","right":"$ValPy[$tno - 1] eq \".\"","op":"and","type":"and_3"}],[770,{"op":"and","type":"and_3","left":"exists $Pythonizer::LocalSub{$py}","right":"$Pythonizer::LocalSub{$py} & 3"}],[789,{"right":"$last_varclass_lno != $.","left":"$Pythonizer::PassNo == &Pythonizer::PASS_1","type":"and_3","op":"and"}],[789,{"right":"$last_varclass_lno","left":"$Pythonizer::PassNo == &Pythonizer::PASS_1 and $last_varclass_lno != $.","type":"and_3","op":"and"}],[796,{"type":"and_3","op":"and","right":"exists $line_varclasses{$.}{$name}","left":"exists $line_varclasses{$.}"}],[796,{"right":"not $line_varclasses{$.}{$name} =~ /global|local/","left":"exists $line_varclasses{$.} and exists $line_varclasses{$.}{$name}","type":"and_3","op":"and"}],[797,{"type":"and_3","op":"and","right":"$ValPy[$tno - 1] eq \".\"","left":"$tno != 0"}],[821,{"right":"exists $line_varclasses{$.}{$name}","left":"exists $line_varclasses{$.}","type":"and_3","op":"and"}],[821,{"type":"and_3","op":"and","right":"not $line_varclasses{$.}{$name} =~ /global|local/","left":"exists $line_varclasses{$.} and exists $line_varclasses{$.}{$name}"}],[836,{"left":"$main::remap_global","right":"not $main::remap_all","op":"and","type":"and_3"}],[836,{"type":"and_3","op":"and","right":"$class eq \"global\"","left":"$main::remap_global and not $main::remap_all"}],[850,{"right":"$name eq \"\\$\"","left":"$prev eq \"\\$\"","type":"or_3","op":"or"}],[885,{"type":"and_3","op":"and","right":"$last_varclass_lno","left":"$last_varclass_lno != $."}],[901,{"left":"defined $ValType[$tno]","right":"$ValType[$tno] eq \"X\"","op":"and","type":"and_3"}],[906,{"op":"and","type":"and_3","left":"$ValClass[0] eq \"t\"","right":"index($TokenStr, \"=\") == -1"}],[908,{"right":"not in_sub()","left":"$class eq \"my\"","type":"and_3","op":"and"}],[906,{"right":"$ValClass[1] eq \"(\"","left":"$ValClass[0] eq \"c\"","type":"and_3","op":"and"}],[906,{"left":"$ValClass[0] eq \"c\" and $ValClass[1] eq \"(\"","right":"$ValClass[2] eq \"t\"","op":"and","type":"and_3"}],[906,{"left":"$ValClass[0] eq \"c\" and $ValClass[1] eq \"(\" and $ValClass[2] eq \"t\"","right":"$ValClass[3] =~ /[sahG]/","op":"and","type":"and_3"}],[906,{"left":"$ValClass[0] eq \"c\" and $ValClass[1] eq \"(\" and $ValClass[2] eq \"t\" and $ValClass[3] =~ /[sahG]/","right":"$ValPerl[3] eq $ValPerl[$tno]","op":"and","type":"and_3"}],[906,{"type":"and_3","op":"and","right":"$ValClass[1] eq \"t\"","left":"$ValClass[0] eq \"c\""}],[906,{"left":"$ValClass[0] eq \"c\" and $ValClass[1] eq \"t\"","right":"$tno == 2","op":"and","type":"and_3"}],[906,{"type":"and_3","op":"and","right":"$ValPerl[0] eq \"open\"","left":"$ValClass[0] eq \"f\""}],[906,{"right":"$ValClass[1] eq \"t\"","left":"$ValClass[0] eq \"f\" and $ValPerl[0] eq \"open\"","type":"and_3","op":"and"}],[906,{"right":"$tno == 2","left":"$ValClass[0] eq \"f\" and $ValPerl[0] eq \"open\" and $ValClass[1] eq \"t\"","type":"and_3","op":"and"}],[906,{"left":"$ValClass[0] eq \"f\"","right":"$ValPerl[0] eq \"open\"","op":"and","type":"and_3"}],[906,{"type":"and_3","op":"and","right":"$ValClass[1] eq \"(\"","left":"$ValClass[0] eq \"f\" and $ValPerl[0] eq \"open\""}],[906,{"op":"and","type":"and_3","left":"$ValClass[0] eq \"f\" and $ValPerl[0] eq \"open\" and $ValClass[1] eq \"(\"","right":"$ValClass[2] eq \"t\""}],[906,{"op":"and","type":"and_3","left":"$ValClass[0] eq \"f\" and $ValPerl[0] eq \"open\" and $ValClass[1] eq \"(\" and $ValClass[2] eq \"t\"","right":"$tno == 3"}],[906,{"type":"and_3","op":"and","right":"$ValClass[$tno - 1] eq \"t\"","left":"$tno != 0"}],[928,{"right":"not @nesting_stack","left":"$class eq \"local\"","type":"and_3","op":"and"}],[936,{"right":"$last_varclass_lno","left":"$last_varclass_lno != $.","type":"and_3","op":"and"}],[941,{"right":"$class eq \"my\"","left":"not exists $line_varclasses{$last_varclass_lno}{$name}","type":"or_3","op":"or"}],[941,{"type":"or_3","op":"or","right":"$class eq \"local\"","left":"not exists $line_varclasses{$last_varclass_lno}{$name} or $class eq \"my\""}],[943,{"type":"or_3","op":"or","right":"$last_varclass_sub{$name} ne $cs","left":"not exists $last_varclass_sub{$name}"}],[952,{"type":"or_3","op":"or","right":"$last_varclass_sub{$name} ne $cs","left":"not exists $last_varclass_sub{$name}"}],[970,{"type":"or_3","op":"or","right":"$class eq \"local\"","left":"$class eq \"global\""}],[977,{"op":"and","type":"and_3","left":"$last_varclass_lno != $.","right":"$last_varclass_lno"}],[1045,{"type":"and_3","op":"and","right":"length $name == 1","left":"not $main::import_perllib"}],[1045,{"op":"and","type":"and_3","left":"not $main::import_perllib and length $name == 1","right":"exists $SPECIAL_VAR{$name}"}],[1080,{"left":"$ValPerl[$i] eq 'if'","right":"$ValPerl[$i] eq 'unless'","op":"||","type":"or_3"}],[1080,{"type":"and_3","op":"and","right":"$ValPerl[$i] eq 'if' || $ValPerl[$i] eq 'unless'","left":"$ValClass[$i] eq \"c\""}],[1119,{"right":"exists $nesting_stack[$i]{'loop_ctr'}","left":"$nesting_stack[$i]{'type'} eq \"for\"","type":"and_3","op":"and"}],[1119,{"op":"and","type":"and_3","left":"$nesting_stack[$i]{'type'} eq \"for\" and exists $nesting_stack[$i]{'loop_ctr'}","right":"index($nesting_stack[$i]{'loop_ctr'}, $lc_name) == 0"}],[1150,{"type":"and_3","op":"and","right":"$line_needs_try_block{$nesting_last->{'lno'}} & TRY_BLOCK_HAS_NEXT()","left":"exists $line_needs_try_block{$nesting_last->{'lno'}}"}],[1165,{"right":"$ValClass[$pos + 1] eq \"i\"","left":"$#ValClass >= $pos + 1","type":"and_3","op":"and"}],[1195,{"left":"$main::debug >= 3","right":"$Pythonizer::PassNo != &Pythonizer::PASS_0","op":"and","type":"and_3"}],[1211,{"left":"scalar @ValClass >= 2","right":"$ValClass[0] eq \"W\"","op":"and","type":"and_3"}],[1215,{"op":"and","type":"and_3","left":"$nesting_info{'type'} eq \"{\"","right":"$delayed_block_closure"}],[1216,{"type":"and_3","op":"and","right":"exists $nesting_stack[-1]{'loop_ctr'}","left":"scalar @nesting_stack"}],[1232,{"type":"and_3","op":"&&","right":"($ValPy[$begin] eq '{' && $nesting_info{'type'} ne 'if' || $ValPerl[$begin] eq 'for' || $ValPerl[$begin] eq 'foreach' || $ValPerl[$begin] eq 'continue' || $ValPerl[$begin] eq 'do' || $ValPerl[$begin] eq 'while' || $ValPerl[$begin] eq 'until')","left":"$begin <= $#ValClass"}],[1238,{"op":"&&","type":"and_3","left":"$begin <= $#ValClass","right":"($ValPerl[$begin] eq 'if' || $ValPerl[$begin] eq 'unless' || $nesting_info{'type'} eq 'if' || is_eval() || $ValPerl[$begin] eq 'elsif' || $ValPerl[$begin] eq 'else')"}],[1243,{"type":"and_3","op":"&&","right":"$ValPerl[$begin] eq 'sub'","left":"$begin <= $#ValClass"}],[1244,{"type":"and_3","op":"&&","right":"$nesting_info{'is_sub'}","left":"$begin + 1 <= $#ValClass"}],[1246,{"op":"||","type":"or_3","left":"$nesting_info{'is_loop'}","right":"scalar @nesting_stack && $nesting_stack[-1]{'in_loop'}"}],[1247,{"op":"||","type":"or_3","left":"$nesting_info{'is_cond'}","right":"scalar @nesting_stack && $nesting_stack[-1]{'in_cond'}"}],[1248,{"type":"or_3","op":"||","right":"scalar @nesting_stack && $nesting_stack[-1]{'in_eval'}","left":"$nesting_info{'is_eval'}"}],[1249,{"type":"or_3","op":"||","right":"scalar @nesting_stack && $nesting_stack[-1]{'in_sub'}","left":"$nesting_info{'is_sub'}"}],[1250,{"right":"not $nesting_info{'is_sub'}","left":"$nesting_info{'in_sub'}","type":"and_3","op":"and"}],[1257,{"op":"and","type":"and_3","left":"$nesting_info{'type'} eq \"continue\"","right":"exists $line_needs_try_block{$nesting_last->{'lno'}}"}],[1260,{"right":"$line_needs_try_block{$nesting_last->{'lno'}} & TRY_BLOCK_CONTINUE_NEEDED_ONE()","left":"$main::debug >= 4","type":"and_3","op":"and"}],[1264,{"type":"and_3","op":"and","right":"$ValClass[0] eq \"i\"","left":"$#ValClass >= 0"}],[1264,{"left":"$#ValClass >= 0 and $ValClass[0] eq \"i\"","right":"$ValPy[0] =~ /^for /","op":"and","type":"and_3"}],[1264,{"right":"$ValPerl[0] =~ /[A-Z]+/","left":"$#ValClass >= 0 and $ValClass[0] eq \"i\" and $ValPy[0] =~ /^for /","type":"and_3","op":"and"}],[1272,{"op":"and","type":"and_3","left":"$main::debug >= 3","right":"$Pythonizer::PassNo != &Pythonizer::PASS_0"}],[1288,{"op":"and","type":"and_3","left":"$main::debug >= 3","right":"$Pythonizer::PassNo != &Pythonizer::PASS_0"}],[1297,{"right":"$Pythonizer::PassNo == &Pythonizer::PASS_1","left":"exists $nesting_last->{'can_call'}","type":"and_3","op":"and"}],[1299,{"type":"and_3","op":"and","right":"exists $sub_external_last_nexts{$sub}{$label}","left":"exists $sub_external_last_nexts{$sub}"}],[1312,{"left":"$ValClass[$i] eq \"C\"","right":"$ValPerl[$i] eq \"eval\"","op":"and","type":"and_3"}],[1324,{"op":"and","type":"and_3","left":"not defined $label","right":"$Pythonizer::PassNo != &Pythonizer::PASS_0"}],[1341,{"op":"||","type":"or_3","left":"$top->{'in_loop'}","right":"$top->{'in_eval'}"}],[1344,{"left":"exists $nesting_stack[$ndx]{'label'}","right":"$nesting_stack[$ndx]{'label'} eq $label","op":"and","type":"and_3"}],[1430,{"type":"and_3","op":"and","right":"$ValClass[$pos + 1] eq \"i\"","left":"$#ValClass >= $pos + 1"}],[1490,{"op":"and","type":"and_3","left":"exists $line_needs_try_block{$top->{'lno'}}","right":"$line_needs_try_block{$top->{'lno'}} & TRY_BLOCK_CONTINUE_NEEDED_ONE()"}],[1512,{"right":"$line_needs_try_block{$top->{'lno'}} & (TRY_BLOCK_EXCEPTION() | TRY_BLOCK_FINALLY())","left":"exists $line_needs_try_block{$top->{'lno'}}","type":"and_3","op":"and"}],[1552,{"right":"$line_needs_try_block{$top->{'lno'}} & TRY_BLOCK_HAS_CONTINUE()","left":"exists $line_needs_try_block{$top->{'lno'}}","type":"and_3","op":"and"}],[1568,{"type":"and_3","op":"and","right":"$line_needs_try_block{$top->{'lno'}} & TRY_BLOCK_HAS_NEXT()","left":"exists $line_needs_try_block{$top->{'lno'}}"}],[1608,{"right":"$line_needs_try_block{$top->{'lno'}} & TRY_BLOCK_REDO_LOOP()","left":"exists $line_needs_try_block{$top->{'lno'}}","type":"and_3","op":"and"}],[1637,{"left":"exists $nesting_stack[$ndx]{'label'}","right":"$nesting_stack[$ndx]{'label'} eq $label","op":"and","type":"and_3"}],[1677,{"right":"defined $top->{'label'}","left":"exists $top->{'label'}","type":"and_3","op":"and"}],[1737,{"type":"and_3","op":"and","right":"$is_next","left":"exists $line_needs_try_block{$nesting_stack[$ndx]{'lno'}}"}],[1737,{"type":"and_3","op":"and","right":"$line_needs_try_block{$nesting_stack[$ndx]{'lno'}} & (TRY_BLOCK_HAS_CONTINUE() | TRY_BLOCK_REDO_LOOP())","left":"exists $line_needs_try_block{$nesting_stack[$ndx]{'lno'}} and $is_next"}],[1739,{"left":"exists $line_needs_try_block{$nesting_stack[$ndx]{'lno'}}","right":"not $is_next","op":"and","type":"and_3"}],[1739,{"type":"and_3","op":"and","right":"$line_needs_try_block{$nesting_stack[$ndx]{'lno'}} & TRY_BLOCK_REDO_LOOP()","left":"exists $line_needs_try_block{$nesting_stack[$ndx]{'lno'}} and not $is_next"}],[1760,{"type":"and_3","op":"and","right":"$ValPerl[-1] eq \"sub\"","left":"$ValClass[-1] eq \"k\""}],[1769,{"right":"$ValClass[$i + 1] eq \"(\"","left":"$i + 1 <= $#ValClass","type":"and_3","op":"and"}],[1768,{"left":"$ValClass[$i] eq \"f\"","right":"$ValPerl[$i] eq \"%SIG\"","op":"and","type":"and_3"}],[1768,{"op":"and","type":"and_3","left":"$ValClass[$i] eq \"f\" and $ValPerl[$i] eq \"%SIG\"","right":"$ValClass[$i + 1] eq \"(\""}],[1768,{"type":"and_3","op":"and","right":"$ValClass[$i + 2] eq \"i\"","left":"$ValClass[$i] eq \"f\" and $ValPerl[$i] eq \"%SIG\" and $ValClass[$i + 1] eq \"(\""}],[1830,{"left":"$main::implicit_global_my","right":"$bare1","op":"or","type":"or_3"}],[1830,{"right":"$has_dot","left":"$main::implicit_global_my or $bare1","type":"or_3","op":"or"}],[1841,{"op":"||","type":"or_3","left":"$has_dot","right":"exists $Pythonizer::NeedsInitializing{$sub}{$ValPy[0]}"}],[1918,{"op":"and","type":"and_3","left":"not exists $globals_set{$pyname}","right":"$pyname =~ /^[A-Za-z_][A-Za-z0-9_]*$/"}],[1925,{"type":"and_3","op":"and","right":"$pyname =~ /^[A-Za-z_][A-Za-z0-9_]*$/","left":"not exists $globals_set{$pyname}"}],[2027,{"op":"and","type":"and_3","left":"$had_space","right":"$ExtractingTokensFromDoubleQuotedStringEnd > 0"}],[2039,{"left":"not defined $source","right":"$source eq \"\"","op":"or","type":"or_3"}],[2048,{"op":"and","type":"and_3","left":"$tno != 0","right":"$ValClass[$tno - 1] eq \"i\""}],[2048,{"type":"and_3","op":"and","right":"$ValPerl[$tno - 1] =~ /^v\\d/","left":"$tno != 0 and $ValClass[$tno - 1] eq \"i\""}],[2048,{"right":"$s ne \"}\"","left":"$tno != 0 and $ValClass[$tno - 1] eq \"i\" and $ValPerl[$tno - 1] =~ /^v\\d/","type":"and_3","op":"and"}],[2048,{"left":"$tno != 0 and $ValClass[$tno - 1] eq \"i\" and $ValPerl[$tno - 1] =~ /^v\\d/ and $s ne \"}\"","right":"not $source =~ /=>/","op":"and","type":"and_3"}],[2085,{"right":"$Pythonizer::PassNo != &Pythonizer::PASS_0","left":"$main::debug >= 5","type":"and_3","op":"and"}],[2095,{"right":"$ValPerl[0] eq \"sub\"","left":"$tno > 0","type":"and_3","op":"and"}],[2095,{"op":"and","type":"and_3","left":"$tno == 0","right":"defined $nesting_last"}],[2095,{"right":"$nesting_last->{'type'} eq \"do\"","left":"$tno == 0 and defined $nesting_last","type":"and_3","op":"and"}],[2095,{"right":"$delayed_block_closure","left":"$tno == 0","type":"and_3","op":"and"}],[2095,{"op":"and","type":"and_2","left":"$tno == 0 and $delayed_block_closure","right":"scalar @nesting_stack"}],[2095,{"left":"$tno == 0 and $delayed_block_closure and scalar @nesting_stack","right":"$nesting_stack[-1]{'type'} eq \"do\"","op":"and","type":"and_3"}],[2132,{"left":"index(\"\\$\\@%&*\", $s) != -1","right":"substr($source, 1, 1) eq \"{\"","op":"and","type":"and_3"}],[2132,{"left":"index(\"\\$\\@%&*\", $s) != -1 and substr($source, 1, 1) eq \"{\"","right":"length $source >= 4","op":"and","type":"and_3"}],[2132,{"type":"and_3","op":"and","right":"index(\"\\$\\@%&*\\\"'\", substr($source, 2, 1)) == -1","left":"index(\"\\$\\@%&*\", $s) != -1 and substr($source, 1, 1) eq \"{\" and length $source >= 4"}],[2160,{"op":"and","type":"and_3","left":"$delayed_do_false","right":"$nesting_last->{'type'} eq \"do\""}],[2154,{"left":"length $source == 1 || $source =~ /^}\\s*$/ || $source =~ /^}\\s*#/ || could_be_anonymous_sub_close()","right":"$source =~ /^}\\s*(?:(?:(?:else|elsif|while|until|continue|)\\b)|;)/","op":"||","type":"or_3"}],[2154,{"type":"and_3","op":"and","right":"length $source == 1 || $source =~ /^}\\s*$/ || $source =~ /^}\\s*#/ || could_be_anonymous_sub_close() || $source =~ /^}\\s*(?:(?:(?:else|elsif|while|until|continue|)\\b)|;)/","left":"$tno > 0"}],[2190,{"op":"and","type":"and_3","left":"$main::debug >= 5","right":"$Pythonizer::PassNo != &Pythonizer::PASS_0"}],[2199,{"left":"$tno > 2","right":"$ValClass[$tno - 1] eq \"i\"","op":"and","type":"and_3"}],[2199,{"type":"and_3","op":"and","right":"$ValPerl[$tno - 2] eq \"{\"","left":"$tno > 2 and $ValClass[$tno - 1] eq \"i\""}],[2151,{"left":"$s eq \"^\"","right":"$tno == 0","op":"and","type":"and_3"}],[2151,{"type":"or_3","op":"or","right":"$s eq \"^\" and $tno == 0","left":"$s eq \"{\""}],[2218,{"op":"and","type":"and_3","left":"$tno == 0","right":"looks_like_anon_hash_def($source)"}],[2218,{"right":"$ValClass[0] eq \"k\"","left":"$tno == 2","type":"and_3","op":"and"}],[2218,{"op":"and","type":"and_3","left":"$tno == 2 and $ValClass[0] eq \"k\"","right":"$ValClass[1] eq \"i\""}],[2218,{"op":"and","type":"and_3","left":"$tno == 2 and $ValClass[0] eq \"k\" and $ValClass[1] eq \"i\"","right":"$ValPerl[0] eq \"use\""}],[2218,{"op":"||","type":"or_3","left":"$ValPerl[1] eq 'constant'","right":"$ValPerl[1] eq 'overload'"}],[2218,{"type":"and_3","op":"and","right":"$ValPerl[1] eq 'constant' || $ValPerl[1] eq 'overload'","left":"$tno == 2 and $ValClass[0] eq \"k\" and $ValClass[1] eq \"i\" and $ValPerl[0] eq \"use\""}],[2218,{"left":"length $source == 1","right":"$source =~ /^{\\s*#/","op":"||","type":"or_3"}],[2218,{"right":"$ValClass[$tno - 1] ne \"=\"","left":"length $source == 1 || $source =~ /^{\\s*#/","type":"and_3","op":"and"}],[2218,{"right":"$ValClass[$tno - 1] ne \"f\"","left":"length $source == 1 || $source =~ /^{\\s*#/ and $ValClass[$tno - 1] ne \"=\"","type":"and_3","op":"and"}],[2218,{"type":"and_3","op":"and","right":"$ValClass[$tno - 1] ne \"s\"","left":"length $source == 1 || $source =~ /^{\\s*#/ and $ValClass[$tno - 1] ne \"=\" and $ValClass[$tno - 1] ne \"f\""}],[2218,{"type":"and_3","op":"and","right":"$ValClass[$tno - 1] ne \"(\"","left":"length $source == 1 || $source =~ /^{\\s*#/ and $ValClass[$tno - 1] ne \"=\" and $ValClass[$tno - 1] ne \"f\" and $ValClass[$tno - 1] ne \"s\""}],[2218,{"right":"$ValClass[$tno - 1] ne \",\"","left":"length $source == 1 || $source =~ /^{\\s*#/ and $ValClass[$tno - 1] ne \"=\" and $ValClass[$tno - 1] ne \"f\" and $ValClass[$tno - 1] ne \"s\" and $ValClass[$tno - 1] ne \"(\"","type":"and_3","op":"and"}],[2218,{"type":"and_3","op":"and","right":"$ValClass[$tno - 1] ne \"f\"","left":"$ValClass[$tno - 1] ne \"=\""}],[2218,{"op":"and","type":"and_3","left":"$ValClass[$tno - 1] ne \"=\" and $ValClass[$tno - 1] ne \"f\"","right":"$ValClass[$tno - 1] ne \"A\""}],[2218,{"op":"and","type":"and_3","left":"$ValClass[$tno - 1] ne \"=\" and $ValClass[$tno - 1] ne \"f\" and $ValClass[$tno - 1] ne \"A\"","right":"$ValClass[$tno - 1] ne \"(\""}],[2218,{"type":"and_3","op":"and","right":"$ValClass[$tno - 1] ne \",\"","left":"$ValClass[$tno - 1] ne \"=\" and $ValClass[$tno - 1] ne \"f\" and $ValClass[$tno - 1] ne \"A\" and $ValClass[$tno - 1] ne \"(\""}],[2218,{"left":"$ValClass[$tno - 1] ne \"=\" and $ValClass[$tno - 1] ne \"f\" and $ValClass[$tno - 1] ne \"A\" and $ValClass[$tno - 1] ne \"(\" and $ValClass[$tno - 1] ne \",\"","right":"$ValClass[$tno - 1] ne \"s\"","op":"and","type":"and_3"}],[2218,{"op":"||","type":"or_3","left":"$ValPerl[$tno - 1] eq ')' || $source =~ /^.\\s*#/ || index($source, '}', 1) == -1 || $tno == 1 && $ValClass[0] eq 'C' || $tno == 2 && $ValPerl[0] eq 'sub' || $ValPerl[$tno - 1] eq 'sub'","right":"$tno == 1 && $ValPerl[0] =~ /BEGIN|END|UNITCHECK|CHECK|INIT/"}],[2218,{"left":"$ValClass[$tno - 1] ne \"=\" and $ValClass[$tno - 1] ne \"f\" and $ValClass[$tno - 1] ne \"A\" and $ValClass[$tno - 1] ne \"(\" and $ValClass[$tno - 1] ne \",\" and $ValClass[$tno - 1] ne \"s\"","right":"$ValPerl[$tno - 1] eq ')' || $source =~ /^.\\s*#/ || index($source, '}', 1) == -1 || $tno == 1 && $ValClass[0] eq 'C' || $tno == 2 && $ValPerl[0] eq 'sub' || $ValPerl[$tno - 1] eq 'sub' || $tno == 1 && $ValPerl[0] =~ /BEGIN|END|UNITCHECK|CHECK|INIT/","op":"and","type":"and_3"}],[2218,{"op":"and","type":"and_3","left":"$s eq \"{\"","right":"$ValClass[$tno - 1] eq \"f\""}],[2218,{"left":"$s eq \"{\" and $ValClass[$tno - 1] eq \"f\"","right":"semicolon_in_block($source)","op":"and","type":"and_3"}],[2274,{"left":"$main::debug >= 5","right":"$Pythonizer::PassNo != &Pythonizer::PASS_0","op":"and","type":"and_3"}],[2151,{"left":"$tno == 0 || $ValClass[$tno - 1] =~ /[~\\(,kc=o0!>]/ || $ValPerl[$tno - 1] eq 'split' || $ValPerl[$tno - 1] eq 'grep'","right":"$ValClass[$tno - 1] eq 'r'","op":"||","type":"or_3"}],[2151,{"type":"and_3","op":"and","right":"$tno == 0 || $ValClass[$tno - 1] =~ /[~\\(,kc=o0!>]/ || $ValPerl[$tno - 1] eq 'split' || $ValPerl[$tno - 1] eq 'grep' || $ValClass[$tno - 1] eq 'r'","left":"$s eq \"/\""}],[2302,{"right":"$ValPerl[$tno - 1] eq 'split'","left":"$ValClass[$tno - 2] eq 'f' && !($ValPerl[$tno - 2] =~ /^(?:chomp|chop|chr|shift)$/)","type":"or_3","op":"||"}],[2302,{"type":"and_3","op":"and","right":"$ValClass[$tno - 2] eq 'f' && !($ValPerl[$tno - 2] =~ /^(?:chomp|chop|chr|shift)$/) || $ValPerl[$tno - 1] eq 'split'","left":"$tno >= 1"}],[2316,{"right":"$ValPerl[$tno - 1] eq \"<<\"","left":"$tno > 0","type":"and_3","op":"and"}],[2316,{"type":"and_3","op":"and","right":"$ValPerl[$tno - 1] eq \"~\"","left":"$tno > 1"}],[2316,{"op":"and","type":"and_3","left":"$tno > 1 and $ValPerl[$tno - 1] eq \"~\"","right":"$ValPerl[$tno - 2] eq \"<<\""}],[2316,{"op":"or","type":"or_3","left":"$tno > 0 and $ValPerl[$tno - 1] eq \"<<\"","right":"$tno > 1 and $ValPerl[$tno - 1] eq \"~\" and $ValPerl[$tno - 2] eq \"<<\""}],[2339,{"op":"and","type":"and_3","left":"$tno > 0","right":"$ValPerl[$tno - 1] eq \"<<\""}],[2339,{"type":"and_3","op":"and","right":"$ValPerl[$tno - 1] eq \"~\"","left":"$tno > 1"}],[2339,{"type":"and_3","op":"and","right":"$ValPerl[$tno - 2] eq \"<<\"","left":"$tno > 1 and $ValPerl[$tno - 1] eq \"~\""}],[2339,{"left":"$tno > 0 and $ValPerl[$tno - 1] eq \"<<\"","right":"$tno > 1 and $ValPerl[$tno - 1] eq \"~\" and $ValPerl[$tno - 2] eq \"<<\"","op":"or","type":"or_3"}],[2339,{"type":"and_3","op":"and","right":"substr($ValPy[$tno], 0, 1) eq \"f\"","left":"index($ValPy[$tno], \"\\n\") != -1"}],[2339,{"right":"not $ValPy[$tno] =~ /^f\"\"\"/","left":"index($ValPy[$tno], \"\\n\") != -1 and substr($ValPy[$tno], 0, 1) eq \"f\"","type":"and_3","op":"and"}],[2379,{"op":"and","type":"and_3","left":"substr($val, -1, 1) eq \".\"","right":"substr($source, length $val, 1) eq \".\""}],[2390,{"left":"$cut > 1","right":"substr($ValPy[$tno], 0, 1) eq 0","op":"and","type":"and_3"}],[2390,{"type":"and_3","op":"and","right":"not $ValPy[$tno] =~ /[.exb]/","left":"$cut > 1 and substr($ValPy[$tno], 0, 1) eq 0"}],[2398,{"left":"$tno == 0","right":"$w eq \"END\"","op":"and","type":"and_3"}],[2408,{"op":"and","type":"and_3","left":"($pq = index($w, \"'\")) > 0","right":"exists $TokenType{substr $w, 0, $pq}"}],[2408,{"op":"and","type":"and_3","left":"($pq = index($w, \"'\")) > 0 and exists $TokenType{substr $w, 0, $pq}","right":"$TokenType{substr $w, 0, $pq} eq \"q\""}],[2416,{"left":"$ValClass[$tno - 1] eq \"k\"","right":"$ValPerl[$tno - 1] eq \"sub\"","op":"and","type":"and_3"}],[2416,{"type":"and_3","op":"and","right":"($ValClass[$tno - 1] eq \"k\" and $ValPerl[$tno - 1] eq \"sub\")","left":"$tno != 0"}],[2416,{"right":"$ValPerl[$tno - 1] =~ /^(?:opendir|open|closedir|close|printf|print|say|readdir|telldir|rewinddir|sysread|sysseek|syswrite|seek|tell|read|binmode|write)$/","left":"$ValClass[$tno - 1] eq \"f\"","type":"and_3","op":"and"}],[2416,{"type":"or_3","op":"or","right":"$ValClass[$tno - 1] eq \"f\" and $ValPerl[$tno - 1] =~ /^(?:opendir|open|closedir|close|printf|print|say|readdir|telldir|rewinddir|sysread|sysseek|syswrite|seek|tell|read|binmode|write)$/","left":"$tno != 0 and ($ValClass[$tno - 1] eq \"k\" and $ValPerl[$tno - 1] eq \"sub\")"}],[2416,{"type":"and_3","op":"and","right":"$ValClass[$tno - 1] eq \"(\"","left":"$tno - 2 >= 0"}],[2416,{"right":"$ValClass[$tno - 2] eq \"f\"","left":"$tno - 2 >= 0 and $ValClass[$tno - 1] eq \"(\"","type":"and_3","op":"and"}],[2416,{"left":"$tno - 2 >= 0 and $ValClass[$tno - 1] eq \"(\" and $ValClass[$tno - 2] eq \"f\"","right":"$ValPerl[$tno - 2] =~ /^(?:opendir|open|closedir|close|printf|print|say|readdir|telldir|rewinddir|sysread|sysseek|syswrite|seek|tell|read|binmode|write)$/","op":"and","type":"and_3"}],[2416,{"left":"$tno != 0 and ($ValClass[$tno - 1] eq \"k\" and $ValPerl[$tno - 1] eq \"sub\") or $ValClass[$tno - 1] eq \"f\" and $ValPerl[$tno - 1] =~ /^(?:opendir|open|closedir|close|printf|print|say|readdir|telldir|rewinddir|sysread|sysseek|syswrite|seek|tell|read|binmode|write)$/","right":"$tno - 2 >= 0 and $ValClass[$tno - 1] eq \"(\" and $ValClass[$tno - 2] eq \"f\" and $ValPerl[$tno - 2] =~ /^(?:opendir|open|closedir|close|printf|print|say|readdir|telldir|rewinddir|sysread|sysseek|syswrite|seek|tell|read|binmode|write)$/","op":"or","type":"or_3"}],[2425,{"type":"and_3","op":"and","right":"not exists $keyword_tr{$w}","left":"$sigil eq \"\""}],[2425,{"left":"$sigil eq \"\" and not exists $keyword_tr{$w}","right":"not substr($source, $cut) =~ /\\s*\\(/","op":"and","type":"and_3"}],[2425,{"left":"$sigil eq \"\" and not exists $keyword_tr{$w} and not substr($source, $cut) =~ /\\s*\\(/","right":"not exists $FileHandles{$w}","op":"and","type":"and_3"}],[2439,{"right":"$w =~ /carp|confess|croak|cluck/","left":"substr($w, 0, 5) eq \"Carp'\"","type":"and_3","op":"and"}],[2439,{"type":"and_3","op":"and","right":"$w =~ /carp|confess|croak|cluck/","left":"substr($w, 0, 6) eq \"Carp::\""}],[2444,{"right":"$w =~ /isa/","left":"substr($w, 0, 10) eq \"UNIVERSAL'\"","type":"and_3","op":"and"}],[2444,{"op":"and","type":"and_3","left":"substr($w, 0, 11) eq \"UNIVERSAL::\"","right":"$w =~ /isa/"}],[2455,{"left":"$Pythonizer::PassNo != &Pythonizer::PASS_0","right":"exists $FileHandles{$w}","op":"and","type":"and_3"}],[2456,{"left":"$tno == 0","right":"$ValClass[$tno - 1] ne \"k\"","op":"or","type":"or_3"}],[2456,{"op":"or","type":"or_3","left":"$tno == 0 or $ValClass[$tno - 1] ne \"k\"","right":"$ValPerl[$tno - 1] ne \"sub\""}],[2462,{"type":"and_3","op":"and","right":"not $core","left":"$class eq \"f\""}],[2462,{"op":"||","type":"or_3","left":"exists $Pythonizer::UseSub{$w}","right":"exists $Pythonizer::LocalSub{$w}"}],[2462,{"left":"$class eq \"f\" and not $core","right":"exists $Pythonizer::UseSub{$w} || exists $Pythonizer::LocalSub{$w}","op":"and","type":"and_3"}],[2462,{"type":"and_3","op":"and","right":"$tno != 0","left":"$class eq \"q\""}],[2462,{"right":"$ValClass[$tno - 1] eq \"q\"","left":"$class eq \"q\" and $tno != 0","type":"and_3","op":"and"}],[2462,{"left":"$class eq \"\\\"\"","right":"$w eq \"__PACKAGE__\"","op":"and","type":"and_3"}],[2471,{"type":"or_3","op":"||","right":"index('{(,', $ValPerl[$tno - 1]) != -1 && $source =~ /^[a-z0-9]+\\s*=>/","left":"$ValPerl[$tno - 1] eq '{' && $source =~ /^[a-z0-9]+}/"}],[2471,{"op":"and","type":"and_3","left":"$tno != 0","right":"$ValPerl[$tno - 1] eq '{' && $source =~ /^[a-z0-9]+}/ || index('{(,', $ValPerl[$tno - 1]) != -1 && $source =~ /^[a-z0-9]+\\s*=>/"}],[2471,{"op":"and","type":"and_3","left":"$tno == 2","right":"$ValClass[0] eq \"G\""}],[2471,{"left":"$tno == 2 and $ValClass[0] eq \"G\"","right":"$ValClass[1] eq \"=\"","op":"and","type":"and_3"}],[2471,{"right":"$class eq \"k\"","left":"$tno == 2 and $ValClass[0] eq \"G\" and $ValClass[1] eq \"=\"","type":"and_3","op":"and"}],[2471,{"right":"$w eq \"sub\"","left":"$tno == 2 and $ValClass[0] eq \"G\" and $ValClass[1] eq \"=\" and $class eq \"k\"","type":"and_3","op":"and"}],[2471,{"left":"$ValClass[$tno - 1] eq 'D' || $ValClass[$tno - 1] eq 'c' && $ValPerl[$tno - 1] eq 'package' || $ValClass[$tno - 1] eq 'k' && $ValPerl[$tno - 1] eq 'require' && $class ne 'q'","right":"$ValClass[$tno - 1] eq 'k' && $ValPerl[$tno - 1] =~ /^(?:sub|use|no)$/","op":"||","type":"or_3"}],[2471,{"left":"$tno != 0","right":"$ValClass[$tno - 1] eq 'D' || $ValClass[$tno - 1] eq 'c' && $ValPerl[$tno - 1] eq 'package' || $ValClass[$tno - 1] eq 'k' && $ValPerl[$tno - 1] eq 'require' && $class ne 'q' || $ValClass[$tno - 1] eq 'k' && $ValPerl[$tno - 1] =~ /^(?:sub|use|no)$/","op":"and","type":"and_3"}],[2471,{"right":"$w eq \"pos\"","left":"$class eq \"f\"","type":"and_3","op":"and"}],[2471,{"type":"and_3","op":"and","right":"$w eq \"bless\"","left":"$class eq \"f\""}],[2471,{"right":"$w eq \"wantarray\"","left":"$class eq \"d\"","type":"and_3","op":"and"}],[2512,{"op":"and","type":"and_3","left":"$class eq \"c\"","right":"$tno > 0"}],[2512,{"right":"$w ne \"assert\"","left":"$class eq \"c\" and $tno > 0","type":"and_3","op":"and"}],[2512,{"right":"$Pythonizer::PassNo == &Pythonizer::PASS_1","left":"$class eq \"c\" and $tno > 0 and $w ne \"assert\"","type":"and_3","op":"and"}],[2512,{"right":"$ValPerl[0] ne 'do'","left":"$ValClass[0] ne 'C'","type":"or_3","op":"||"}],[2512,{"right":"$ValClass[0] ne 'C' || $ValPerl[0] ne 'do'","left":"$class eq \"c\" and $tno > 0 and $w ne \"assert\" and $Pythonizer::PassNo == &Pythonizer::PASS_1","type":"and_3","op":"and"}],[2516,{"type":"and_3","op":"and","right":"$tno > 0","left":"$class eq \"c\""}],[2516,{"op":"and","type":"and_3","left":"$class eq \"c\" and $tno > 0","right":"$w ne \"assert\""}],[2516,{"left":"$class eq \"c\" and $tno > 0 and $w ne \"assert\"","right":"$Pythonizer::PassNo == &Pythonizer::PASS_2","op":"and","type":"and_3"}],[2516,{"left":"$ValClass[0] ne 'C'","right":"$ValPerl[0] ne 'do'","op":"||","type":"or_3"}],[2516,{"op":"and","type":"and_3","left":"$class eq \"c\" and $tno > 0 and $w ne \"assert\" and $Pythonizer::PassNo == &Pythonizer::PASS_2","right":"$ValClass[0] ne 'C' || $ValPerl[0] ne 'do'"}],[2527,{"type":"and_3","op":"and","right":"$ValPerl[0] eq \"local\"","left":"$ValClass[0] eq \"t\""}],[2516,{"left":"$class eq \"c\"","right":"$Pythonizer::PassNo == &Pythonizer::PASS_1","op":"and","type":"and_3"}],[2516,{"type":"or_3","op":"||","right":"$w eq 'unless'","left":"$w eq 'if'"}],[2516,{"right":"$w eq 'if' || $w eq 'unless'","left":"$class eq \"c\" and $Pythonizer::PassNo == &Pythonizer::PASS_1","type":"and_3","op":"and"}],[2516,{"right":"defined $nesting_last","left":"$class eq \"c\" and $Pythonizer::PassNo == &Pythonizer::PASS_1 and $w eq 'if' || $w eq 'unless'","type":"and_3","op":"and"}],[2516,{"type":"and_3","op":"and","right":"$nesting_last->{'type'} eq \"do\"","left":"$class eq \"c\" and $Pythonizer::PassNo == &Pythonizer::PASS_1 and $w eq 'if' || $w eq 'unless' and defined $nesting_last"}],[2516,{"type":"and_3","op":"and","right":"$source =~ /^(\\w+)(.*?);/","left":"$class eq \"c\" and $Pythonizer::PassNo == &Pythonizer::PASS_1 and $w eq 'if' || $w eq 'unless' and defined $nesting_last and $nesting_last->{'type'} eq \"do\""}],[2516,{"op":"and","type":"and_3","left":"$class eq \"C\"","right":"$Pythonizer::PassNo == &Pythonizer::PASS_1"}],[2516,{"right":"$w eq \"continue\"","left":"$class eq \"C\" and $Pythonizer::PassNo == &Pythonizer::PASS_1","type":"and_3","op":"and"}],[2516,{"type":"and_3","op":"and","right":"$Pythonizer::PassNo == &Pythonizer::PASS_1","left":"$class eq \"k\""}],[2516,{"left":"$class eq \"k\" and $Pythonizer::PassNo == &Pythonizer::PASS_1","right":"$w eq \"next\"","op":"and","type":"and_3"}],[2582,{"type":"and_3","op":"and","right":"$ValClass[0] ne \"c\"","left":"$balance % 2 == 0"}],[2582,{"type":"and_3","op":"and","right":"$ValClass[0] ne \"C\"","left":"$balance % 2 == 0 and $ValClass[0] ne \"c\""}],[2582,{"type":"and_3","op":"and","right":"bash_style_or_and_fix($cut)","left":"$balance % 2 == 0 and $ValClass[0] ne \"c\" and $ValClass[0] ne \"C\""}],[2589,{"type":"and_3","op":"and","right":"$w eq \"my\"","left":"$tno > 0"}],[2589,{"op":"and","type":"and_3","left":"$tno > 0 and $w eq \"my\"","right":"$Pythonizer::PassNo == &Pythonizer::PASS_2"}],[2600,{"left":"$delim eq \";\"","right":"length $source == length($w) + 1","op":"and","type":"and_3"}],[2600,{"type":"or_3","op":"or","right":"$delim eq \";\" and length $source == length($w) + 1","left":"$delim eq \"\""}],[2621,{"right":"substr($ValPy[$tno], 0, 1) eq \"f\"","left":"index($ValPy[$tno], \"\\n\") != -1","type":"and_3","op":"and"}],[2621,{"right":"not $ValPy[$tno] =~ /^f\"\"\"/","left":"index($ValPy[$tno], \"\\n\") != -1 and substr($ValPy[$tno], 0, 1) eq \"f\"","type":"and_3","op":"and"}],[2600,{"right":"$w eq \"qr\"","left":"$w eq \"m\"","type":"or_3","op":"or"}],[2600,{"left":"$w eq \"m\" or $w eq \"qr\"","right":"$w eq \"s\"","op":"or","type":"or_3"}],[2639,{"right":"$w eq 'qr'","left":"$w eq 'm'","type":"or_3","op":"||"}],[2639,{"left":"$tno >= 1","right":"$ValPerl[$tno - 1] eq \"split\"","op":"and","type":"and_3"}],[2639,{"op":"and","type":"and_3","left":"$w eq 'm' || $w eq 'qr'","right":"($tno >= 1 and $ValPerl[$tno - 1] eq \"split\")"}],[2639,{"right":"$ValClass[$tno - 1] eq \"(\"","left":"$tno >= 2","type":"and_3","op":"and"}],[2639,{"type":"and_3","op":"and","right":"$ValPerl[$tno - 2] eq \"split\"","left":"$tno >= 2 and $ValClass[$tno - 1] eq \"(\""}],[2639,{"right":"$tno >= 2 and $ValClass[$tno - 1] eq \"(\" and $ValPerl[$tno - 2] eq \"split\"","left":"$w eq 'm' || $w eq 'qr' and ($tno >= 1 and $ValPerl[$tno - 1] eq \"split\")","type":"or_3","op":"or"}],[2639,{"left":"$w eq \"qr\"","right":"$ValClass[$tno - 1] eq \"~\"","op":"and","type":"and_3"}],[2639,{"op":"or","type":"or_3","left":"$w eq \"m\"","right":"$w eq \"qr\" and $ValClass[$tno - 1] eq \"~\""}],[2695,{"right":"$ValClass[$tno - 1] eq \"~\"","left":"$tno >= 1","type":"and_3","op":"and"}],[2600,{"right":"$w eq \"y\"","left":"$w eq \"tr\"","type":"or_3","op":"or"}],[2764,{"type":"or_3","op":"||","right":"$arg1 eq $arg2","left":"$arg2 eq ''"}],[2764,{"op":"and","type":"and_3","left":"$tr_modifier eq \"s\"","right":"$arg2 eq '' || $arg1 eq $arg2"}],[2802,{"op":"and","type":"and_3","left":"$tno >= 1","right":"$ValClass[$tno - 1] eq \"~\""}],[2838,{"left":"$ValPerl[0] eq \"use\"","right":"$ValPerl[1] ne \"constant\"","op":"and","type":"and_3"}],[2516,{"left":"$w eq \"autoflush\"","right":"$tno - 2 > 0","op":"and","type":"and_3"}],[2516,{"type":"and_3","op":"and","right":"$ValClass[$tno - 1] eq \"D\"","left":"$w eq \"autoflush\" and $tno - 2 > 0"}],[2516,{"right":"$ValPerl[$tno - 2] eq 'STDERR'","left":"$ValPerl[$tno - 2] eq 'STDOUT'","type":"or_3","op":"||"}],[2516,{"left":"$w eq \"autoflush\" and $tno - 2 > 0 and $ValClass[$tno - 1] eq \"D\"","right":"$ValPerl[$tno - 2] eq 'STDOUT' || $ValPerl[$tno - 2] eq 'STDERR'","op":"and","type":"and_3"}],[2460,{"left":"$tno > 1","right":"$ValPerl[$tno - 1] eq \"<<\"","op":"and","type":"and_3"}],[2460,{"left":"$tno > 1 and $ValPerl[$tno - 1] eq \"<<\"","right":"index(\"sd)\", $ValClass[$tno - 2]) == -1","op":"and","type":"and_3"}],[2460,{"op":"and","type":"and_3","left":"$tno > 2","right":"$ValPerl[$tno - 1] eq \"~\""}],[2460,{"type":"and_3","op":"and","right":"$ValPerl[$tno - 2] eq \"<<\"","left":"$tno > 2 and $ValPerl[$tno - 1] eq \"~\""}],[2460,{"left":"$tno > 2 and $ValPerl[$tno - 1] eq \"~\" and $ValPerl[$tno - 2] eq \"<<\"","right":"index(\"sd)\", $ValClass[$tno - 3]) == -1","op":"and","type":"and_3"}],[2460,{"left":"$tno > 1 and $ValPerl[$tno - 1] eq \"<<\" and index(\"sd)\", $ValClass[$tno - 2]) == -1","right":"$tno > 2 and $ValPerl[$tno - 1] eq \"~\" and $ValPerl[$tno - 2] eq \"<<\" and index(\"sd)\", $ValClass[$tno - 3]) == -1","op":"or","type":"or_3"}],[2460,{"left":"$tno == 1","right":"$ValClass[0] eq \"t\"","op":"and","type":"and_3"}],[2873,{"left":"$Pythonizer::PassNo != &Pythonizer::PASS_0","right":"$ValClass[$tno] eq \"i\"","op":"and","type":"and_3"}],[2893,{"left":"$s2 eq \"\"","right":"$s2 =~ /\\s/","op":"or","type":"or_3"}],[2897,{"op":"||","type":"or_3","left":"$ValClass[$tno - 1] eq 's' && $ValPerl[$tno - 1] eq '$' || $ValClass[$tno - 1] eq '@'","right":"$ValClass[$tno - 1] eq '%' && !$had_space"}],[2897,{"type":"and_3","op":"and","right":"$ValClass[$tno - 1] eq 's' && $ValPerl[$tno - 1] eq '$' || $ValClass[$tno - 1] eq '@' || $ValClass[$tno - 1] eq '%' && !$had_space","left":"$tno != 0"}],[2908,{"right":"&Pythonizer::in_sub_call($tno)","left":"$was eq \"\\@\"","type":"and_3","op":"and"}],[2915,{"op":"and","type":"and_3","left":"$main::debug >= 3","right":"$Pythonizer::PassNo != &Pythonizer::PASS_0"}],[2918,{"op":"and","type":"and_3","left":"$tno == 1","right":"$ValClass[0] eq \"t\""}],[2918,{"type":"or_3","op":"or","right":"$tno == 1 and $ValClass[0] eq \"t\"","left":"$tno == 0"}],[2954,{"left":"$main::debug >= 3","right":"$Pythonizer::PassNo != &Pythonizer::PASS_0","op":"and","type":"and_3"}],[2966,{"left":"$s2 eq \"\"","right":"$s2 =~ /\\s/","op":"or","type":"or_3"}],[2991,{"op":"and","type":"and_3","left":"$tno >= 2","right":"$ValClass[$tno - 2] =~ /[sd'\"q]/"}],[2991,{"right":"$ValClass[$tno - 1] eq \">\"","left":"$tno >= 2 and $ValClass[$tno - 2] =~ /[sd'\"q]/","type":"and_3","op":"and"}],[3014,{"op":"or","type":"or_3","left":"$s2 eq \"\"","right":"$s2 =~ /\\s/"}],[2151,{"type":"and_3","op":"and","right":"($ch = substr($source, 1, 1)) ne \"&\"","left":"$s eq \"&\""}],[2151,{"right":"$ch ne \"=\"","left":"$s eq \"&\" and ($ch = substr($source, 1, 1)) ne \"&\"","type":"and_3","op":"and"}],[3073,{"type":"and_3","op":"and","right":"$w =~ /carp|confess|croak|cluck/","left":"substr($w, 0, 5) eq \"Carp'\""}],[3073,{"op":"and","type":"and_3","left":"substr($w, 0, 6) eq \"Carp::\"","right":"$w =~ /carp|confess|croak|cluck/"}],[3078,{"right":"$w =~ /isa/","left":"substr($w, 0, 10) eq \"UNIVERSAL'\"","type":"and_3","op":"and"}],[3078,{"op":"and","type":"and_3","left":"substr($w, 0, 11) eq \"UNIVERSAL::\"","right":"$w =~ /isa/"}],[3085,{"left":"$class eq \"f\"","right":"not $core","op":"and","type":"and_3"}],[3085,{"right":"exists $Pythonizer::LocalSub{$w}","left":"exists $Pythonizer::UseSub{$w}","type":"or_3","op":"||"}],[3085,{"op":"and","type":"and_3","left":"$class eq \"f\" and not $core","right":"exists $Pythonizer::UseSub{$w} || exists $Pythonizer::LocalSub{$w}"}],[3097,{"type":"or_3","op":"||","right":"$ValClass[$tno - 1] ne '\\\\' && $ValPerl[$tno - 1] ne 'defined'","left":"$tno == 0"}],[3097,{"op":"and","type":"and_3","left":"cur_sub() ne \"__main__\"","right":"$tno == 0 || $ValClass[$tno - 1] ne '\\\\' && $ValPerl[$tno - 1] ne 'defined'"}],[3097,{"right":"$ValPerl[$tno - 2] eq 'defined'","left":"$tno - 2 >= 0 && $ValClass[$tno - 1] eq '('","type":"and_3","op":"&&"}],[3097,{"op":"and","type":"and_3","left":"cur_sub() ne \"__main__\" and $tno == 0 || $ValClass[$tno - 1] ne '\\\\' && $ValPerl[$tno - 1] ne 'defined'","right":"not $tno - 2 >= 0 && $ValClass[$tno - 1] eq '(' && $ValPerl[$tno - 2] eq 'defined'"}],[3097,{"right":"not substr($source, $cut) =~ /^\\s*\\(/","left":"cur_sub() ne \"__main__\" and $tno == 0 || $ValClass[$tno - 1] ne '\\\\' && $ValPerl[$tno - 1] ne 'defined' and not $tno - 2 >= 0 && $ValClass[$tno - 1] eq '(' && $ValPerl[$tno - 2] eq 'defined'","type":"and_3","op":"and"}],[3100,{"left":"$main::debug >= 3","right":"$Pythonizer::PassNo != &Pythonizer::PASS_0","op":"and","type":"and_3"}],[3105,{"type":"and_3","op":"and","right":"$Pythonizer::PassNo != &Pythonizer::PASS_0","left":"$main::debug >= 3"}],[3113,{"left":"$main::debug >= 3","right":"$Pythonizer::PassNo != &Pythonizer::PASS_0","op":"and","type":"and_3"}],[2151,{"op":"and","type":"and_3","left":"$s eq \"*\"","right":"($ch = substr($source, 1, 1)) ne \"*\""}],[2151,{"op":"and","type":"and_3","left":"$s eq \"*\" and ($ch = substr($source, 1, 1)) ne \"*\"","right":"$ch ne \"=\""}],[2151,{"type":"or_3","op":"||","right":"!($ValClass[$tno - 1] =~ /[sdfi)]/)","left":"$tno == 0"}],[2151,{"left":"$s eq \"*\" and ($ch = substr($source, 1, 1)) ne \"*\" and $ch ne \"=\"","right":"$tno == 0 || !($ValClass[$tno - 1] =~ /[sdfi)]/)","op":"and","type":"and_3"}],[2151,{"type":"or_3","op":"or","right":"$s eq \"(\"","left":"$s eq \"[\""}],[3155,{"type":"and_3","op":"and","right":"$ValClass[$tno - 1] eq \"D\"","left":"$tno != 0"}],[3155,{"right":"$ValClass[0] eq \"k\"","left":"$tno == 2","type":"and_3","op":"and"}],[3155,{"right":"$ValPerl[0] eq \"sub\"","left":"$tno == 2 and $ValClass[0] eq \"k\"","type":"and_3","op":"and"}],[3155,{"right":"$ValClass[1] eq \"i\"","left":"$tno == 2 and $ValClass[0] eq \"k\" and $ValPerl[0] eq \"sub\"","type":"and_3","op":"and"}],[3155,{"right":"($tno == 2 and $ValClass[0] eq \"k\" and $ValPerl[0] eq \"sub\" and $ValClass[1] eq \"i\")","left":"$s eq \"(\"","type":"and_3","op":"and"}],[3155,{"right":"$ValClass[$tno - 1] eq \"k\"","left":"$tno != 0","type":"and_3","op":"and"}],[3155,{"type":"and_3","op":"and","right":"$ValPerl[$tno - 1] eq \"sub\"","left":"$tno != 0 and $ValClass[$tno - 1] eq \"k\""}],[3155,{"type":"or_3","op":"or","right":"$tno != 0 and $ValClass[$tno - 1] eq \"k\" and $ValPerl[$tno - 1] eq \"sub\"","left":"$s eq \"(\" and ($tno == 2 and $ValClass[0] eq \"k\" and $ValPerl[0] eq \"sub\" and $ValClass[1] eq \"i\")"}],[2151,{"type":"or_3","op":"or","right":"$s eq \")\"","left":"$s eq \"]\""}],[3184,{"type":"or_3","op":"or","right":"$trigram eq \">>=\"","left":"$trigram eq \"**=\""}],[3184,{"right":"$trigram eq \"<<=\"","left":"$trigram eq \"**=\" or $trigram eq \">>=\"","type":"or_3","op":"or"}],[3184,{"right":"$trigram eq \"||=\"","left":"$trigram eq \"**=\" or $trigram eq \">>=\" or $trigram eq \"<<=\"","type":"or_3","op":"or"}],[3184,{"right":"$trigram eq \"&&=\"","left":"$trigram eq \"**=\" or $trigram eq \">>=\" or $trigram eq \"<<=\" or $trigram eq \"||=\"","type":"or_3","op":"or"}],[3201,{"left":"$balance % 2 == 0","right":"$ValClass[0] ne \"c\"","op":"and","type":"and_3"}],[3201,{"right":"$ValClass[0] ne \"C\"","left":"$balance % 2 == 0 and $ValClass[0] ne \"c\"","type":"and_3","op":"and"}],[3201,{"op":"and","type":"and_3","left":"$balance % 2 == 0 and $ValClass[0] ne \"c\" and $ValClass[0] ne \"C\"","right":"bash_style_or_and_fix(3)"}],[3216,{"op":"and","type":"and_3","left":"$digram eq \"=>\"","right":"$tno != 0"}],[3217,{"right":"$ValPerl[$tno - 1] eq \"delete\"","left":"$ValClass[$tno - 1] eq \"f\"","type":"and_3","op":"and"}],[3217,{"op":"and","type":"and_3","left":"$tno >= 3","right":"$ValClass[0] eq \"k\""}],[3217,{"right":"$ValPerl[0] eq \"use\"","left":"$tno >= 3 and $ValClass[0] eq \"k\"","type":"and_3","op":"and"}],[3217,{"type":"and_3","op":"and","right":"$ValClass[1] eq \"i\"","left":"$tno >= 3 and $ValClass[0] eq \"k\" and $ValPerl[0] eq \"use\""}],[3217,{"right":"$ValPerl[1] eq \"constant\"","left":"$tno >= 3 and $ValClass[0] eq \"k\" and $ValPerl[0] eq \"use\" and $ValClass[1] eq \"i\"","type":"and_3","op":"and"}],[3217,{"op":"and","type":"and_3","left":"$tno >= 3 and $ValClass[0] eq \"k\" and $ValPerl[0] eq \"use\" and $ValClass[1] eq \"i\" and $ValPerl[1] eq \"constant\"","right":"$ValClass[$tno - 1] eq \"i\""}],[3230,{"right":"index($TokenStr, \"o\") != -1","left":"index($TokenStr, \"c\") != -1","type":"or_3","op":"or"}],[3230,{"right":"index($TokenStr, 0) != -1","left":"index($TokenStr, \"c\") != -1 or index($TokenStr, \"o\") != -1","type":"or_3","op":"or"}],[3246,{"right":"substr($source, 2, 1) =~ /\\s/","left":"exists $DASH_X{$s2}","type":"and_3","op":"and"}],[3267,{"right":"$quadgram eq \"<<>>\"","left":"$source =~ /^<(\\:?\\:?\\'?\\w*((?:(?:\\:\\:)|\\')\\w+)*)>/","type":"or_3","op":"or"}],[3279,{"right":"exists $keyword_tr{$fh}","left":"$fh eq \"\"","type":"or_3","op":"or"}],[3279,{"left":"$fh eq \"\" or exists $keyword_tr{$fh}","right":"exists $FileHandles{$fh}","op":"or","type":"or_3"}],[3285,{"left":"$tno >= 2","right":"$ValClass[$tno - 2] eq \"a\"","op":"and","type":"and_3"}],[3285,{"type":"and_3","op":"and","right":"$ValClass[$tno - 1] eq \"=\"","left":"$tno >= 2 and $ValClass[$tno - 2] eq \"a\""}],[3285,{"right":"$ValPerl[0] eq \"while\"","left":"$ValClass[0] eq \"c\"","type":"and_3","op":"and"}],[3345,{"right":"$ValClass[$tno - 2] eq \"a\"","left":"$tno >= 2","type":"and_3","op":"and"}],[3345,{"right":"$ValClass[$tno - 1] eq \"=\"","left":"$tno >= 2 and $ValClass[$tno - 2] eq \"a\"","type":"and_3","op":"and"}],[3345,{"type":"and_3","op":"and","right":"$ValPerl[0] eq \"while\"","left":"$ValClass[0] eq \"c\""}],[3267,{"op":"and","type":"and_3","left":"$tno > 0","right":"index(\"(.=\", $ValClass[$tno - 1]) != -1"}],[3267,{"op":"and","type":"and_3","left":"$tno > 0 and index(\"(.=\", $ValClass[$tno - 1]) != -1","right":"$source =~ /^<[^>]+>/"}],[3380,{"right":"not is_concat()","left":"$source =~ /(^[.]\\d+(?:[_]\\d+)*(?:[Ee][+-]?\\d+(?:[_]\\d+)*)?)/","type":"and_3","op":"and"}],[3385,{"type":"and_3","op":"and","right":"$ValClass[$tno - 1] eq \"d\"","left":"$tno != 0"}],[3385,{"right":"$ValPy[$tno - 1] =~ /^(\\d+)\\.(\\d+)$/","left":"$tno != 0 and $ValClass[$tno - 1] eq \"d\"","type":"and_3","op":"and"}],[3385,{"op":"and","type":"and_3","left":"$tno != 0","right":"$ValClass[$tno - 1] eq \"\\\"\""}],[3378,{"left":"$s eq \":\"","right":"$tno == 1","op":"and","type":"and_3"}],[3378,{"type":"and_3","op":"and","right":"$ValClass[0] eq \"i\"","left":"$s eq \":\" and $tno == 1"}],[3378,{"type":"and_3","op":"and","right":"$tno != 0","left":"$s eq \",\""}],[3378,{"right":"$ValClass[$tno - 1] eq \",\"","left":"$s eq \",\" and $tno != 0","type":"and_3","op":"and"}],[2025,{"left":"defined $source","right":"$source ne \"\"","op":"and","type":"and_3"}],[3449,{"left":"$ValPerl[0] eq 'last'","right":"$ValPerl[0] eq 'next'","op":"||","type":"or_3"}],[3449,{"right":"$ValPerl[0] eq 'last' || $ValPerl[0] eq 'next'","left":"$ValClass[0] eq \"k\"","type":"and_3","op":"and"}],[3449,{"right":"$Pythonizer::PassNo == &Pythonizer::PASS_1","left":"$ValClass[0] eq \"k\"","type":"and_3","op":"and"}],[3449,{"left":"$ValClass[0] eq \"k\" and $Pythonizer::PassNo == &Pythonizer::PASS_1","right":"$ValPerl[0] eq \"redo\"","op":"and","type":"and_3"}],[3449,{"left":"$ValClass[0] eq \"t\"","right":"$ValPerl[0] eq \"local\"","op":"and","type":"and_3"}],[3449,{"type":"and_3","op":"and","right":"$Pythonizer::PassNo == &Pythonizer::PASS_1","left":"$ValClass[0] eq \"t\" and $ValPerl[0] eq \"local\""}],[3449,{"op":"||","type":"or_3","left":"$ValPerl[0] eq '$-'","right":"$ValPerl[0] eq '$+'"}],[3449,{"op":"and","type":"and_3","left":"$ValClass[0] eq \"s\"","right":"$ValPerl[0] eq '$-' || $ValPerl[0] eq '$+'"}],[3449,{"left":"$ValClass[0] eq \"s\" and $ValPerl[0] eq '$-' || $ValPerl[0] eq '$+'","right":"$ValClass[1] eq \"(\"","op":"and","type":"and_3"}],[3449,{"type":"and_3","op":"and","right":"$ValPerl[0] =~ /^(?:no|use)$/","left":"$ValClass[0] eq \"k\""}],[3449,{"right":"$ValPerl[1] eq \"warnings\"","left":"$ValClass[0] eq \"k\" and $ValPerl[0] =~ /^(?:no|use)$/","type":"and_3","op":"and"}],[3449,{"left":"$ValClass[0] eq \"k\"","right":"$ValPerl[0] eq \"use\"","op":"and","type":"and_3"}],[3449,{"right":"$ValPerl[1] eq \"lib\"","left":"$ValClass[0] eq \"k\" and $ValPerl[0] eq \"use\"","type":"and_3","op":"and"}],[3449,{"type":"and_3","op":"and","right":"$ValPerl[0] eq \"use\"","left":"$ValClass[0] eq \"k\""}],[3449,{"op":"and","type":"and_3","left":"$ValClass[0] eq \"k\" and $ValPerl[0] eq \"use\"","right":"$ValPerl[1] eq \"overload\""}],[3449,{"type":"or_3","op":"||","right":"$ValPerl[0] eq 'require'","left":"$ValPerl[0] eq 'use'"}],[3449,{"left":"$ValClass[0] eq \"k\"","right":"$ValPerl[0] eq 'use' || $ValPerl[0] eq 'require'","op":"and","type":"and_3"}],[3449,{"type":"and_3","op":"and","right":"$ValClass[0] eq \"t\"","left":"$#ValClass == 3"}],[3449,{"op":"and","type":"and_3","left":"$#ValClass == 3 and $ValClass[0] eq \"t\"","right":"$ValClass[1] eq \"a\""}],[3449,{"right":"$ValPerl[1] eq \"\\@ISA\"","left":"$#ValClass == 3 and $ValClass[0] eq \"t\" and $ValClass[1] eq \"a\"","type":"and_3","op":"and"}],[3449,{"type":"and_3","op":"and","right":"$ValClass[2] eq \"=\"","left":"$#ValClass == 3 and $ValClass[0] eq \"t\" and $ValClass[1] eq \"a\" and $ValPerl[1] eq \"\\@ISA\""}],[3449,{"type":"and_3","op":"and","right":"$ValClass[3] eq \"q\"","left":"$#ValClass == 3 and $ValClass[0] eq \"t\" and $ValClass[1] eq \"a\" and $ValPerl[1] eq \"\\@ISA\" and $ValClass[2] eq \"=\""}],[3449,{"op":"and","type":"and_3","left":"$#ValClass == 3 and $ValClass[0] eq \"t\" and $ValClass[1] eq \"a\" and $ValPerl[1] eq \"\\@ISA\" and $ValClass[2] eq \"=\" and $ValClass[3] eq \"q\"","right":"cur_sub() eq \"__main__\""}],[3449,{"type":"and_3","op":"and","right":"$ValPerl[0] eq \"return\"","left":"$ValClass[0] eq \"k\""}],[3485,{"type":"or_3","op":"or","right":"$ValPerl[$i] eq \"next\"","left":"$ValPerl[$i] eq \"last\""}],[3485,{"op":"or","type":"or_3","left":"$ValPerl[$i] eq \"use\"","right":"$ValPerl[$i] eq \"require\""}],[3493,{"op":"||","type":"or_3","left":"$ValPerl[$i] eq '$-'","right":"$ValPerl[$i] eq '$+'"}],[3493,{"left":"$i + 1 <= $#ValClass","right":"$ValClass[$i + 1] eq \"(\"","op":"and","type":"and_3"}],[3493,{"type":"and_3","op":"and","right":"($i + 1 <= $#ValClass and $ValClass[$i + 1] eq \"(\")","left":"$ValPerl[$i] eq '$-' || $ValPerl[$i] eq '$+'"}],[3493,{"op":"and","type":"and_3","left":"$ValClass[$i - 1] eq \"f\"","right":"$ValPerl[$i - 1] eq \"pos\""}],[3493,{"left":"$ValClass[$i - 1] eq \"(\"","right":"$ValClass[$i - 2] eq \"f\"","op":"and","type":"and_3"}],[3493,{"op":"and","type":"and_3","left":"$ValClass[$i - 1] eq \"(\" and $ValClass[$i - 2] eq \"f\"","right":"$ValPerl[$i - 2] eq \"pos\""}],[3493,{"right":"$ValClass[$i - 1] eq \"(\" and $ValClass[$i - 2] eq \"f\" and $ValPerl[$i - 2] eq \"pos\"","left":"$ValClass[$i - 1] eq \"f\" and $ValPerl[$i - 1] eq \"pos\"","type":"or_3","op":"or"}],[3484,{"op":"and","type":"and_3","left":"$ValClass[$i] eq \"f\"","right":"$ValPy[$i] eq \"_last_ndx\""}],[3484,{"type":"and_3","op":"and","right":"$i + 1 < $#ValClass","left":"$ValClass[$i] eq \"f\" and $ValPy[$i] eq \"_last_ndx\""}],[3484,{"type":"and_3","op":"and","right":"$ValClass[$i + 1] eq \"(\"","left":"$ValClass[$i] eq \"f\" and $ValPy[$i] eq \"_last_ndx\" and $i + 1 < $#ValClass"}],[3484,{"left":"$ValClass[0] eq \"c\"","right":"$ValPerl[0] eq \"while\"","op":"and","type":"and_3"}],[3484,{"right":"$ValClass[$i] eq \"f\"","left":"$ValClass[0] eq \"c\" and $ValPerl[0] eq \"while\"","type":"and_3","op":"and"}],[3484,{"right":"exists $WHILE_MAGIC_FUNCTIONS{$ValPerl[$i]}","left":"$ValClass[0] eq \"c\" and $ValPerl[0] eq \"while\" and $ValClass[$i] eq \"f\"","type":"and_3","op":"and"}],[3523,{"left":"$main::debug >= 2","right":"$Pythonizer::PassNo == &Pythonizer::PASS_2","op":"and","type":"and_3"}],[3543,{"op":"or","type":"or_3","left":"length $source == 0","right":"$source =~ /^\\s+$/"}],[3572,{"right":"$ValClass[$tno] eq \"\\\"\"","left":"$ExtractingTokensFromDoubleQuotedStringEnd > 0","type":"and_3","op":"and"}],[3572,{"left":"$ExtractingTokensFromDoubleQuotedStringEnd > 0 and $ValClass[$tno] eq \"\\\"\"","right":"substr($ValPy[$tno], 0, 4) eq \"f\\\"\\\"\\\"\"","op":"and","type":"and_3"}],[3577,{"op":"and","type":"and_3","left":"$main::debug >= 3","right":"$Pythonizer::PassNo != &Pythonizer::PASS_0"}],[3591,{"type":"and_3","op":"and","right":"$cut != 0","left":"$ExtractingTokensFromDoubleQuotedStringEnd <= 0"}],[3615,{"left":"exists $SpecialVarsUsed{'$/'}","right":"exists $SpecialVarsUsed{'$.'}","op":"or","type":"or_3"}],[3655,{"op":"||","type":"or_3","left":"$tstr =~ /^t?[ahs](?:\\(.*\\))*=/ || $tstr =~ /^t?\\(.*,.*\\)=/","right":"$tstr =~ /^kiiA/ && $ValPerl[0] eq 'use' && ($ValPerl[1] eq 'constant' || $ValPerl[1] eq 'overload')"}],[3655,{"right":"not $is_low_prec","left":"$tstr =~ /^t?[ahs](?:\\(.*\\))*=/ || $tstr =~ /^t?\\(.*,.*\\)=/ || $tstr =~ /^kiiA/ && $ValPerl[0] eq 'use' && ($ValPerl[1] eq 'constant' || $ValPerl[1] eq 'overload')","type":"and_3","op":"and"}],[3655,{"type":"or_3","op":"||","right":"!(substr($source, $split) =~ /^\\s*(?:return|next|last|assert|delete|require|die)\\b/)","left":"$split >= length $source"}],[3655,{"left":"$tstr =~ /^t?[ahs](?:\\(.*\\))*=/ || $tstr =~ /^t?\\(.*,.*\\)=/ || $tstr =~ /^kiiA/ && $ValPerl[0] eq 'use' && ($ValPerl[1] eq 'constant' || $ValPerl[1] eq 'overload') and not $is_low_prec","right":"$split >= length $source || !(substr($source, $split) =~ /^\\s*(?:return|next|last|assert|delete|require|die)\\b/)","op":"and","type":"and_3"}],[3655,{"type":"and_3","op":"and","right":"$ValPerl[0] eq \"return\"","left":"$ValClass[0] eq \"k\""}],[3675,{"type":"and_3","op":"and","right":"$ValClass[-2]","left":"$ValClass[0] eq \"(\""}],[3712,{"left":"$s2 eq '$'","right":"$s2 eq '%'","op":"||","type":"or_3"}],[3712,{"type":"and_3","op":"and","right":"substr($source, 2, 1) =~ /[\\w:']/","left":"$s2 eq '$' || $s2 eq '%'"}],[3715,{"op":"and","type":"and_3","left":"$s2 eq \"^\"","right":"substr($source, 2, 1) =~ /[A-Z]/"}],[3739,{"type":"and_3","op":"and","right":"exists $SPECIAL_VAR_FULL{$1}","left":"$source =~ /^..(\\w+)/"}],[3748,{"op":"and","type":"and_3","left":"not $full","right":"$s3 =~ /\\w/"}],[3715,{"op":"and","type":"and_3","left":"index($specials, $s2) != -1","right":"substr($source, 1, 2) ne \"::\""}],[3799,{"op":"or","type":"or_3","left":"$source =~ /^..\\{(\\:?\\:?\\'?\\w+((?:(?:\\:\\:)|\\')\\w+)*)\\}/","right":"$source =~ /^..\\$?(\\:?\\:?\\'?\\w+((?:(?:\\:\\:)|\\')\\w+)*)/"}],[3804,{"op":"and","type":"and_3","left":"not defined $1","right":"substr($source, 2, 1) eq \"{\""}],[3804,{"type":"and_3","op":"and","right":"substr($source, 2, 1) eq \"+\"","left":"not defined $1"}],[3859,{"type":"or_3","op":"||","right":"$ValClass[$tno - 1] eq 's' && $ValPerl[$tno - 1] eq '$'","left":"$ValClass[$tno - 1] eq '@'"}],[3859,{"type":"and_3","op":"and","right":"$ValClass[$tno - 1] eq '@' || $ValClass[$tno - 1] eq 's' && $ValPerl[$tno - 1] eq '$'","left":"$tno != 0"}],[3859,{"op":"or","type":"or_3","left":"$ate_dollar == $tno","right":"$tno != 0 and $ValClass[$tno - 1] eq '@' || $ValClass[$tno - 1] eq 's' && $ValPerl[$tno - 1] eq '$'"}],[3865,{"type":"and_3","op":"and","right":"not $in_string","left":"$next_c =~ /\\s/"}],[3866,{"op":"and","type":"and_3","left":"$in_regex","right":"$next_c eq \"[\""}],[3875,{"op":"or","type":"or_3","left":"$k == 0","right":"substr($name, $k) eq \"main\""}],[3894,{"right":"substr($name, $k) eq \"main\"","left":"$k == 0","type":"or_3","op":"or"}],[3916,{"op":"||","type":"or_3","left":"!$in_regex","right":"substr($source, 3, 1) =~ /[\\d\\$]/"}],[3916,{"right":"!$in_regex || substr($source, 3, 1) =~ /[\\d\\$]/","left":"substr($source, 2, 1) eq \"[\"","type":"and_3","op":"and"}],[3913,{"left":"$s2 eq \"a\"","right":"$s2 eq \"b\"","op":"or","type":"or_3"}],[3953,{"right":"substr($source, $cut, 1) eq \"[\"","left":"$cut < length $source","type":"and_3","op":"and"}],[4003,{"type":"and_3","op":"and","right":"$sym eq \"(\"","left":"$prev_sym ne \"\\\\\""}],[4003,{"left":"$prev_sym eq \"\\$\"","right":"substr($myregex, $i) =~ /^(\\w+)/","op":"and","type":"and_3"}],[4003,{"op":"and","type":"and_3","left":"$prev_sym eq \"\\$\" and substr($myregex, $i) =~ /^(\\w+)/","right":"exists $Pythonizer::VarType{$1}"}],[4003,{"op":"||","type":"or_3","left":"exists $Pythonizer::VarType{$1}{$cs} && $Pythonizer::VarType{$1}{$cs} eq 'R'","right":"exists $Pythonizer::VarType{$1}{'__main__'} && $Pythonizer::VarType{$1}{'__main__'} eq 'R'"}],[4003,{"type":"and_3","op":"and","right":"exists $Pythonizer::VarType{$1}{$cs} && $Pythonizer::VarType{$1}{$cs} eq 'R' || exists $Pythonizer::VarType{$1}{'__main__'} && $Pythonizer::VarType{$1}{'__main__'} eq 'R'","left":"$prev_sym eq \"\\$\" and substr($myregex, $i) =~ /^(\\w+)/ and exists $Pythonizer::VarType{$1}"}],[4003,{"type":"and_3","op":"and","right":"index(\".*+()[]?^\\$|\", $sym) >= -1","left":"$prev_sym ne \"\\\\\""}],[4003,{"right":"lc($sym) =~ /[bsdwSDW]/","left":"$prev_sym eq \"\\\\\"","type":"and_3","op":"and"}],[4047,{"type":"and_3","op":"and","right":"exists $SpecialVarsUsed{'@-'}{$cs}","left":"exists $SpecialVarsUsed{'@-'}"}],[4047,{"left":"exists $SpecialVarsUsed{'@+'}","right":"exists $SpecialVarsUsed{'@-'}{$cs}","op":"and","type":"and_3"}],[4047,{"op":"or","type":"or_3","left":"exists $SpecialVarsUsed{'@-'} and exists $SpecialVarsUsed{'@-'}{$cs}","right":"exists $SpecialVarsUsed{'@+'} and exists $SpecialVarsUsed{'@-'}{$cs}"}],[4052,{"op":"and","type":"and_3","left":"$main::debug > 3","right":"$Pythonizer::PassNo != &Pythonizer::PASS_0"}],[4064,{"right":"$ValClass[$tno - 1] eq \"~\"","left":"$tno >= 1","type":"and_3","op":"and"}],[4139,{"type":"and_3","op":"and","right":"$sym eq $opening_delim","left":"defined $opening_delim"}],[4214,{"op":"and","type":"and_3","left":"$main::debug >= 3","right":"$Pythonizer::PassNo != &Pythonizer::PASS_0"}],[4226,{"left":"$k == -1","right":"$k == length($quote) - 1","op":"||","type":"or_3"}],[4226,{"right":"index($quote, \"\\@\") == -1","left":"$k == -1 || $k == length($quote) - 1","type":"and_3","op":"and"}],[4226,{"type":"or_3","op":"or","right":"$k == -1 || $k == length($quote) - 1 and index($quote, \"\\@\") == -1","left":"$Pythonizer::PassNo == &Pythonizer::PASS_0"}],[4238,{"right":"$close_pos != 0","left":"$Pythonizer::PassNo == &Pythonizer::PASS_1","type":"and_3","op":"and"}],[4238,{"right":"$last_varclass_lno != $.","left":"$Pythonizer::PassNo == &Pythonizer::PASS_1","type":"and_3","op":"and"}],[4238,{"type":"and_3","op":"and","right":"$last_varclass_lno","left":"$Pythonizer::PassNo == &Pythonizer::PASS_1 and $last_varclass_lno != $."}],[4265,{"right":"index($quote, \"\\n\") == -1","left":"index($quote, \"\\\"\") == -1","type":"and_3","op":"and"}],[4265,{"right":"index($quote, \"{\") == -1","left":"index($quote, \"'\") == -1","type":"and_3","op":"and"}],[4265,{"left":"index($quote, \"'\") == -1 and index($quote, \"{\") == -1","right":"index($quote, \"\\n\") == -1","op":"and","type":"and_3"}],[4265,{"type":"and_3","op":"and","right":"index($quote, \"\\\\\") == -1","left":"index($quote, \"'\") == -1 and index($quote, \"{\") == -1 and index($quote, \"\\n\") == -1"}],[4282,{"left":"$special_escape_flags == 0","right":"!($special_escape_flags & 1)","op":"||","type":"or_3"}],[4282,{"type":"and_3","op":"and","right":"$special_escape_flags == 0 || !($special_escape_flags & 1)","left":"$special_escape_mode == 0"}],[4317,{"op":"||","type":"or_3","left":"$sig eq '$'","right":"$sig eq '@'"}],[4317,{"type":"and_3","op":"and","right":"$k + 1 < length $quote","left":"$sig eq '$' || $sig eq '@'"}],[4362,{"left":"$special_escape_mode == 0","right":"$special_escape_flags == 0","op":"and","type":"and_3"}],[4390,{"left":"($next_3 = substr($quote, $k, 3)) eq \"L\\\\u\"","right":"$next_3 eq \"U\\\\l\"","op":"or","type":"or_3"}],[4463,{"op":"and","type":"and_3","left":"$k >= 0","right":"substr($quote, $k, 1) eq $sig"}],[4485,{"op":"and","type":"and_3","left":"$in_regex","right":"$sig eq \"\\$\""}],[4502,{"type":"and_3","op":"and","right":"$pc =~ /\\w/","left":"$sig eq \"\\@\""}],[4502,{"op":"and","type":"and_3","left":"$sig eq \"\\@\" and $pc =~ /\\w/","right":"($dot = index($quote, \".\")) != -1"}],[4510,{"right":"substr($quote, 1) =~ /^\\s+$/","left":"substr($quote, 0, 1) eq $sig","type":"and_3","op":"and"}],[4510,{"left":"$quote eq $sig","right":"substr($quote, 0, 1) eq $sig and substr($quote, 1) =~ /^\\s+$/","op":"or","type":"or_3"}],[4531,{"right":"substr($quote, 1, 1) eq \"{\"","left":"length $quote != 0","type":"and_3","op":"and"}],[4533,{"left":"substr($quote, 2, 2) eq \"\\\\(\"","right":"$end_br != -1","op":"and","type":"and_3"}],[4545,{"right":"$s2 =~ /\\s/","left":"$s2 eq \"\"","type":"or_3","op":"or"}],[4557,{"right":"$cut == 2","left":"$in_regex","type":"and_3","op":"and"}],[4557,{"right":"substr($quote, 0, 2) eq \"\\$)\"","left":"$in_regex and $cut == 2","type":"and_3","op":"and"}],[4594,{"right":"$next_c eq \"[\"","left":"$in_regex","type":"and_3","op":"and"}],[4613,{"op":"and","type":"and_3","left":"$in_regex","right":"exists $Pythonizer::VarType{$ValPy[$tno]}"}],[4613,{"right":"exists $Pythonizer::VarType{$ValPy[$tno]}{'__main__'} && $Pythonizer::VarType{$ValPy[$tno]}{'__main__'} eq 'R'","left":"exists $Pythonizer::VarType{$ValPy[$tno]}{$cs} && $Pythonizer::VarType{$ValPy[$tno]}{$cs} eq 'R'","type":"or_3","op":"||"}],[4613,{"type":"and_3","op":"and","right":"exists $Pythonizer::VarType{$ValPy[$tno]}{$cs} && $Pythonizer::VarType{$ValPy[$tno]}{$cs} eq 'R' || exists $Pythonizer::VarType{$ValPy[$tno]}{'__main__'} && $Pythonizer::VarType{$ValPy[$tno]}{'__main__'} eq 'R'","left":"$in_regex and exists $Pythonizer::VarType{$ValPy[$tno]}"}],[4622,{"type":"and_3","op":"and","right":"substr($quote, 0, 3) eq \"\\@[%\"","left":"$end_br > 0"}],[4622,{"op":"and","type":"and_3","left":"$end_br > 0 and substr($quote, 0, 3) eq \"\\@[%\"","right":"substr($quote, 3, 1) =~ /[\\w:]/"}],[4622,{"op":"and","type":"and_3","left":"$end_br > 0","right":"substr($quote, 0, 4) eq \"\\@ [%\""}],[4622,{"right":"substr($quote, 4, 1) =~ /[\\w:]/","left":"$end_br > 0 and substr($quote, 0, 4) eq \"\\@ [%\"","type":"and_3","op":"and"}],[4622,{"type":"and_3","op":"and","right":"substr($quote, 0, 2) eq \"\\@[\"","left":"$end_br > 0"}],[4622,{"type":"and_3","op":"and","right":"substr($quote, 0, 3) eq \"\\@ [\"","left":"$end_br > 0"}],[4680,{"left":"$end_br >= 0","right":"$n_len > $p_len","op":"and","type":"and_3"}],[4690,{"op":"or","type":"or_3","left":"$nx3 eq \"->[\"","right":"$nx3 eq \"->{\""}],[4698,{"type":"or_3","op":"||","right":"$ValPy[$tno] eq \"$DEFAULT_MATCH.group\"","left":"$ValPy[$tno] eq \"$DEFAULT_MATCH.start\" || $ValPy[$tno] eq \"$DEFAULT_MATCH.end\""}],[4698,{"left":"$ValPy[$tno] eq \"$DEFAULT_MATCH.start\" || $ValPy[$tno] eq \"$DEFAULT_MATCH.end\" || $ValPy[$tno] eq \"$DEFAULT_MATCH.group\"","right":"index(\"{[\", $next_c) != -1","op":"and","type":"and_3"}],[4722,{"op":"and","type":"and_3","left":"$in_regex","right":"$next_c eq \"[\""}],[4734,{"right":"substr($ind, $i + 1, 1) eq \">\"","left":"$c eq \"-\"","type":"and_3","op":"and"}],[4774,{"type":"or_3","op":"or","right":"$nx3 eq \"->{\"","left":"$nx3 eq \"->[\""}],[4790,{"type":"and_3","op":"and","right":"$special_escape_mode == 0","left":"$special_escape_flags == 1"}],[4805,{"left":"$special_escape_flags == 0","right":"!($special_escape_flags & 1)","op":"||","type":"or_3"}],[4805,{"right":"$special_escape_flags == 0 || !($special_escape_flags & 1)","left":"$special_escape_mode == 0","type":"and_3","op":"and"}],[4850,{"left":"substr($result, -1, 1) eq \"\\\"\"","right":"not is_escaped($result, length($result) - 1)","op":"and","type":"and_3"}],[4986,{"type":"or_3","op":"or","right":"$s2 =~ /\\s/","left":"$s2 eq \"\""}],[4988,{"right":"$end_br > 0","left":"$q2 ne $quote","type":"and_3","op":"and"}],[5001,{"type":"and_3","op":"and","right":"$sigil ne \"\"","left":"$cut < length $quote"}],[5003,{"right":"$nx3 eq \"->{\"","left":"$nx3 eq \"->[\"","type":"or_3","op":"or"}],[5007,{"op":"or","type":"or_3","left":"$d eq \"[\"","right":"$d eq \"{\""}],[5102,{"left":"$c eq \"\\$\"","right":"substr($str, $k + 1) =~ /^(\\:?\\:?\\w+(\\:\\:\\w+)*)/","op":"and","type":"and_3"}],[5106,{"right":"$nx3 eq \"->{\"","left":"$nx3 eq \"->[\"","type":"or_3","op":"or"}],[5121,{"right":"index(\"\\$\\@\", substr($str, $k - 1, 1)) == -1","left":"$k == 0","type":"or_3","op":"or"}],[5149,{"left":"$k + 1 < length $str","right":"substr($str, $k + 1, 1) eq $delim","op":"and","type":"and_3"}],[5162,{"op":"and","type":"and_3","left":"$arg1 =~ /^\\d/","right":"$Pythonizer::PassNo == &Pythonizer::PASS_2"}],[5256,{"right":"$Pythonizer::PassNo != &Pythonizer::PASS_0","left":"$main::debug >= 5","type":"and_3","op":"and"}],[5303,{"op":"||","type":"or_3","left":"$escape_all","right":"$ch ne \"\\n\" && $ch ne \"\\t\""}],[5303,{"left":"not $ch =~ /[[:print:]]/","right":"$escape_all || $ch ne \"\\n\" && $ch ne \"\\t\"","op":"and","type":"and_3"}],[5343,{"right":"not is_escaped($string, length($string) - 1)","left":"substr($string, -1, 1) eq \"\\\"\"","type":"and_3","op":"and"}],[5380,{"left":"$next_3 eq \"u\\\\L\"","right":"$next_3 eq \"l\\\\U\"","op":"or","type":"or_3"}],[5428,{"op":"and","type":"and_3","left":"not $is_regex","right":"substr($ch, 0, 1) eq \"\\\\\""}],[5463,{"right":"$Pythonizer::PassNo != &Pythonizer::PASS_0","left":"$main::debug > 4","type":"and_3","op":"and"}],[5524,{"left":"$regex =~ /\\(\\?R\\)/","right":"$regex =~ /\\(\\?[+-]\\d+\\)/","op":"or","type":"or_3"}],[5581,{"type":"and_3","op":"and","right":"$opening_delim eq \"'\"","left":"$ch2 eq \"'\""}],[5581,{"left":"$ch2 eq $opening_delim","right":"$ch2 eq $closing_delim","op":"or","type":"or_3"}],[5579,{"op":"and","type":"and_3","left":"$ch eq \"'\"","right":"$opening_delim eq \"'\""}],[5684,{"left":"$end_pos1 + 1 == $end_pos","right":"$end_pos > $pos","op":"and","type":"and_3"}],[5702,{"right":"$s eq \"\\\"\"","left":"$s eq \"'\"","type":"or_3","op":"or"}],[5778,{"type":"or_3","op":"or","right":"$s eq \"\\\"\"","left":"$s eq \"'\""}],[5811,{"right":"scalar @PythonCode == 0","left":"scalar @_ == 0","type":"and_3","op":"and"}],[5815,{"right":"$main::TrStatus < 0","left":"defined $main::TrStatus","type":"and_3","op":"and"}],[5815,{"op":"and","type":"and_3","left":"defined $main::TrStatus and $main::TrStatus < 0","right":"scalar @ValPy > 0"}],[5828,{"op":"or","type":"or_3","left":"index(\"'\\\"/\", $s) != -1","right":"$s =~ /\\w/"}],[5844,{"type":"and_3","op":"and","right":"length $ValCom[-1] > 1","left":"defined $ValCom[-1]"}],[5852,{"op":"and","type":"and_3","left":"defined $ValCom[$i]","right":"length $ValCom[$i] > 1"}],[5875,{"type":"and_3","op":"and","right":"exists $PYTHON_KEYWORD_SET{$line}","left":"defined $line"}],[5883,{"right":"substr($line, -1, 1) ne \" \"","left":"defined $line","type":"and_3","op":"and"}],[5882,{"right":"substr($line, -1, 1) =~ /[\\w'\"]/","left":"defined $line","type":"and_3","op":"and"}],[5882,{"left":"defined $line and substr($line, -1, 1) =~ /[\\w'\"]/","right":"$s =~ /[\\w'\"]/","op":"and","type":"and_3"}],[5882,{"right":"defined $line","left":"exists $SpaceBoth{$PythonCode[$i]}","type":"and_3","op":"and"}],[5882,{"right":"substr($line, -1, 1) ne \" \"","left":"exists $SpaceBoth{$PythonCode[$i]} and defined $line","type":"and_3","op":"and"}],[5922,{"op":"and","type":"and_3","left":"$main::import_perllib","right":"exists $main::Pyf{$_[$i]}"}],[5922,{"right":"$main::Pyf{$_[$i]} == 1","left":"$main::import_perllib and exists $main::Pyf{$_[$i]}","type":"and_3","op":"and"}],[5922,{"op":"and","type":"and_3","left":"$main::import_perllib and exists $main::Pyf{$_[$i]} and $main::Pyf{$_[$i]} == 1","right":"substr($_[$i], 0, length($PERLLIB) + 1) ne \"$PERLLIB.\""}],[6043,{"op":"and","type":"and_3","left":"length $TokenStr > 6","right":"substr($TokenStr, 0, 6) eq \"s(s^)=\""}],[6043,{"op":"and","type":"and_3","left":"($wart_pos = index($TokenStr, \"s^)\")) > -1","right":"$ValPerl[$wart_pos + 2] eq \"]\""}],[6043,{"left":"($wart_pos = index($TokenStr, \"(^s\")) > -1","right":"$ValPerl[$wart_pos] eq \"[\"","op":"and","type":"and_3"}],[6141,{"left":"$i != 0","right":"$id eq $name","op":"||","type":"or_3"}],[6141,{"left":"$id eq $DEFAULT_PACKAGE","right":"$i != 0 || $id eq $name","op":"and","type":"and_3"}],[6141,{"type":"and_3","op":"and","right":"not $is_package_name","left":"$id eq $DEFAULT_PACKAGE and $i != 0 || $id eq $name"}],[6141,{"type":"and_3","op":"and","right":"not $main::implicit_global_my","left":"$id eq $DEFAULT_PACKAGE and $i != 0 || $id eq $name and not $is_package_name"}],[6141,{"op":"or","type":"or_3","left":"exists $PYTHON_RESERVED_SET{$id}","right":"$id eq $DEFAULT_PACKAGE and $i != 0 || $id eq $name and not $is_package_name and not $main::implicit_global_my"}],[6180,{"op":"and","type":"and_3","left":"exists $NameMap{$name}","right":"exists $NameMap{$name}{$sigil}"}],[6241,{"left":"$id =~ /_[avh]$/","right":"exists $NameMap{$i = substr($id, 0, length($id) - 2)}","op":"and","type":"and_3"}],[6241,{"type":"and_3","op":"and","right":"$NameMap{$i}{$sigil} eq $id","left":"$id =~ /_[avh]$/ and exists $NameMap{$i = substr($id, 0, length($id) - 2)}"}],[6248,{"op":"and","type":"and_3","left":"exists $NameMap{$name}","right":"exists $NameMap{$name}{$sigil}"}],[6294,{"right":"exists $NameMap{$id}{$sigil}","left":"exists $NameMap{$id}","type":"and_3","op":"and"}],[6294,{"op":"and","type":"and_3","left":"exists $NameMap{$id} and exists $NameMap{$id}{$sigil}","right":"$NameMap{$id}{$sigil} ne $id"}],[6296,{"left":"scalar @ids > 1","right":"index($ids[-1], \".\") != -1","op":"and","type":"and_3"}],[6305,{"left":"$sigil ne \"\"","right":"$sigil ne \"&\"","op":"and","type":"and_3"}],[6306,{"op":"or","type":"or_3","left":"$main::remap_all","right":"$force"}],[6306,{"op":"or","type":"or_3","left":"$main::remap_all or $force","right":"exists $main::remap_requests{$sigil . $id}"}],[6306,{"type":"or_3","op":"or","right":"exists $main::remap_requests{$id}","left":"$main::remap_all or $force or exists $main::remap_requests{$sigil . $id}"}],[6306,{"type":"or_3","op":"or","right":"exists $main::remap_requests{'*' . $id}","left":"$main::remap_all or $force or exists $main::remap_requests{$sigil . $id} or exists $main::remap_requests{$id}"}],[6322,{"type":"and_3","op":"and","right":"index($ids[-1], \".\") != -1","left":"scalar @ids > 1"}],[6444,{"type":"and_3","op":"and","right":"substr($line, 0, 1) eq \"\\$\"","left":"substr($source, 0, 1) eq \"%\""}],[6474,{"left":"$ch2 eq \"o\"","right":"substr($arg, $i + 2, 1) eq \"{\"","op":"and","type":"and_3"}],[6474,{"op":"and","type":"and_3","left":"$ch2 eq \"N\"","right":"substr($arg, $i + 2, 1) eq \"{\""}],[6535,{"op":"and","type":"and_3","left":"$ch2 eq \"o\"","right":"substr($arg, $i + 2, 1) eq \"{\""}],[6535,{"right":"substr($arg, $i + 2, 1) eq \"{\"","left":"$ch2 eq \"N\"","type":"and_3","op":"and"}],[6637,{"left":"$ch eq \"-\"","right":"$i > 0","op":"and","type":"and_3"}],[6637,{"left":"$ch eq \"-\" and $i > 0","right":"$i < length($arg) - 1","op":"and","type":"and_3"}],[6718,{"op":"or","type":"or_3","left":"$ch2 eq \"\"","right":"index(\"abfntrg0\\\\\", $ch2) != -1"}],[6718,{"op":"or","type":"or_3","left":"index(\"xNuU\", $ch2) != -1","right":"$delim eq \"'\""}],[6730,{"left":"$main::debug >= 5","right":"$Pythonizer::PassNo != &Pythonizer::PASS_0","op":"and","type":"and_3"}],[6752,{"op":"and","type":"and_3","left":"$ValPerl[$i] eq \"dirname\"","right":"$ValPerl[$i + 1] eq \"\\$0\""}],[6752,{"right":"$ValPerl[$i + 1] eq \"(\"","left":"$ValPerl[$i] eq \"dirname\"","type":"and_3","op":"and"}],[6752,{"op":"and","type":"and_3","left":"$ValPerl[$i] eq \"dirname\" and $ValPerl[$i + 1] eq \"(\"","right":"$ValPerl[$i + 2] eq \"\\$0\""}],[6828,{"type":"and_3","op":"and","right":"$1 eq $2","left":"$line =~ /^(?:[A-Za-z][A-Za-z0-9_]*[.])+([A-Za-z][A-Za-z0-9_]*) = ([A-Za-z][A-Za-z0-9_]*)/"}],[6895,{"type":"or_3","op":"||","right":"$ValClass[$pos + 1] eq 'i' && exists $BUILTIN_LIBRARY_SET{$ValPerl[$pos + 1]}","left":"$ValClass[$pos + 1] eq 'd' || $ValClass[$pos + 1] eq '\"' && substr($ValPy[$pos + 1], 0, 3) eq q['\\\\x]"}],[6895,{"right":"$ValClass[$pos + 1] eq 'd' || $ValClass[$pos + 1] eq '\"' && substr($ValPy[$pos + 1], 0, 3) eq q['\\\\x] || $ValClass[$pos + 1] eq 'i' && exists $BUILTIN_LIBRARY_SET{$ValPerl[$pos + 1]}","left":"$pos + 1 <= $#ValClass","type":"and_3","op":"and"}],[6895,{"right":"$ValClass[$pos + 1] eq \"i\"","left":"$pos + 1 <= $#ValClass","type":"and_3","op":"and"}],[6895,{"type":"or_3","op":"||","right":"$ValPerl[$pos + 1] eq 'overload'","left":"$ValPerl[$pos + 1] eq 'constant' || $ValPerl[$pos + 1] eq 'open'"}],[6895,{"type":"and_3","op":"and","right":"$ValPerl[$pos + 1] eq 'constant' || $ValPerl[$pos + 1] eq 'open' || $ValPerl[$pos + 1] eq 'overload'","left":"$pos + 1 <= $#ValClass and $ValClass[$pos + 1] eq \"i\""}],[6914,{"left":"$pos + 1 == $limit","right":"$ValClass[$pos + 1] eq \"s\"","op":"and","type":"and_3"}],[6914,{"right":"$ValClass[$pos + 1] eq \"\\\"\"","left":"$pos + 1 == $limit","type":"and_3","op":"and"}],[6914,{"type":"and_3","op":"and","right":"$ValClass[$pos + 1] eq \"i\"","left":"$pos + 1 <= $limit"}],[6959,{"type":"and_3","op":"and","right":"$ValPerl[$i] =~ /^v\\d/","left":"$ValClass[$i] eq \"i\""}],[6973,{"type":"and_3","op":"and","right":"substr($desired_version, 0, 1) eq \"v\"","left":"$desired_version"}],[7186,{"right":"$ValPerl[$tno - 1] =~ /^v\\d*/","left":"$ValClass[$tno - 1] eq \"\\\"\"","type":"and_3","op":"and"}],[7186,{"type":"and_3","op":"and","right":"substr($ValPy[$tno - 1], 1, 2) eq \"\\\\x\"","left":"$ValClass[$tno - 1] eq \"\\\"\" and $ValPerl[$tno - 1] =~ /^v\\d*/"}],[7200,{"op":"and","type":"and_3","left":"$ch2 eq \"\\\\\"","right":"$in_regex"}]],"start":{"5442":{"escape_triple_singlequotes":[{"subroutine":110,"time":null,"condition":491,"statement":2873,"branch":953,"pod":87}]},"61":{"BEGIN":[{"subroutine":10,"time":null,"statement":29,"condition":null,"branch":null,"pod":null}]},"759":{"add_package_name_sub":[{"pod":9,"branch":16,"condition":8,"statement":110,"time":null,"subroutine":32}]},"1130":{"is_continue_block":[{"branch":104,"condition":52,"time":null,"subroutine":51,"pod":28,"statement":311}]},"6040":{"autoincrement_fix":[{"pod":105,"branch":1032,"condition":514,"statement":3126,"time":null,"subroutine":128}]},"6695":{"replace_usage":[{"statement":3484,"condition":542,"pod":123,"branch":1167,"subroutine":146,"time":null}]},"1116":{"set_loop_ctr_mod":[{"branch":102,"pod":27,"condition":50,"statement":305,"time":null,"subroutine":50}]},"5619":{"remove_oddities":[{"subroutine":116,"time":null,"condition":496,"statement":2950,"pod":93,"branch":972}]},"5696":{"in_string":[{"subroutine":117,"time":null,"condition":497,"statement":2975,"pod":94,"branch":976}]},"4191":{"BEGIN":[{"condition":null,"statement":62,"branch":null,"pod":null,"subroutine":21,"time":null}]},"3702":{"decode_scalar":[{"subroutine":91,"time":null,"condition":393,"statement":1813,"pod":68,"branch":638}]},"680":{"TRY_BLOCK_HAS_NEXT":[{"statement":71,"condition":null,"branch":null,"pod":3,"subroutine":26,"time":null}]},"1532":{"in_BEGIN":[{"subroutine":69,"time":null,"condition":83,"statement":533,"pod":46,"branch":205}]},"1605":{"BEGIN":[{"time":null,"subroutine":18,"pod":null,"branch":null,"statement":53,"condition":null}]},"5329":{"escape_quotes":[{"pod":85,"branch":927,"condition":488,"statement":2811,"time":null,"subroutine":108}]},"1161":{"track_redo":[{"time":null,"subroutine":53,"branch":111,"pod":30,"statement":326,"condition":53}]},"899":{"capture_varclass":[{"condition":21,"statement":191,"pod":15,"branch":54,"subroutine":38,"time":null}]},"868":{"cur_package":[{"pod":13,"branch":48,"condition":20,"statement":175,"time":null,"subroutine":36}]},"6066":{"matching_paren":[{"time":null,"subroutine":129,"branch":1035,"pod":106,"statement":3139,"condition":517}]},"1487":{"BEGIN":[{"time":null,"subroutine":14,"branch":null,"pod":null,"statement":41,"condition":null}]},"7185":{"is_concat":[{"statement":3665,"condition":559,"branch":1222,"pod":131,"subroutine":154,"time":null}]},"5253":{"perl_hex_escapes_to_python":[{"pod":83,"branch":918,"condition":485,"statement":2763,"time":null,"subroutine":106}]},"782":{"add_package_name_fh":[{"branch":24,"pod":10,"condition":10,"statement":122,"time":null,"subroutine":33}]},"-1":{"__COVER__":[{"pod":136,"branch":1240,"statement":3712,"condition":562,"time":null,"subroutine":159}]},"1281":{"exit_block":[{"pod":33,"statement":397,"branch":138,"condition":73,"time":null,"subroutine":56}]},"58":{"BEGIN":[{"subroutine":7,"time":null,"condition":null,"statement":20,"pod":null,"branch":null}]},"51":{"BEGIN":[{"subroutine":2,"time":null,"statement":5,"condition":null,"pod":null,"branch":null}]},"6770":{"handle_use_overload":[{"statement":3525,"condition":548,"branch":1179,"pod":126,"subroutine":149,"time":null}]},"5771":{"python_matching_paren":[{"subroutine":118,"time":null,"condition":498,"branch":982,"statement":2990,"pod":95}]},"7162":{"build_in_qr_flags":[{"time":null,"subroutine":153,"pod":130,"branch":1218,"condition":559,"statement":3653}]},"976":{"propagate_varclass_for_here":[{"pod":16,"statement":235,"time":null,"subroutine":39,"branch":76,"condition":45}]},"7241":{"handle_while_magic_function":[{"branch":1230,"pod":134,"condition":562,"statement":3689,"time":null,"subroutine":157}]},"7220":{"semicolon_in_block":[{"statement":3684,"condition":562,"branch":1228,"pod":133,"subroutine":156,"time":null}]},"6424":{"get_rest_of_variable_name":[{"time":null,"subroutine":140,"branch":1112,"condition":535,"pod":117,"statement":3320}]},"5809":{"gen_statement":[{"subroutine":119,"time":null,"condition":499,"statement":3010,"branch":992,"pod":96}]},"3534":{"finish":[{"condition":381,"branch":598,"subroutine":88,"time":null,"statement":1712,"pod":65}]},"1549":{"BEGIN":[{"branch":null,"pod":null,"statement":47,"condition":null,"time":null,"subroutine":16}]},"5451":{"escape_triple_doublequotes":[{"condition":491,"statement":2876,"pod":88,"branch":953,"subroutine":111,"time":null}]},"1148":{"track_continue":[{"pod":29,"statement":321,"time":null,"subroutine":52,"branch":109,"condition":52}]},"702":{"initialize":[{"time":null,"subroutine":30,"pod":7,"branch":null,"condition":null,"statement":75}]},"57":{"BEGIN":[{"time":null,"subroutine":6,"branch":null,"condition":null,"pod":null,"statement":17}]},"1479":{"continue_needed_try_block":[{"subroutine":66,"time":null,"statement":504,"condition":81,"pod":43,"branch":192}]},"5950":{"append":[{"pod":101,"branch":1021,"condition":514,"statement":3082,"time":null,"subroutine":124}]},"2082":{"BEGIN":[{"time":null,"subroutine":19,"branch":null,"pod":null,"statement":56,"condition":null}]},"6391":{"is_escaped":[{"statement":3303,"condition":535,"pod":115,"branch":1104,"subroutine":138,"time":null}]},"1184":{"flag_next_in_continue":[{"condition":54,"statement":339,"branch":116,"pod":31,"subroutine":54,"time":null}]},"1037":{"get_py_name":[{"time":null,"subroutine":43,"branch":86,"pod":20,"condition":46,"statement":265}]},"5234":{"decode_bare":[{"branch":916,"pod":82,"condition":485,"statement":2754,"time":null,"subroutine":105}]},"6873":{"handle_use_require":[{"branch":1193,"pod":128,"statement":3587,"condition":549,"time":null,"subroutine":151}]},"6173":{"add_package_to_mapped_name":[{"statement":3183,"condition":522,"branch":1050,"pod":110,"subroutine":133,"time":null}]},"1381":{"handle_return_in_expression":[{"pod":38,"statement":451,"branch":165,"condition":80,"time":null,"subroutine":61}]},"679":{"TRY_BLOCK_HAS_CONTINUE":[{"condition":null,"statement":70,"branch":null,"pod":2,"subroutine":25,"time":null}]},"5539":{"escape_only_backslash":[{"time":null,"subroutine":114,"branch":964,"pod":91,"condition":493,"statement":2927}]},"5488":{"perl_regex_to_python":[{"subroutine":113,"time":null,"condition":492,"statement":2895,"branch":959,"pod":90}]},"6009":{"destroy":[{"subroutine":127,"time":null,"condition":514,"statement":3108,"pod":104,"branch":1027}]},"6380":{"parens_are_balanced":[{"subroutine":137,"time":null,"statement":3298,"condition":535,"branch":1102,"pod":114}]},"7263":{"looks_like_anon_hash_def":[{"branch":1234,"pod":135,"statement":3704,"condition":562,"time":null,"subroutine":158}]},"1854":{"prepare_locals":[{"condition":100,"statement":708,"branch":273,"pod":60,"subroutine":83,"time":null}]},"4188":{"BEGIN":[{"branch":null,"pod":null,"condition":null,"statement":59,"time":null,"subroutine":20}]},"1597":{"needs_redo_loop":[{"pod":50,"statement":572,"branch":222,"condition":85,"time":null,"subroutine":73}]},"4676":{"BEGIN":[{"subroutine":22,"time":null,"condition":null,"statement":65,"pod":null,"branch":null}]},"986":{"map_var_class_into_sub":[{"condition":46,"statement":239,"branch":78,"pod":17,"subroutine":40,"time":null}]},"6737":{"handle_use_lib":[{"pod":125,"statement":3505,"branch":1171,"condition":545,"time":null,"subroutine":148}]},"1674":{"try_block_exception_name":[{"condition":87,"statement":609,"pod":55,"branch":236,"subroutine":78,"time":null}]},"6089":{"matching_curly_br":[{"branch":1039,"pod":107,"statement":3150,"condition":517,"time":null,"subroutine":130}]},"1760":{"handle_local":[{"branch":250,"pod":58,"condition":92,"statement":654,"time":null,"subroutine":81}]},"1501":{"needs_try_block":[{"statement":517,"condition":82,"pod":44,"branch":198,"subroutine":67,"time":null}]},"5141":{"remove_escaped_delimiters":[{"condition":483,"branch":905,"subroutine":102,"time":null,"statement":2708,"pod":79}]},"1458":{"set_continue_needed_try_block":[{"statement":492,"condition":81,"branch":185,"pod":42,"subroutine":65,"time":null}]},"1408":{"return_in_BEGIN_needs_raise":[{"subroutine":62,"time":null,"statement":467,"condition":80,"pod":39,"branch":173}]},"60":{"BEGIN":[{"subroutine":9,"time":null,"condition":null,"statement":26,"branch":null,"pod":null}]},"2004":{"tokenize":[{"statement":805,"pod":64,"subroutine":87,"time":null,"condition":102,"branch":298}]},"5205":{"decode_hash":[{"pod":81,"branch":913,"condition":485,"statement":2738,"time":null,"subroutine":104}]},"6406":{"init_perllib":[{"time":null,"subroutine":139,"pod":116,"branch":1110,"statement":3312,"condition":535}]},"5944":{"restore_code":[{"statement":3080,"condition":514,"branch":1020,"pod":100,"subroutine":123,"time":null}]},"3981":{"is_regex":[{"branch":696,"pod":69,"statement":2000,"condition":413,"time":null,"subroutine":92}]},"49":{"BEGIN":[{"statement":2,"condition":null,"pod":null,"branch":null,"subroutine":1,"time":null}]},"678":{"TRY_BLOCK_FINALLY":[{"condition":null,"statement":69,"branch":null,"pod":1,"subroutine":24,"time":null}]},"883":{"capture_varclass_j":[{"subroutine":37,"time":null,"statement":182,"condition":20,"pod":14,"branch":50}]},"5076":{"unescaped_match":[{"branch":894,"pod":77,"statement":2673,"condition":480,"time":null,"subroutine":100}]},"3614":{"select_readline":[{"time":null,"subroutine":89,"branch":619,"condition":386,"pod":66,"statement":1764}]},"6709":{"escape_re_sub":[{"branch":1167,"pod":124,"statement":3489,"condition":542,"time":null,"subroutine":147}]},"1078":{"in_conditional":[{"time":null,"subroutine":46,"branch":95,"pod":23,"condition":48,"statement":287}]},"4097":{"popup":[{"time":null,"subroutine":94,"branch":712,"pod":71,"statement":2057,"condition":425}]},"5569":{"escape_backslash":[{"subroutine":115,"time":null,"statement":2929,"condition":493,"pod":92,"branch":964}]},"1524":{"in_eval":[{"subroutine":68,"time":null,"condition":83,"statement":530,"branch":204,"pod":45}]},"1977":{"choose_glob":[{"time":null,"subroutine":86,"pod":63,"branch":293,"condition":102,"statement":787}]},"1019":{"get_sub_vars_with_class":[{"branch":83,"pod":19,"condition":46,"statement":255,"time":null,"subroutine":42}]},"6191":{"mapped_name":[{"time":null,"subroutine":134,"branch":1054,"pod":111,"statement":3192,"condition":523}]},"5096":{"escape_curly_braces":[{"statement":2682,"condition":480,"pod":78,"branch":896,"subroutine":101,"time":null}]},"1584":{"BEGIN":[{"subroutine":17,"time":null,"condition":null,"statement":50,"branch":null,"pod":null}]},"1446":{"track_potential_sub_call":[{"time":null,"subroutine":64,"pod":41,"branch":182,"statement":486,"condition":81}]},"54":{"BEGIN":[{"time":null,"subroutine":4,"branch":null,"condition":null,"pod":null,"statement":11}]},"1620":{"cur_loop_ndx":[{"condition":86,"statement":585,"branch":228,"pod":51,"subroutine":74,"time":null}]},"52":{"BEGIN":[{"branch":null,"pod":null,"statement":8,"condition":null,"time":null,"subroutine":3}]},"1425":{"handle_last_next":[{"subroutine":63,"time":null,"condition":80,"statement":475,"branch":177,"pod":40}]},"5874":{"format_chunks":[{"condition":505,"branch":1007,"subroutine":120,"time":null,"statement":3045,"pod":97}]},"1893":{"push_locals":[{"branch":278,"pod":61,"statement":737,"condition":100,"time":null,"subroutine":84}]},"6677":{"first_map_wins":[{"branch":1166,"pod":122,"statement":3475,"condition":542,"time":null,"subroutine":145}]},"4919":{"extract_tokens_from_double_quoted_string":[{"statement":2567,"pod":76,"condition":475,"branch":856,"subroutine":99,"time":null}]},"48":{"BEGIN":[{"statement":null,"pod":null,"condition":null,"branch":null,"subroutine":null,"time":null}]},"1684":{"gen_try_block_finally":[{"condition":88,"statement":614,"pod":56,"branch":239,"subroutine":79,"time":null}]},"808":{"add_package_name_j":[{"subroutine":34,"time":null,"condition":15,"statement":136,"pod":11,"branch":30}]},"1098":{"cur_sub":[{"pod":25,"branch":98,"statement":297,"condition":50,"time":null,"subroutine":48}]},"4035":{"perl_match":[{"subroutine":93,"time":null,"statement":2032,"condition":420,"branch":705,"pod":70}]},"5459":{"put_regex_in_quotes":[{"statement":2879,"condition":491,"pod":89,"branch":953,"subroutine":112,"time":null}]},"1541":{"has_continue":[{"pod":47,"statement":537,"time":null,"subroutine":70,"branch":207,"condition":83}]},"683":{"TRY_BLOCK_CONTINUE_NEEDED_ONE":[{"subroutine":29,"time":null,"condition":null,"statement":74,"branch":null,"pod":6}]},"1058":{"def_label":[{"subroutine":44,"time":null,"statement":277,"condition":48,"pod":21,"branch":91}]},"6467":{"end_of_escape":[{"pod":118,"statement":3347,"time":null,"subroutine":141,"branch":1120,"condition":536}]},"62":{"BEGIN":[{"condition":null,"statement":32,"pod":null,"branch":null,"subroutine":11,"time":null}]},"677":{"TRY_BLOCK_EXCEPTION":[{"statement":68,"pod":null,"condition":null,"branch":null,"subroutine":23,"time":null}]},"1373":{"handle_return":[{"subroutine":60,"time":null,"statement":448,"condition":80,"pod":37,"branch":163}]},"7194":{"replace_escape_with_chr":[{"pod":132,"branch":1224,"condition":561,"statement":3668,"time":null,"subroutine":155}]},"996":{"determine_varclass_keepers":[{"time":null,"subroutine":41,"pod":18,"branch":81,"statement":244,"condition":46}]},"6112":{"matching_square_br":[{"time":null,"subroutine":131,"pod":108,"branch":1043,"statement":3161,"condition":517}]},"6527":{"unescape_string":[{"pod":119,"branch":1137,"condition":538,"statement":3383,"time":null,"subroutine":142}]},"6935":{"handle_import":[{"time":null,"subroutine":152,"branch":1204,"condition":557,"pod":129,"statement":3604}]},"4200":{"interpolate_strings":[{"statement":2110,"condition":426,"branch":724,"pod":74,"subroutine":97,"time":null}]},"1321":{"last_next_propagates":[{"subroutine":58,"time":null,"condition":77,"statement":419,"pod":35,"branch":148}]},"6209":{"actual_sigil":[{"subroutine":135,"time":null,"condition":523,"statement":3204,"pod":112,"branch":1059}]},"1729":{"next_last_needs_raise":[{"statement":645,"pod":57,"condition":88,"branch":246,"subroutine":80,"time":null}]},"5938":{"save_code":[{"subroutine":122,"time":null,"statement":3077,"condition":514,"pod":99,"branch":1019}]},"1938":{"init_local_typeglobs":[{"pod":62,"statement":768,"time":null,"subroutine":85,"branch":285,"condition":102}]},"1311":{"is_eval":[{"pod":34,"branch":147,"statement":416,"condition":76,"time":null,"subroutine":57}]},"1647":{"begin_loop_label":[{"subroutine":76,"time":null,"statement":597,"condition":87,"branch":232,"pod":53}]},"719":{"add_package_name":[{"time":null,"subroutine":31,"branch":1,"pod":8,"condition":null,"statement":84}]},"1273":{"BEGIN":[{"time":null,"subroutine":13,"branch":null,"pod":null,"statement":38,"condition":null}]},"1805":{"prepare_local":[{"branch":259,"pod":59,"statement":680,"condition":97,"time":null,"subroutine":82}]},"5294":{"escape_non_printables":[{"condition":486,"branch":922,"subroutine":107,"time":null,"statement":2793,"pod":84}]},"1105":{"get_loop_ctr":[{"time":null,"subroutine":49,"branch":100,"pod":26,"statement":300,"condition":50}]},"6134":{"escape_keywords":[{"time":null,"subroutine":132,"pod":109,"branch":1047,"statement":3172,"condition":517}]},"3626":{"bash_style_or_and_fix":[{"time":null,"subroutine":90,"pod":67,"branch":621,"statement":1770,"condition":387}]},"5959":{"replace":[{"statement":3087,"pod":102,"condition":514,"branch":1022,"subroutine":125,"time":null}]},"6781":{"get_mapped_names_for_package":[{"time":null,"subroutine":150,"branch":1180,"pod":127,"condition":548,"statement":3529}]},"5909":{"gen_chunk":[{"condition":511,"statement":3061,"pod":98,"branch":1015,"subroutine":121,"time":null}]},"4866":{"handle_expr_in_string":[{"statement":2533,"condition":475,"branch":848,"pod":75,"subroutine":98,"time":null}]},"1630":{"loop_ndx_with_label":[{"time":null,"subroutine":75,"pod":52,"branch":229,"condition":86,"statement":589}]},"6615":{"expand_ranges":[{"branch":1158,"pod":120,"condition":540,"statement":3443,"time":null,"subroutine":143}]},"1196":{"BEGIN":[{"subroutine":12,"time":null,"statement":35,"condition":null,"pod":null,"branch":null}]},"5361":{"remove_perl_escapes":[{"pod":86,"branch":932,"condition":489,"statement":2822,"time":null,"subroutine":109}]},"59":{"BEGIN":[{"subroutine":8,"time":null,"condition":null,"statement":23,"branch":null,"pod":null}]},"1361":{"handle_pos_ref":[{"subroutine":59,"time":null,"statement":444,"condition":80,"branch":161,"pod":36}]},"6661":{"make_same_length":[{"time":null,"subroutine":144,"pod":121,"branch":1163,"statement":3467,"condition":542}]},"1069":{"could_be_anonymous_sub_close":[{"branch":92,"pod":22,"condition":48,"statement":282,"time":null,"subroutine":45}]},"1660":{"cur_loop_label":[{"pod":54,"statement":603,"branch":234,"condition":87,"time":null,"subroutine":77}]},"4113":{"single_quoted_literal":[{"branch":714,"pod":72,"condition":425,"statement":2064,"time":null,"subroutine":95}]},"55":{"BEGIN":[{"pod":null,"branch":null,"condition":null,"statement":14,"time":null,"subroutine":5}]},"5975":{"insert":[{"subroutine":126,"time":null,"statement":3096,"condition":514,"branch":1024,"pod":103}]},"1576":{"needs_implicit_continue":[{"time":null,"subroutine":72,"branch":216,"pod":49,"condition":85,"statement":559}]},"1195":{"enter_block":[{"statement":343,"condition":54,"branch":118,"pod":32,"subroutine":55,"time":null}]},"681":{"TRY_BLOCK_HAS_LAST":[{"condition":null,"statement":72,"branch":null,"pod":4,"subroutine":27,"time":null}]},"1091":{"in_sub":[{"time":null,"subroutine":47,"branch":97,"pod":24,"condition":50,"statement":294}]},"1509":{"BEGIN":[{"subroutine":15,"time":null,"statement":44,"condition":null,"branch":null,"pod":null}]},"6221":{"remap_conflicting_names":[{"branch":1061,"pod":113,"statement":3209,"condition":523,"time":null,"subroutine":136}]},"682":{"TRY_BLOCK_REDO_LOOP":[{"branch":null,"pod":5,"condition":null,"statement":73,"time":null,"subroutine":28}]},"1563":{"set_needs_implicit_continue":[{"statement":550,"pod":48,"condition":84,"branch":213,"subroutine":71,"time":null}]},"5158":{"decode_array":[{"condition":484,"branch":907,"subroutine":103,"time":null,"statement":2716,"pod":80}]},"846":{"get_perl_name":[{"branch":42,"pod":12,"condition":19,"statement":162,"time":null,"subroutine":35}]},"4171":{"double_quoted_literal":[{"subroutine":96,"time":null,"condition":426,"statement":2097,"branch":722,"pod":73}]}},"branch":[[709,{"text":"if ($Pythonizer::PassNo == &Pythonizer::PASS_1)"}],[723,{"text":"if $main::implicit_global_my"}],[724,{"text":"if (index($py, \".\") != -1)"}],[725,{"text":"unless exists $line_varclasses{$.}"}],[726,{"text":"if (substr($name, 0, 2) eq \"\\$#\")"}],[729,{"text":"unless exists $line_varclasses{$.}{$name}"}],[731,{"text":"unless ($class = $line_varclasses{$.}{$name}) =~ /global|local/"}],[733,{"text":"if $sigil =~ /\\w/"}],[736,{"text":"if $main::remap_global and not $main::remap_all and $class eq \"global\""}],[740,{"text":"if $main::remap_global and not $main::remap_all and $class eq \"global\""}],[744,{"text":"if $main::remap_global and not $main::remap_all and $class eq \"global\""}],[748,{"text":"if $main::remap_global and not $main::remap_all and $class eq \"global\""}],[734,{"text":"if ($ValPy[$tno] =~ /^\\(len\\((.*)\\)-1\\)$/) { }"}],[734,{"text":"elsif ($ValPy[$tno] =~ /^len\\((.*)\\)$/) { }"}],[734,{"text":"elsif (substr($ValPy[$tno], 0, 1) eq '*') { }"}],[751,{"text":"if $main::debug >= 5"}],[763,{"text":"if $main::implicit_global_my"}],[764,{"text":"if (index($py, \".\") != -1)"}],[765,{"text":"if substr($perl_name, 0, 1) eq \"\\$\""}],[766,{"text":"if $tno != 0 and $ValPy[$tno - 1] eq \".\""}],[770,{"text":"if exists $Pythonizer::LocalSub{$py} and $Pythonizer::LocalSub{$py} & 3"}],[772,{"text":"if exists $Pythonizer::LocalSub{$py}"}],[773,{"text":"if exists $Pythonizer::SubAttributes{$py}"}],[774,{"text":"if $main::debug >= 5"}],[786,{"text":"if $main::implicit_global_my"}],[787,{"text":"if (index($py, \".\") != -1)"}],[789,{"text":"if ($Pythonizer::PassNo == &Pythonizer::PASS_1 and $last_varclass_lno != $. and $last_varclass_lno)"}],[796,{"text":"if exists $line_varclasses{$.} and exists $line_varclasses{$.}{$name} and not $line_varclasses{$.}{$name} =~ /global|local/"}],[797,{"text":"if $tno != 0 and $ValPy[$tno - 1] eq \".\""}],[799,{"text":"if $main::debug >= 5"}],[812,{"text":"unless $name"}],[811,{"text":"if (index($ValPerl[$tno], \"\\$\") == -1)"}],[817,{"text":"if $main::implicit_global_my"}],[821,{"text":"if exists $line_varclasses{$.} and exists $line_varclasses{$.}{$name} and not $line_varclasses{$.}{$name} =~ /global|local/"}],[823,{"text":"unless exists $line_varclasses{$.}"}],[824,{"text":"unless exists $line_varclasses{$.}{$name}"}],[825,{"text":"unless ($class = $line_varclasses{$.}{$name}) =~ /global|local/"}],[819,{"text":"if ($tg) { }"}],[834,{"text":"if substr($py, $start - 1, 1) eq \".\""}],[836,{"text":"if $main::remap_global and not $main::remap_all and $class eq \"global\""}],[838,{"text":"if $main::debug >= 5"}],[830,{"text":"if ($py =~ /\\b($var(?:_|_v)?)\\b/)"}],[851,{"text":"if $main::debug >= 5"}],[850,{"text":"if ($prev eq \"\\$\" or $name eq \"\\$\")"}],[855,{"text":"if ($next eq '[') { }"}],[855,{"text":"elsif ($next eq '{') { }"}],[855,{"text":"elsif (substr($name, 0, 2) eq '$#') { }"}],[862,{"text":"if $main::debug >= 5"}],[869,{"text":"if ($Pythonizer::PassNo == &Pythonizer::PASS_2) { }"}],[869,{"text":"elsif (not @Pythonizer::Packages) { }"}],[885,{"text":"if ($last_varclass_lno != $. and $last_varclass_lno)"}],[888,{"text":"if (index($ValPerl[$tno], \"\\$\") == -1)"}],[890,{"text":"if (exists $line_varclasses{$last_varclass_lno}{$name})"}],[893,{"text":"if $class eq \"global\""}],[899,{"text":"$ate_dollar == $tno ? :"}],[901,{"text":"if defined $ValType[$tno] and $ValType[$tno] eq \"X\""}],[902,{"text":"if $main::implicit_global_my"}],[903,{"text":"if $ValPerl[$tno] =~ /^\\$[ab]$/"}],[908,{"text":"if $class eq \"my\" and not in_sub()"}],[906,{"text":"if ($ValClass[0] eq 't' and index($TokenStr, '=') == -1) { }"}],[906,{"text":"elsif ($ValClass[0] eq 'c' and $ValClass[1] eq '(' and $ValClass[2] eq 't' and $ValClass[3] =~ /[sahG]/ and $ValPerl[3] eq $ValPerl[$tno]) { }"}],[906,{"text":"elsif ($ValClass[0] eq 'c' and $ValClass[1] eq 't' and $tno == 2) { }"}],[906,{"text":"elsif ($ValClass[0] eq 'f' and $ValPerl[0] eq 'open' and $ValClass[1] eq 't' and $tno == 2) { }"}],[906,{"text":"elsif ($ValClass[0] eq 'f' and $ValPerl[0] eq 'open' and $ValClass[1] eq '(' and $ValClass[2] eq 't' and $tno == 3) { }"}],[906,{"text":"elsif ($tno != 0 and $ValClass[$tno - 1] eq 't') { }"}],[928,{"text":"if $class eq \"local\" and not @nesting_stack"}],[930,{"text":"if ($main::implicit_global_my) { }"}],[929,{"text":"if ($class eq \"our\")"}],[936,{"text":"if ($last_varclass_lno != $. and $last_varclass_lno)"}],[944,{"text":"unless $declared_here"}],[943,{"text":"if (not exists $last_varclass_sub{$name} or $last_varclass_sub{$name} ne $cs)"}],[953,{"text":"unless $declared_here"}],[952,{"text":"if (not exists $last_varclass_sub{$name} or $last_varclass_sub{$name} ne $cs)"}],[941,{"text":"if (not exists $line_varclasses{$last_varclass_lno}{$name} or $class eq 'my' or $class eq 'local') { }"}],[941,{"text":"elsif (exists $line_varclasses{$last_varclass_lno}{$name}) { }"}],[970,{"text":"if $class eq \"global\" or $class eq \"local\""}],[976,{"text":"if $main::debug"}],[977,{"text":"if ($last_varclass_lno != $. and $last_varclass_lno)"}],[987,{"text":"if $cls eq \"my\""}],[988,{"text":"if $cls eq \"global\""}],[989,{"text":"if $cls eq \"myfile\""}],[1009,{"text":"if exists $varclasses_at_top->{$name}"}],[1007,{"text":"if ($class ne \"global\")"}],[1023,{"text":"unless exists $sub_varclasses{$sub}"}],[1027,{"text":"if defined $py"}],[1025,{"text":"if ($sub_varclasses{$sub}{$perl_name} eq $class)"}],[1041,{"text":"if ($sigil =~ /[a-z_]/)"}],[1049,{"text":"if exists $GLOBALS{$pyname}"}],[1045,{"text":"if (not $main::import_perllib and length $name == 1 and exists $SPECIAL_VAR{$name})"}],[1051,{"text":"unless exists $NameMap{$name}"}],[1052,{"text":"unless exists $NameMap{$name}{$sigil}"}],[1059,{"text":"if ($main::debug >= 4)"}],[1069,{"text":"unless @nesting_stack"}],[1071,{"text":"unless $top->{'is_sub'}"}],[1072,{"text":"if $top->{'cur_sub'} =~ /^$ANONYMOUS_SUB\\d+[a-z]?$/"}],[1080,{"text":"if ($ValClass[$i] eq \"c\" and $ValPerl[$i] eq 'if' || $ValPerl[$i] eq 'unless')"}],[1084,{"text":"unless @nesting_stack"}],[1091,{"text":"unless @nesting_stack"}],[1098,{"text":"unless @nesting_stack"}],[1100,{"text":"defined $top->{'cur_sub'} ? :"}],[1105,{"text":"unless @nesting_stack"}],[1107,{"text":"if (defined $top->{'loop_ctr'})"}],[1120,{"text":"if $main::debug >= 5"}],[1119,{"text":"if ($nesting_stack[$i]{'type'} eq \"for\" and exists $nesting_stack[$i]{'loop_ctr'} and index($nesting_stack[$i]{'loop_ctr'}, $lc_name) == 0)"}],[1134,{"text":"if $nesting_level == 0"}],[1133,{"text":"unless ($at_bottom)"}],[1138,{"text":"if $main::debug >= 4"}],[1137,{"text":"if ($top->{'type'} eq \"continue\")"}],[1141,{"text":"if $main::debug >= 4"}],[1148,{"text":"if $main::debug >= 5"}],[1150,{"text":"if (exists $line_needs_try_block{$nesting_last->{'lno'}} and $line_needs_try_block{$nesting_last->{'lno'}} & TRY_BLOCK_HAS_NEXT())"}],[1165,{"text":"if ($#ValClass >= $pos + 1 and $ValClass[$pos + 1] eq \"i\")"}],[1168,{"text":"unless @nesting_stack"}],[1170,{"text":"if ($nesting_stack[$ndx]{'type'} eq 'continue') { }"}],[1170,{"text":"elsif (defined $label) { }"}],[1177,{"text":"if $main::debug >= 5"}],[1184,{"text":"unless @nesting_stack"}],[1186,{"text":"if ($nesting_stack[$ndx]{'type'} eq \"continue\")"}],[1195,{"text":"if ($main::debug >= 3 and $Pythonizer::PassNo != &Pythonizer::PASS_0)"}],[1201,{"text":"unless ($last_varclass_lno)"}],[1205,{"text":"if ($last_varclass_lno != $last_block_lno)"}],[1199,{"text":"if ($Pythonizer::PassNo == &Pythonizer::PASS_1)"}],[1211,{"text":"if scalar @ValClass >= 2 and $ValClass[0] eq \"W\""}],[1215,{"text":"if $nesting_info{'type'} eq \"{\" and $delayed_block_closure"}],[1216,{"text":"if scalar @nesting_stack and exists $nesting_stack[-1]{'loop_ctr'}"}],[1219,{"text":"if $lcx < 0"}],[1221,{"text":"if (exists $nesting_info{'loop_ctr'}) { }"}],[1220,{"text":"if ($lcx > 0)"}],[1217,{"text":"if ($nesting_info{'type'} eq \"for\")"}],[1229,{"text":"if $Pythonizer::PassNo == &Pythonizer::PASS_1"}],[1244,{"text":"$begin + 1 <= $#ValClass && $nesting_info{'is_sub'} ? :"}],[1250,{"text":"if ($nesting_info{'in_sub'} and not $nesting_info{'is_sub'})"}],[1253,{"text":"if ($nesting_info{'type'} eq \"do\")"}],[1260,{"text":"if ($main::debug >= 4 and $line_needs_try_block{$nesting_last->{'lno'}} & TRY_BLOCK_CONTINUE_NEEDED_ONE())"}],[1257,{"text":"if ($nesting_info{'type'} eq \"continue\" and exists $line_needs_try_block{$nesting_last->{'lno'}})"}],[1264,{"text":"if (defined $last_label) { }"}],[1264,{"text":"elsif ($#ValClass >= 0 and $ValClass[0] eq 'i' and $ValPy[0] =~ /^for / and $ValPerl[0] =~ /[A-Z]+/) { }"}],[1272,{"text":"if ($main::debug >= 3 and $Pythonizer::PassNo != &Pythonizer::PASS_0)"}],[1282,{"text":"if ($main::debug >= 1)"}],[1281,{"text":"if ($nesting_level == 0)"}],[1288,{"text":"if ($main::debug >= 3 and $Pythonizer::PassNo != &Pythonizer::PASS_0)"}],[1291,{"text":"if ($nesting_last->{'type'} eq \"do\")"}],[1294,{"text":"if $Pythonizer::PassNo == &Pythonizer::PASS_1"}],[1296,{"text":"if exists $nesting_last->{'label'}"}],[1300,{"text":"if $main::debug >= 5"}],[1299,{"text":"if (exists $sub_external_last_nexts{$sub} and exists $sub_external_last_nexts{$sub}{$label})"}],[1297,{"text":"if (exists $nesting_last->{'can_call'} and $Pythonizer::PassNo == &Pythonizer::PASS_1)"}],[1312,{"text":"if $ValClass[$i] eq \"C\" and $ValPerl[$i] eq \"eval\""}],[1325,{"text":"if $nesting_level == 0"}],[1330,{"text":"$pos == 0 ? :"}],[1333,{"text":"if $main::debug >= 5"}],[1331,{"text":"if ($exc)"}],[1335,{"text":"$ValPerl[$pos] eq 'last' ? :"}],[1329,{"text":"if ($nesting_stack[$ndx]{'is_loop'})"}],[1327,{"text":"if ($top->{'in_loop'})"}],[1347,{"text":"if $main::debug >= 5"}],[1348,{"text":"$ValPerl[$pos] eq 'last' ? :"}],[1345,{"text":"if ($ndx != $#nesting_stack)"}],[1344,{"text":"if (exists $nesting_stack[$ndx]{'label'} and $nesting_stack[$ndx]{'label'} eq $label)"}],[1324,{"text":"if (not defined $label and $Pythonizer::PassNo != &Pythonizer::PASS_0) { }"}],[1324,{"text":"elsif ($Pythonizer::PassNo == &Pythonizer::PASS_1) { }"}],[1365,{"text":"if (exists $scalar_pos_gen_line{$ValPerl[$pos]})"}],[1363,{"text":"if ($Pythonizer::PassNo == &Pythonizer::PASS_1)"}],[1373,{"text":"if $Pythonizer::PassNo != &Pythonizer::PASS_1"}],[1374,{"text":"if (in_BEGIN())"}],[1381,{"text":"if $Pythonizer::PassNo != &Pythonizer::PASS_1"}],[1386,{"text":"if $nesting_stack[$ndx]{'is_eval'}"}],[1393,{"text":"if $exc"}],[1392,{"text":"if ($nesting_stack[$ndx]{'type'} eq \"for _ in range(1)\")"}],[1399,{"text":"if $exc"}],[1387,{"text":"if ($nesting_stack[$ndx]{'is_sub'}) { }"}],[1387,{"text":"elsif ($nesting_stack[$ndx]{'is_loop'}) { }"}],[1387,{"text":"elsif ($nesting_stack[$ndx]{'type'} eq 'for _ in range(1)') { }"}],[1409,{"text":"if $nesting_stack[$ndx]{'is_eval'}"}],[1411,{"text":"if ($nesting_stack[$ndx]{'type'} eq 'for _ in range(1)') { }"}],[1410,{"text":"if ($nesting_stack[$ndx]{'is_loop'}) { }"}],[1410,{"text":"elsif ($nesting_stack[$ndx]{'type'} eq 'for _ in range(1)') { }"}],[1429,{"text":"if $nesting_level == 0"}],[1430,{"text":"if ($#ValClass >= $pos + 1 and $ValClass[$pos + 1] eq \"i\")"}],[1436,{"text":"unless defined $sub"}],[1437,{"text":"unless defined $label"}],[1433,{"text":"if (last_next_propagates($pos, $label))"}],[1448,{"text":"if $nesting_level == 0"}],[1449,{"text":"unless $nesting_stack[-1]{'in_loop'}"}],[1450,{"text":"if $main::debug >= 5"}],[1463,{"text":"if $nesting_level == 0"}],[1462,{"text":"unless ($at_bottom)"}],[1468,{"text":"if $main::debug >= 3"}],[1471,{"text":"if $main::debug >= 3"}],[1473,{"text":"if $main::debug >= 3"}],[1466,{"text":"if ($value) { }"}],[1466,{"text":"elsif (exists $line_needs_try_block{$top->{'lno'}}) { }"}],[1483,{"text":"if $nesting_level == 0"}],[1482,{"text":"unless ($at_bottom)"}],[1486,{"text":"if ($main::debug >= 4)"}],[1492,{"text":"if $main::debug >= 4"}],[1490,{"text":"if (exists $line_needs_try_block{$top->{'lno'}} and $line_needs_try_block{$top->{'lno'}} & TRY_BLOCK_CONTINUE_NEEDED_ONE())"}],[1495,{"text":"if $main::debug >= 4"}],[1505,{"text":"if $nesting_level == 0"}],[1504,{"text":"unless ($at_bottom)"}],[1508,{"text":"if ($main::debug >= 4)"}],[1514,{"text":"if $main::debug >= 4"}],[1512,{"text":"if (exists $line_needs_try_block{$top->{'lno'}} and $line_needs_try_block{$top->{'lno'}} & (TRY_BLOCK_EXCEPTION() | TRY_BLOCK_FINALLY()))"}],[1517,{"text":"if $main::debug >= 4"}],[1524,{"text":"if $nesting_level == 0"}],[1532,{"text":"if $nesting_level == 0"}],[1534,{"text":"if $nesting_stack[$ndx]{'type'} eq \"for _ in range(1)\""}],[1545,{"text":"if $nesting_level == 0"}],[1544,{"text":"unless ($at_bottom)"}],[1548,{"text":"if ($main::debug >= 4)"}],[1554,{"text":"if $main::debug >= 4"}],[1552,{"text":"if (exists $line_needs_try_block{$top->{'lno'}} and $line_needs_try_block{$top->{'lno'}} & TRY_BLOCK_HAS_CONTINUE())"}],[1557,{"text":"if $main::debug >= 4"}],[1568,{"text":"if exists $line_needs_try_block{$top->{'lno'}} and $line_needs_try_block{$top->{'lno'}} & TRY_BLOCK_HAS_NEXT()"}],[1570,{"text":"if $main::debug >= 3"}],[1571,{"text":"if $main::debug >= 3"}],[1580,{"text":"if $nesting_level == 0"}],[1579,{"text":"unless ($at_bottom)"}],[1583,{"text":"if ($main::debug >= 4)"}],[1588,{"text":"if $main::debug >= 4"}],[1587,{"text":"if (exists $top->{'implicit_continue'})"}],[1591,{"text":"if $main::debug >= 4"}],[1601,{"text":"if $nesting_level == 0"}],[1600,{"text":"unless ($at_bottom)"}],[1604,{"text":"if ($main::debug >= 4)"}],[1610,{"text":"if $main::debug >= 4"}],[1608,{"text":"if (exists $line_needs_try_block{$top->{'lno'}} and $line_needs_try_block{$top->{'lno'}} & TRY_BLOCK_REDO_LOOP())"}],[1613,{"text":"if $main::debug >= 4"}],[1621,{"text":"unless $nesting_stack[$ndx]{'is_loop'}"}],[1632,{"text":"unless (defined $label)"}],[1636,{"text":"unless $nesting_stack[$ndx]{'is_loop'}"}],[1637,{"text":"if (exists $nesting_stack[$ndx]{'label'} and $nesting_stack[$ndx]{'label'} eq $label)"}],[1648,{"text":"if $nesting_stack[$ndx]{'type'} ne \"for _ in range(1)\""}],[1649,{"text":"if (exists $nesting_stack[$ndx]{'label'})"}],[1661,{"text":"unless $nesting_stack[$ndx]{'is_loop'}"}],[1662,{"text":"if (exists $nesting_stack[$ndx]{'label'})"}],[1675,{"text":"unless $line_needs_try_block{$top->{'lno'}} & TRY_BLOCK_EXCEPTION()"}],[1676,{"text":"if $top->{'is_sub'}"}],[1677,{"text":"unless exists $top->{'label'} and defined $top->{'label'}"}],[1685,{"text":"unless $line_needs_try_block{$top->{'lno'}} & TRY_BLOCK_FINALLY()"}],[1699,{"text":"unless defined $sigils"}],[1702,{"text":"if $sig eq \"^\""}],[1710,{"text":"if exists $SpecialVarR2L{$pyname}"}],[1712,{"text":"if ($pyname =~ /^signal\\.signal\\(/) { }"}],[1694,{"text":"if ($sigil eq '*') { }"}],[1721,{"text":"if (not $code_generated)"}],[1731,{"text":"if $nesting_level == 0"}],[1733,{"text":"unless $top->{'in_loop'}"}],[1737,{"text":"if exists $line_needs_try_block{$nesting_stack[$ndx]{'lno'}} and $is_next and $line_needs_try_block{$nesting_stack[$ndx]{'lno'}} & (TRY_BLOCK_HAS_CONTINUE() | TRY_BLOCK_REDO_LOOP())"}],[1739,{"text":"if exists $line_needs_try_block{$nesting_stack[$ndx]{'lno'}} and not $is_next and $line_needs_try_block{$nesting_stack[$ndx]{'lno'}} & TRY_BLOCK_REDO_LOOP()"}],[1760,{"text":"if ($ValClass[-1] eq \"k\" and $ValPerl[-1] eq \"sub\")"}],[1767,{"text":"if $ValClass[$i] eq \"=\""}],[1769,{"text":"if ($i + 1 <= $#ValClass and $ValClass[$i + 1] eq '(') { }"}],[1768,{"text":"if ($ValClass[$i] =~ /[ashG]/) { }"}],[1768,{"text":"elsif ($ValClass[$i] eq 'f' and $ValPerl[$i] eq '%SIG' and $ValClass[$i + 1] eq '(' and $ValClass[$i + 2] eq 'i') { }"}],[1785,{"text":"unless @nesting_stack"}],[1791,{"text":"if ($main::debug >= 5)"}],[1794,{"text":"if (exists $line_locals{$lno}) { }"}],[1799,{"text":"defined $top->{'cur_sub'} ? :"}],[1815,{"text":"if $ValPy[0] eq \"perllib_.TRACEBACK_v\""}],[1816,{"text":"if $ValPy[0] eq \"perllib_.TRACEBACK\""}],[1823,{"text":"if $FileHandles{$quote}"}],[1824,{"text":"unless $FileHandles{$quote}"}],[1813,{"text":"if ($sigil eq '$') { }"}],[1813,{"text":"elsif ($sigil eq '@') { }"}],[1813,{"text":"elsif ($sigil eq '%') { }"}],[1813,{"text":"elsif ($sigil =~ /[A-Za-z_]/) { }"}],[1831,{"text":"if ($ValPy[0] =~ /^\\(len\\((.*)\\)-1\\)$/) { }"}],[1831,{"text":"elsif ($ValPy[0] =~ /^len\\((.*)\\)$/) { }"}],[1830,{"text":"unless ($main::implicit_global_my or $bare1 or $has_dot)"}],[1839,{"text":"if $bare"}],[1843,{"text":"if exists $Pythonizer::VarType{$ValPy[0]}{$sub}"}],[1841,{"text":"if (not $has_dot || exists $Pythonizer::NeedsInitializing{$sub}{$ValPy[0]})"}],[1868,{"text":"if $sig eq \"&\""}],[1871,{"text":"unless $sig"}],[1866,{"text":"if (exists $NameMap{$id})"}],[1863,{"text":"if ($sigil eq \"*\")"}],[1878,{"text":"if ($main::debug >= 5)"}],[1896,{"text":"unless $line_needs_try_block{$top->{'lno'}} & TRY_BLOCK_FINALLY()"}],[1899,{"text":"if (exists $Pythonizer::GlobalVar{$cursub})"}],[1912,{"text":"unless defined $sigils"}],[1915,{"text":"if $sig eq \"^\""}],[1918,{"text":"if (not exists $globals_set{$pyname} and $pyname =~ /^[A-Za-z_][A-Za-z0-9_]*$/)"}],[1925,{"text":"if (not exists $globals_set{$pyname} and $pyname =~ /^[A-Za-z_][A-Za-z0-9_]*$/)"}],[1907,{"text":"if ($sigil eq '*') { }"}],[1940,{"text":"unless @nesting_stack"}],[1948,{"text":"unless exists $line_locals_map{$lno}"}],[1951,{"text":"if $eq >= 0"}],[1954,{"text":"if $ValClass[$i] eq \"=\""}],[1958,{"text":"if $sig eq \"&\""}],[1960,{"text":"unless defined $pyname"}],[1963,{"text":"if exists $Pythonizer::VarType{$pyname}{$cursub}"}],[1955,{"text":"if ($ValClass[$i] eq \"G\")"}],[1981,{"text":"unless exists $NameMap{$id}"}],[1983,{"text":"if scalar @keys == 0"}],[1986,{"text":"if $rdot >= 0"}],[1987,{"text":"if scalar @keys == 1"}],[1990,{"text":"if (exists $NameMap{$id}{$sel})"}],[2006,{"text":"if (scalar @_ != 2) { }"}],[2032,{"text":"if ($ExtractingTokensFromDoubleQuotedTokensEnd == 0)"}],[2036,{"text":"if $main::debug >= 5"}],[2027,{"text":"if ($had_space and $ExtractingTokensFromDoubleQuotedStringEnd > 0)"}],[2039,{"text":"if not defined $source or $source eq \"\""}],[2043,{"text":"if $main::debug >= 3"}],[2045,{"text":"if $main::debug >= 3"}],[2041,{"text":"if (exists $line_substitutions{$.})"}],[2048,{"text":"if ($tno != 0 and $ValClass[$tno - 1] eq \"i\" and $ValPerl[$tno - 1] =~ /^v\\d/ and $s ne \"}\" and not $source =~ /=>/)"}],[2055,{"text":"if ($tno > 0) { }"}],[2075,{"text":"if ($ValClass[$i] eq '(') { }"}],[2075,{"text":"elsif ($ValClass[$i] eq ')') { }"}],[2085,{"text":"if $main::debug >= 5 and $Pythonizer::PassNo != &Pythonizer::PASS_0"}],[2095,{"text":"if ($tno > 0 and $ValPerl[0] eq 'sub') { }"}],[2095,{"text":"elsif ($tno == 0 and defined $nesting_last and $nesting_last->{'type'} eq 'do') { }"}],[2095,{"text":"elsif ($tno == 0 and $delayed_block_closure and scalar @nesting_stack and $nesting_stack[-1]{'type'} eq 'do') { }"}],[2112,{"text":"if length $source == 1"}],[2113,{"text":"if substr($source, 1) =~ /^\\s*$/"}],[2120,{"text":"if ($tno == 0) { }"}],[2114,{"text":"if (not $source =~ /^;\\s*#/) { }"}],[2087,{"text":"if ($balance != 0) { }"}],[2053,{"text":"if ($s eq '#') { }"}],[2053,{"text":"elsif ($s eq ';') { }"}],[2146,{"text":"if $main::debug >= 5"}],[2142,{"text":"if ($ExtractingTokensFromDoubleQuotedStringAdjustBrackets)"}],[2139,{"text":"if (index(substr($source, 0, $end_br), \"(\") == -1)"}],[2138,{"text":"if ($end_br > 0)"}],[2132,{"text":"if (index(\"\\$\\@%&*\", $s) != -1 and substr($source, 1, 1) eq \"{\" and length $source >= 4 and index(\"\\$\\@%&*\\\"'\", substr($source, 2, 1)) == -1)"}],[2160,{"text":"if ($delayed_do_false and $nesting_last->{'type'} eq \"do\")"}],[2156,{"text":"if (length $source >= 1)"}],[2189,{"text":"if $add_comma_after_anon_sub_end"}],[2190,{"text":"if $main::debug >= 5 and $Pythonizer::PassNo != &Pythonizer::PASS_0"}],[2185,{"text":"if (parens_are_balanced())"}],[2154,{"text":"if ($tno == 0) { }"}],[2154,{"text":"elsif ($tno > 0 and length $source == 1 || $source =~ /^}\\s*$/ || $source =~ /^}\\s*#/ || could_be_anonymous_sub_close() || $source =~ /^}\\s*(?:(?:(?:else|elsif|while|until|continue|)\\b)|;)/) { }"}],[2199,{"text":"if ($tno > 2 and $ValClass[$tno - 1] eq \"i\" and $ValPerl[$tno - 2] eq \"{\")"}],[2210,{"text":"if (&Pythonizer::next_same_level_token(\"A\", $sbr + 1, $tno - 1) != -1)"}],[2209,{"text":"if ($sbr != -1)"}],[2221,{"text":"if ($s eq '{') { }"}],[2226,{"text":"if (length $source > 1)"}],[2239,{"text":"if $s eq \"{\""}],[2256,{"text":"if $s eq \"{\""}],[2274,{"text":"if $main::debug >= 5 and $Pythonizer::PassNo != &Pythonizer::PASS_0"}],[2218,{"text":"if ($tno == 0 and looks_like_anon_hash_def($source)) { }"}],[2218,{"text":"elsif ($tno == 0) { }"}],[2218,{"text":"elsif ($tno == 2 and $ValClass[0] eq 'k' and $ValClass[1] eq 'i' and $ValPerl[0] eq 'use' and $ValPerl[1] eq 'constant' || $ValPerl[1] eq 'overload') { }"}],[2218,{"text":"elsif (length $source == 1 || $source =~ /^{\\s*#/ and $ValClass[$tno - 1] ne '=' and $ValClass[$tno - 1] ne 'f' and $ValClass[$tno - 1] ne 's' and $ValClass[$tno - 1] ne '(' and $ValClass[$tno - 1] ne ',') { }"}],[2218,{"text":"elsif ($ValClass[$tno - 1] ne '=' and $ValClass[$tno - 1] ne 'f' and $ValClass[$tno - 1] ne 'A' and $ValClass[$tno - 1] ne '(' and $ValClass[$tno - 1] ne ',' and $ValClass[$tno - 1] ne 's' and $ValPerl[$tno - 1] eq ')' || $source =~ /^.\\s*#/ || index($source, '}', 1) == -1 || $tno == 1 && $ValClass[0] eq 'C' || $tno == 2 && $ValPerl[0] eq 'sub' || $ValPerl[$tno - 1] eq 'sub' || $tno == 1 && $ValPerl[0] =~ /BEGIN|END|UNITCHECK|CHECK|INIT/) { }"}],[2218,{"text":"elsif ($ValClass[$tno - 1] eq 'D') { }"}],[2218,{"text":"elsif ($s eq '{' and $ValClass[$tno - 1] eq 'f' and semicolon_in_block($source)) { }"}],[2302,{"text":"if ($tno >= 1 and $ValClass[$tno - 2] eq 'f' && !($ValPerl[$tno - 2] =~ /^(?:chomp|chop|chr|shift)$/) || $ValPerl[$tno - 1] eq 'split') { }"}],[2321,{"text":"if $has_squiggle"}],[2327,{"text":"if $has_squiggle"}],[2316,{"text":"if ($tno > 0 and $ValPerl[$tno - 1] eq '<<' or $tno > 1 and $ValPerl[$tno - 1] eq '~' and $ValPerl[$tno - 2] eq '<<') { }"}],[2316,{"text":"elsif (index($ValPerl[$tno], \"\\n\") != -1) { }"}],[2334,{"text":"if $main::replace_usage"}],[2344,{"text":"if $has_squiggle"}],[2353,{"text":"if $has_squiggle"}],[2339,{"text":"if ($tno > 0 and $ValPerl[$tno - 1] eq '<<' or $tno > 1 and $ValPerl[$tno - 1] eq '~' and $ValPerl[$tno - 2] eq '<<') { }"}],[2339,{"text":"elsif (index($ValPy[$tno], \"\\n\") != -1 and substr($ValPy[$tno], 0, 1) eq 'f' and not $ValPy[$tno] =~ /^f\"\"\"/) { }"}],[2360,{"text":"if $main::replace_usage"}],[2379,{"text":"if (substr($val, -1, 1) eq \".\" and substr($source, length $val, 1) eq \".\")"}],[2369,{"text":"if ($source =~ /^(0x\\w+)/) { }"}],[2369,{"text":"elsif ($source =~ /(0b\\d+)/) { }"}],[2369,{"text":"elsif ($source =~ /(^\\d+(?:[_]\\d+)*(?:[.]\\d*(?:[_]\\d+)*)?(?:[Ee][+-]?\\d+(?:[_]\\d+)*)?)/) { }"}],[2369,{"text":"elsif ($source =~ /(\\d+)/) { }"}],[2390,{"text":"if ($cut > 1 and substr($ValPy[$tno], 0, 1) eq 0 and not $ValPy[$tno] =~ /[.exb]/)"}],[2405,{"text":"if $Pythonizer::PassNo == &Pythonizer::PASS_1"}],[2398,{"text":"if ($tno == 0 and $w eq \"END\")"}],[2408,{"text":"if (($pq = index($w, \"'\")) > 0 and exists $TokenType{substr $w, 0, $pq} and $TokenType{substr $w, 0, $pq} eq \"q\")"}],[2421,{"text":"if $ValPerl[$tno - 1] eq \"sub\""}],[2425,{"text":"if $sigil eq \"\" and not exists $keyword_tr{$w} and not substr($source, $cut) =~ /\\s*\\(/ and not exists $FileHandles{$w}"}],[2416,{"text":"if ($tno != 0 and ($ValClass[$tno - 1] eq \"k\" and $ValPerl[$tno - 1] eq \"sub\") or $ValClass[$tno - 1] eq \"f\" and $ValPerl[$tno - 1] =~ /^(?:opendir|open|closedir|close|printf|print|say|readdir|telldir|rewinddir|sysread|sysseek|syswrite|seek|tell|read|binmode|write)$/ or $tno - 2 >= 0 and $ValClass[$tno - 1] eq \"(\" and $ValClass[$tno - 2] eq \"f\" and $ValPerl[$tno - 2] =~ /^(?:opendir|open|closedir|close|printf|print|say|readdir|telldir|rewinddir|sysread|sysseek|syswrite|seek|tell|read|binmode|write)$/)"}],[2432,{"text":"if (substr($w, 0, 5) eq q[CORE']) { }"}],[2432,{"text":"elsif (substr($w, 0, 6) eq 'CORE::') { }"}],[2439,{"text":"if (substr($w, 0, 5) eq q[Carp'] and $w =~ /carp|confess|croak|cluck/) { }"}],[2439,{"text":"elsif (substr($w, 0, 6) eq 'Carp::' and $w =~ /carp|confess|croak|cluck/) { }"}],[2444,{"text":"if (substr($w, 0, 10) eq q[UNIVERSAL'] and $w =~ /isa/) { }"}],[2444,{"text":"elsif (substr($w, 0, 11) eq 'UNIVERSAL::' and $w =~ /isa/) { }"}],[2449,{"text":"if (exists $keyword_tr{$w})"}],[2452,{"text":"if (exists $CONSTANT_MAP{$w})"}],[2456,{"text":"if ($tno == 0 or $ValClass[$tno - 1] ne \"k\" or $ValPerl[$tno - 1] ne \"sub\")"}],[2455,{"text":"if ($Pythonizer::PassNo != &Pythonizer::PASS_0 and exists $FileHandles{$w})"}],[2462,{"text":"if ($class eq 'f' and not $core and exists $Pythonizer::UseSub{$w} || exists $Pythonizer::LocalSub{$w}) { }"}],[2462,{"text":"elsif ($class eq 'q' and $tno != 0 and $ValClass[$tno - 1] eq 'q') { }"}],[2462,{"text":"elsif ($class eq '\"' and $w eq '__PACKAGE__') { }"}],[2480,{"text":"if $pd >= 0"}],[2471,{"text":"if ($tno != 0 and $ValPerl[$tno - 1] eq '{' && $source =~ /^[a-z0-9]+}/ || index('{(,', $ValPerl[$tno - 1]) != -1 && $source =~ /^[a-z0-9]+\\s*=>/) { }"}],[2471,{"text":"elsif ($tno == 2 and $ValClass[0] eq 'G' and $ValClass[1] eq '=' and $class eq 'k' and $w eq 'sub') { }"}],[2471,{"text":"elsif ($tno != 0 and $ValClass[$tno - 1] eq 'D' || $ValClass[$tno - 1] eq 'c' && $ValPerl[$tno - 1] eq 'package' || $ValClass[$tno - 1] eq 'k' && $ValPerl[$tno - 1] eq 'require' && $class ne 'q' || $ValClass[$tno - 1] eq 'k' && $ValPerl[$tno - 1] =~ /^(?:sub|use|no)$/) { }"}],[2471,{"text":"elsif ($class eq 'f' and $w eq 'pos') { }"}],[2471,{"text":"elsif ($class eq 'f' and $w eq 'bless') { }"}],[2471,{"text":"elsif ($class eq 'd' and $w eq 'wantarray') { }"}],[2512,{"text":"if ($class eq \"c\" and $tno > 0 and $w ne \"assert\" and $Pythonizer::PassNo == &Pythonizer::PASS_1 and $ValClass[0] ne 'C' || $ValPerl[0] ne 'do')"}],[2527,{"text":"if ($ValClass[0] eq \"t\" and $ValPerl[0] eq \"local\")"}],[2540,{"text":"if (exists $keyword_tr{$w})"}],[2554,{"text":"if substr($condition_expr, -1, 0) ne \")\""}],[2582,{"text":"if ($balance % 2 == 0 and $ValClass[0] ne \"c\" and $ValClass[0] ne \"C\" and bash_style_or_and_fix($cut))"}],[2589,{"text":"if ($tno > 0 and $w eq \"my\" and $Pythonizer::PassNo == &Pythonizer::PASS_2)"}],[2596,{"text":"if (($delim = substr($source, length $w, 1)) =~ /\\s/)"}],[2606,{"text":"if ($cut == -1)"}],[2616,{"text":"if $main::replace_usage"}],[2621,{"text":"if (index($ValPy[$tno], \"\\n\") != -1 and substr($ValPy[$tno], 0, 1) eq \"f\" and not $ValPy[$tno] =~ /^f\"\"\"/)"}],[2625,{"text":"if $main::replace_usage"}],[2643,{"text":"if (length $modifier > 1) { }"}],[2666,{"text":"if ($delim eq \"\")"}],[2662,{"text":"if ($delim =~ tr/(<[{//)"}],[2686,{"text":"if (length $modifier > 1) { }"}],[2697,{"text":"if (index($modifier, 're.E') != -1) { }"}],[2704,{"text":"if (index($modifier, 're.E') != -1) { }"}],[2695,{"text":"if ($tno >= 1 and $ValClass[$tno - 1] eq '~') { }"}],[2693,{"text":"if (length $modifier > 0) { }"}],[2717,{"text":"if $modifier eq \"r\""}],[2639,{"text":"if ($w eq 'm' || $w eq 'qr' and ($tno >= 1 and $ValPerl[$tno - 1] eq 'split') or $tno >= 2 and $ValClass[$tno - 1] eq '(' and $ValPerl[$tno - 2] eq 'split') { }"}],[2639,{"text":"elsif ($w eq 'm' or $w eq 'qr' and $ValClass[$tno - 1] eq '~') { }"}],[2639,{"text":"elsif ($w eq 's') { }"}],[2639,{"text":"elsif ($w eq 'qr') { }"}],[2734,{"text":"if (index(\"{([<\", $delim) != -1)"}],[2747,{"text":"if ($source =~ /^(\\w+)/) { }"}],[2757,{"text":"unless ($tr_modifier =~ /[cd]/)"}],[2767,{"text":"if $main::import_perllib"}],[2769,{"text":"if ($tr_modifier =~ /d/)"}],[2779,{"text":"if $tr_modifier"}],[2781,{"text":"if (length $arg2 > length $arg1)"}],[2786,{"text":"if $tr_modifier"}],[2794,{"text":"if $tr_modifier"}],[2784,{"text":"if (length $arg2 == length $arg1) { }"}],[2777,{"text":"if ($arg2 eq '') { }"}],[2802,{"text":"if ($tno >= 1 and $ValClass[$tno - 1] eq '~') { }"}],[2822,{"text":"if $tr_modifier"}],[2764,{"text":"if ($tr_modifier =~ /c/) { }"}],[2764,{"text":"elsif ($tr_modifier =~ /d/) { }"}],[2764,{"text":"elsif ($tr_modifier eq 's' and $arg2 eq '' || $arg1 eq $arg2) { }"}],[2838,{"text":"if ($ValPerl[0] eq 'use' and $ValPerl[1] ne 'constant') { }"}],[2600,{"text":"if ($delim eq '' or $delim eq ';' and length $source == length($w) + 1) { }"}],[2600,{"text":"elsif ($w eq 'q') { }"}],[2600,{"text":"elsif ($w eq 'qq') { }"}],[2600,{"text":"elsif ($w eq 'qx') { }"}],[2600,{"text":"elsif ($w eq 'm' or $w eq 'qr' or $w eq 's') { }"}],[2600,{"text":"elsif ($w eq 'tr' or $w eq 'y') { }"}],[2600,{"text":"elsif ($w eq 'qw') { }"}],[2516,{"text":"if ($class eq 'c' and $tno > 0 and $w ne 'assert' and $Pythonizer::PassNo == &Pythonizer::PASS_2 and $ValClass[0] ne 'C' || $ValPerl[0] ne 'do') { }"}],[2516,{"text":"elsif ($class eq 'c' and $Pythonizer::PassNo == &Pythonizer::PASS_1 and $w eq 'if' || $w eq 'unless' and defined $nesting_last and $nesting_last->{'type'} eq 'do' and $source =~ /^(\\w+)(.*?);/) { }"}],[2516,{"text":"elsif ($class eq 'C' and $Pythonizer::PassNo == &Pythonizer::PASS_1 and $w eq 'continue') { }"}],[2516,{"text":"elsif ($class eq 'k' and $Pythonizer::PassNo == &Pythonizer::PASS_1 and $w eq 'next') { }"}],[2516,{"text":"elsif ($class eq 'o') { }"}],[2516,{"text":"elsif ($class eq 't') { }"}],[2516,{"text":"elsif ($class eq 'q') { }"}],[2516,{"text":"elsif ($w eq 'autoflush' and $tno - 2 > 0 and $ValClass[$tno - 1] eq 'D' and $ValPerl[$tno - 2] eq 'STDOUT' || $ValPerl[$tno - 2] eq 'STDERR') { }"}],[2861,{"text":"if $has_squiggle"}],[2868,{"text":"if $has_squiggle"}],[2460,{"text":"if (exists $TokenType{$w}) { }"}],[2460,{"text":"elsif ($tno > 1 and $ValPerl[$tno - 1] eq '<<' and index('sd)', $ValClass[$tno - 2]) == -1 or $tno > 2 and $ValPerl[$tno - 1] eq '~' and $ValPerl[$tno - 2] eq '<<' and index('sd)', $ValClass[$tno - 3]) == -1) { }"}],[2460,{"text":"elsif ($tno == 1 and $ValClass[0] eq 't') { }"}],[2873,{"text":"if ($Pythonizer::PassNo != &Pythonizer::PASS_0 and $ValClass[$tno] eq \"i\")"}],[2893,{"text":"if ($s2 eq \"\" or $s2 =~ /\\s/)"}],[2908,{"text":"if ($was eq \"\\@\" and &Pythonizer::in_sub_call($tno))"}],[2897,{"text":"if ($tno != 0 and $ValClass[$tno - 1] eq 's' && $ValPerl[$tno - 1] eq '$' || $ValClass[$tno - 1] eq '@' || $ValClass[$tno - 1] eq '%' && !$had_space)"}],[2915,{"text":"if ($main::debug >= 3 and $Pythonizer::PassNo != &Pythonizer::PASS_0)"}],[2926,{"text":"if $main::import_perllib"}],[2930,{"text":"if $main::import_perllib"}],[2924,{"text":"if ($source =~ /(?:Carp::)?confess/) { }"}],[2922,{"text":"if ($source =~ /\\{\\s*__DIE__/) { }"}],[2922,{"text":"elsif ($source =~ /\\{\\s*__WARN__/) { }"}],[2918,{"text":"if ($tno == 0 or $tno == 1 and $ValClass[0] eq 't') { }"}],[2954,{"text":"if ($main::debug >= 3 and $Pythonizer::PassNo != &Pythonizer::PASS_0)"}],[2913,{"text":"if ($ValPy[$tno] eq \"SIG\")"}],[2958,{"text":"if ($end_br)"}],[2877,{"text":"if (substr($source, 0, 11) eq '$DB::single') { }"}],[2966,{"text":"if ($s2 eq \"\" or $s2 =~ /\\s/)"}],[2991,{"text":"if ($tno >= 2 and $ValClass[$tno - 2] =~ /[sd'\"q]/ and $ValClass[$tno - 1] eq '>') { }"}],[2999,{"text":"if (substr($ValPy[$tno], 0, 1) eq \".\")"}],[2972,{"text":"if ($arg1 eq '_') { }"}],[2972,{"text":"elsif ($arg1 eq 'INC') { }"}],[2972,{"text":"elsif ($arg1 eq 'ARGV') { }"}],[2969,{"text":"if (substr($source, 1) =~ /^(\\:?\\:?\\'?\\w+((?:(?:\\:\\:)|\\')\\w+)*)/) { }"}],[3014,{"text":"if ($s2 eq \"\" or $s2 =~ /\\s/)"}],[3025,{"text":"if (substr($source, $cut, 2) eq '::') { }"}],[3032,{"text":"if (substr($ValPy[$tno], 0, 1) eq '.') { }"}],[3032,{"text":"elsif ($ValPy[$tno] eq 'ENV') { }"}],[3018,{"text":"if (substr($source, 1) =~ /^(\\:?\\:?\\'?[_a-zA-Z]\\w*((?:(?:\\:\\:)|\\')[_a-zA-Z]\\w*)*)/) { }"}],[3018,{"text":"elsif (substr($source, 1, 1) eq '=') { }"}],[3060,{"text":"if (substr($ValPy[$tno], 0, 1) eq \".\")"}],[3066,{"text":"if (substr($w, 0, 5) eq q[CORE']) { }"}],[3066,{"text":"elsif (substr($w, 0, 6) eq 'CORE::') { }"}],[3073,{"text":"if (substr($w, 0, 5) eq q[Carp'] and $w =~ /carp|confess|croak|cluck/) { }"}],[3073,{"text":"elsif (substr($w, 0, 6) eq 'Carp::' and $w =~ /carp|confess|croak|cluck/) { }"}],[3078,{"text":"if (substr($w, 0, 10) eq q[UNIVERSAL'] and $w =~ /isa/) { }"}],[3078,{"text":"elsif (substr($w, 0, 11) eq 'UNIVERSAL::' and $w =~ /isa/) { }"}],[3085,{"text":"if ($class eq 'f' and not $core and exists $Pythonizer::UseSub{$w} || exists $Pythonizer::LocalSub{$w}) { }"}],[3085,{"text":"elsif (exists $keyword_tr{$w}) { }"}],[3100,{"text":"if ($main::debug >= 3 and $Pythonizer::PassNo != &Pythonizer::PASS_0)"}],[3105,{"text":"if ($main::debug >= 3 and $Pythonizer::PassNo != &Pythonizer::PASS_0)"}],[3113,{"text":"if ($main::debug >= 3 and $Pythonizer::PassNo != &Pythonizer::PASS_0)"}],[3097,{"text":"if (cur_sub() ne \"__main__\" and $tno == 0 || $ValClass[$tno - 1] ne '\\\\' && $ValPerl[$tno - 1] ne 'defined' and not $tno - 2 >= 0 && $ValClass[$tno - 1] eq '(' && $ValPerl[$tno - 2] eq 'defined' and not substr($source, $cut) =~ /^\\s*\\(/)"}],[3083,{"text":"if (exists $TokenType{$w}) { }"}],[3051,{"text":"if (substr($source, 1) =~ /^(\\:?\\:?\\'?[_a-zA-Z]\\w*((?:(?:\\:\\:)|\\')[_a-zA-Z]\\w*)*)/) { }"}],[3135,{"text":"if (substr($ValPy[$tno], 0, 1) eq \".\")"}],[3142,{"text":"if ($main::implicit_global_my) { }"}],[3127,{"text":"if (substr($source, 1) =~ /^(\\:?\\:?\\'?[_a-zA-Z]\\w*((?:(?:\\:\\:)|\\')[_a-zA-Z]\\w*)*)/) { }"}],[3127,{"text":"elsif (substr($source, 1, 1) eq '{') { }"}],[3166,{"text":"if ($close != -1)"}],[3155,{"text":"if ($tno != 0 and $ValClass[$tno - 1] eq 'D') { }"}],[3155,{"text":"elsif ($s eq '(' and ($tno == 2 and $ValClass[0] eq 'k' and $ValPerl[0] eq 'sub' and $ValClass[1] eq 'i') or $tno != 0 and $ValClass[$tno - 1] eq 'k' and $ValPerl[$tno - 1] eq 'sub') { }"}],[3183,{"text":"if $quadgram eq \"<<>>\""}],[3201,{"text":"if ($balance % 2 == 0 and $ValClass[0] ne 'c' and $ValClass[0] ne 'C' and bash_style_or_and_fix(3)) { }"}],[3209,{"text":"if (exists $digram_map{$digram}) { }"}],[3198,{"text":"if ($ValClass[$tno] eq '0') { }"}],[3217,{"text":"if ($ValClass[$tno - 1] eq 'f' and $ValPerl[$tno - 1] eq 'delete') { }"}],[3217,{"text":"elsif ($ValClass[$tno - 1] eq 'd') { }"}],[3217,{"text":"elsif ($tno >= 3 and $ValClass[0] eq 'k' and $ValPerl[0] eq 'use' and $ValClass[1] eq 'i' and $ValPerl[1] eq 'constant' and $ValClass[$tno - 1] eq 'i') { }"}],[3216,{"text":"if ($digram eq \"=>\" and $tno != 0)"}],[3230,{"text":"if (index($TokenStr, \"c\") != -1 or index($TokenStr, \"o\") != -1 or index($TokenStr, 0) != -1)"}],[3246,{"text":"if (exists $DASH_X{$s2} and substr($source, 2, 1) =~ /\\s/) { }"}],[3279,{"text":"unless $fh eq \"\" or exists $keyword_tr{$fh} or exists $FileHandles{$fh}"}],[3270,{"text":"if ($quadgram eq '<<>>') { }"}],[3286,{"text":"if (length $fh == 0) { }"}],[3286,{"text":"elsif ($fh eq 'STDIN') { }"}],[3296,{"text":"if (length $fh == 0) { }"}],[3296,{"text":"elsif ($fh eq 'STDIN') { }"}],[3314,{"text":"if (length $fh == 0) { }"}],[3314,{"text":"elsif ($fh eq 'STDIN') { }"}],[3285,{"text":"if ($tno >= 2 and $ValClass[$tno - 2] eq 'a' and $ValClass[$tno - 1] eq '=') { }"}],[3285,{"text":"elsif ($ValClass[0] eq 'c' and $ValPerl[0] eq 'while') { }"}],[3345,{"text":"if ($tno >= 2 and $ValClass[$tno - 2] eq 'a' and $ValClass[$tno - 1] eq '=') { }"}],[3345,{"text":"elsif ($ValClass[0] eq 'c' and $ValPerl[0] eq 'while') { }"}],[3267,{"text":"if ($source =~ /^<(\\:?\\:?\\'?\\w*((?:(?:\\:\\:)|\\')\\w+)*)>/ or $quadgram eq '<<>>') { }"}],[3267,{"text":"elsif ($source =~ /^<\\$(\\w*)>/) { }"}],[3267,{"text":"elsif ($tno > 0 and index('(.=', $ValClass[$tno - 1]) != -1 and $source =~ /^<[^>]+>/) { }"}],[3385,{"text":"if ($tno != 0 and $ValClass[$tno - 1] eq 'd' and $ValPy[$tno - 1] =~ /^(\\d+)\\.(\\d+)$/) { }"}],[3385,{"text":"elsif ($tno != 0 and $ValClass[$tno - 1] eq '\"') { }"}],[3380,{"text":"if ($source =~ /(^[.]\\d+(?:[_]\\d+)*(?:[Ee][+-]?\\d+(?:[_]\\d+)*)?)/ and not is_concat()) { }"}],[3380,{"text":"elsif ($source =~ /^[.][.][.]/) { }"}],[3380,{"text":"elsif ($source =~ /^[.][.]/) { }"}],[3417,{"text":"if (length $source > 1)"}],[3378,{"text":"if ($s eq '.') { }"}],[3378,{"text":"elsif ($s eq '<') { }"}],[3378,{"text":"elsif ($s eq ':' and $tno == 1 and $ValClass[0] eq 'i') { }"}],[3378,{"text":"elsif ($s eq ',' and $tno != 0 and $ValClass[$tno - 1] eq ',') { }"}],[3184,{"text":"if ($trigram eq '<=>') { }"}],[3184,{"text":"elsif ($trigram eq '**=' or $trigram eq '>>=' or $trigram eq '<<=' or $trigram eq '||=' or $trigram eq '&&=') { }"}],[3184,{"text":"elsif (exists $digram_tokens{$digram}) { }"}],[3184,{"text":"elsif ($s eq '=') { }"}],[3184,{"text":"elsif ($s eq '\\\\') { }"}],[3184,{"text":"elsif ($s eq '!') { }"}],[3184,{"text":"elsif ($s eq '-') { }"}],[3184,{"text":"elsif ($s eq '<') { }"}],[2151,{"text":"if ($s eq '}') { }"}],[2151,{"text":"elsif ($s eq '{' or $s eq '^' and $tno == 0) { }"}],[2151,{"text":"elsif ($s eq '/' and $tno == 0 || $ValClass[$tno - 1] =~ /[~\\(,kc=o0!>]/ || $ValPerl[$tno - 1] eq 'split' || $ValPerl[$tno - 1] eq 'grep' || $ValClass[$tno - 1] eq 'r') { }"}],[2151,{"text":"elsif ($s eq q[']) { }"}],[2151,{"text":"elsif ($s eq '\"') { }"}],[2151,{"text":"elsif ($s eq '`') { }"}],[2151,{"text":"elsif ($s =~ /\\d/) { }"}],[2151,{"text":"elsif ($s =~ /\\w/) { }"}],[2151,{"text":"elsif ($s eq '$') { }"}],[2151,{"text":"elsif ($s eq '@') { }"}],[2151,{"text":"elsif ($s eq '%') { }"}],[2151,{"text":"elsif ($s eq '&' and ($ch = substr($source, 1, 1)) ne '&' and $ch ne '=') { }"}],[2151,{"text":"elsif ($s eq '*' and ($ch = substr($source, 1, 1)) ne '*' and $ch ne '=' and $tno == 0 || !($ValClass[$tno - 1] =~ /[sdfi)]/)) { }"}],[2151,{"text":"elsif ($s eq '[' or $s eq '(') { }"}],[2151,{"text":"elsif ($s eq ']' or $s eq ')') { }"}],[2151,{"text":"elsif ($s =~ /\\W/) { }"}],[3434,{"text":"$ate_dollar == $tno ? :"}],[3434,{"text":"unless $main::implicit_global_my"}],[3433,{"text":"if ($Pythonizer::PassNo == &Pythonizer::PASS_2) { }"}],[3433,{"text":"elsif ($Pythonizer::PassNo == &Pythonizer::PASS_1) { }"}],[3441,{"text":"unless $main::implicit_global_my"}],[3440,{"text":"if ($Pythonizer::PassNo == &Pythonizer::PASS_2) { }"}],[3440,{"text":"elsif ($Pythonizer::PassNo == &Pythonizer::PASS_1) { }"}],[3432,{"text":"if ($ValClass[$tno] =~ /[ahsG]/) { }"}],[3432,{"text":"elsif ($ValClass[$tno] eq 'j') { }"}],[3458,{"text":"if $match != -1"}],[3464,{"text":"if scalar @ValClass > 2"}],[3466,{"text":"if ($orig_stmt eq 'no') { }"}],[3471,{"text":"if $Pythonizer::PassNo == &Pythonizer::PASS_1"}],[3449,{"text":"if ($ValClass[0] eq 'k' and $ValPerl[0] eq 'last' || $ValPerl[0] eq 'next') { }"}],[3449,{"text":"elsif ($ValClass[0] eq 'k' and $Pythonizer::PassNo == &Pythonizer::PASS_1 and $ValPerl[0] eq 'redo') { }"}],[3449,{"text":"elsif ($ValClass[0] eq 't' and $ValPerl[0] eq 'local' and $Pythonizer::PassNo == &Pythonizer::PASS_1) { }"}],[3449,{"text":"elsif ($ValClass[0] eq 's' and $ValPerl[0] eq '$-' || $ValPerl[0] eq '$+' and $ValClass[1] eq '(') { }"}],[3449,{"text":"elsif ($ValClass[0] eq 'k' and $ValPerl[0] =~ /^(?:no|use)$/ and $ValPerl[1] eq 'warnings') { }"}],[3449,{"text":"elsif ($ValClass[0] eq 'k' and $ValPerl[0] eq 'use' and $ValPerl[1] eq 'lib') { }"}],[3449,{"text":"elsif ($ValClass[0] eq 'k' and $ValPerl[0] eq 'use' and $ValPerl[1] eq 'overload') { }"}],[3449,{"text":"elsif ($ValClass[0] eq 'k' and $ValPerl[0] eq 'use' || $ValPerl[0] eq 'require') { }"}],[3449,{"text":"elsif ($#ValClass == 3 and $ValClass[0] eq 't' and $ValClass[1] eq 'a' and $ValPerl[1] eq '@ISA' and $ValClass[2] eq '=' and $ValClass[3] eq 'q' and cur_sub() eq '__main__') { }"}],[3449,{"text":"elsif ($ValClass[0] eq 'k' and $ValPerl[0] eq 'return') { }"}],[3485,{"text":"if ($ValPerl[$i] eq 'last' or $ValPerl[$i] eq 'next') { }"}],[3485,{"text":"elsif ($ValPerl[$i] eq 'return') { }"}],[3485,{"text":"elsif ($ValPerl[$i] eq 'use' or $ValPerl[$i] eq 'require') { }"}],[3498,{"text":"if ($match != -1)"}],[3493,{"text":"if ($ValPerl[$i] eq '$-' || $ValPerl[$i] eq '$+' and ($i + 1 <= $#ValClass and $ValClass[$i + 1] eq '(')) { }"}],[3493,{"text":"elsif ($ValClass[$i - 1] eq 'f' and $ValPerl[$i - 1] eq 'pos' or $ValClass[$i - 1] eq '(' and $ValClass[$i - 2] eq 'f' and $ValPerl[$i - 2] eq 'pos') { }"}],[3510,{"text":"if $match > 0"}],[3484,{"text":"if ($ValClass[$i] eq 'k') { }"}],[3484,{"text":"elsif ($ValClass[$i] eq 's') { }"}],[3484,{"text":"elsif ($ValClass[$i] eq 'f' and $ValPy[$i] eq '_last_ndx' and $i + 1 < $#ValClass and $ValClass[$i + 1] eq '(') { }"}],[3484,{"text":"elsif ($ValClass[0] eq 'c' and $ValPerl[0] eq 'while' and $ValClass[$i] eq 'f' and exists $WHILE_MAGIC_FUNCTIONS{$ValPerl[$i]}) { }"}],[3517,{"text":"if ($pgx >= 0)"}],[3448,{"text":"if ($tno > 0)"}],[3523,{"text":"if ($main::debug >= 2 and $Pythonizer::PassNo == &Pythonizer::PASS_2)"}],[3535,{"text":"if ($cut > length $source) { }"}],[3535,{"text":"elsif ($cut > 0) { }"}],[3551,{"text":"if defined $source"}],[3553,{"text":"if ($Pythonizer::IntactLine) { }"}],[3560,{"text":"if (length $Pythonizer::IntactLine > 0) { }"}],[3570,{"text":"if $Pythonizer::TraceIntactLine"}],[3543,{"text":"if (length $source == 0 or $source =~ /^\\s+$/)"}],[3572,{"text":"if ($ExtractingTokensFromDoubleQuotedStringEnd > 0 and $ValClass[$tno] eq \"\\\"\" and substr($ValPy[$tno], 0, 4) eq \"f\\\"\\\"\\\"\")"}],[3576,{"text":"unless defined $ValType[$tno]"}],[3577,{"text":"if ($main::debug >= 3 and $Pythonizer::PassNo != &Pythonizer::PASS_0)"}],[3584,{"text":"if $main::debug >= 5"}],[3593,{"text":"if $cut > length $source"}],[3594,{"text":"if $main::debug >= 5"}],[3597,{"text":"if $main::debug >= 5"}],[3599,{"text":"if $main::debug >= 5"}],[3591,{"text":"if ($ExtractingTokensFromDoubleQuotedStringEnd <= 0 and $cut != 0) { }"}],[3601,{"text":"if $main::debug >= 5"}],[3603,{"text":"if $main::debug >= 5"}],[3587,{"text":"if (defined $source) { }"}],[3585,{"text":"if ($ExtractingTokensFromDoubleQuotedTokensEnd <= 0)"}],[3581,{"text":"if ($ExtractingTokensFromDoubleQuotedStringEnd > 0)"}],[3615,{"text":"if exists $SpecialVarsUsed{'$/'} or exists $SpecialVarsUsed{'$.'}"}],[3617,{"text":"if ($main::import_perllib)"}],[3627,{"text":"if $Pythonizer::PassNo != &Pythonizer::PASS_2"}],[3633,{"text":"if ($ValClass[$i] eq '(') { }"}],[3633,{"text":"elsif ($ValClass[$i] eq ')') { }"}],[3639,{"text":"if $balance > 0"}],[3641,{"text":"if ($main::debug >= 3)"}],[3645,{"text":"if $main::debug >= 3"}],[3644,{"text":"if ($split > $#ValClass)"}],[3650,{"text":"if $main::debug >= 3"}],[3649,{"text":"if ($line_contains_stmt_modifier{$statement_starting_lno})"}],[3660,{"text":"if $main::debug >= 3"}],[3663,{"text":"if $main::debug >= 3"}],[3655,{"text":"if ($tstr =~ /^t?[ahs](?:\\(.*\\))*=/ || $tstr =~ /^t?\\(.*,.*\\)=/ || $tstr =~ /^kiiA/ && $ValPerl[0] eq 'use' && ($ValPerl[1] eq 'constant' || $ValPerl[1] eq 'overload') and not $is_low_prec and $split >= length $source || !(substr($source, $split) =~ /^\\s*(?:return|next|last|assert|delete|require|die)\\b/)) { }"}],[3655,{"text":"elsif ($ValClass[0] eq 'k' and $ValPerl[0] eq 'return') { }"}],[3670,{"text":"if ($split < length $source)"}],[3675,{"text":"if ($ValClass[0] eq '(' and $ValClass[-2]) { }"}],[3681,{"text":"if ($is_or)"}],[3687,{"text":"if ($main::debug >= 3)"}],[3704,{"text":"scalar @_ >= 3 ? :"}],[3705,{"text":"scalar @_ >= 4 ? :"}],[3707,{"text":"if ($update)"}],[3712,{"text":"if ($s2 eq '$' || $s2 eq '%' and substr($source, 2, 1) =~ /[\\w:']/)"}],[3720,{"text":"if ($main::import_perllib) { }"}],[3731,{"text":"if $update"}],[3739,{"text":"if ($source =~ /^..(\\w+)/ and exists $SPECIAL_VAR_FULL{$1})"}],[3747,{"text":"if $update"}],[3753,{"text":"if ($main::import_perllib)"}],[3751,{"text":"if (substr($SPECIAL_VAR2{$s3}, 0, 1) eq \"_\")"}],[3749,{"text":"if (exists $SPECIAL_VAR2{$s3}) { }"}],[3748,{"text":"if (not $full and $s3 =~ /\\w/)"}],[3770,{"text":"if $nxc eq \"[\""}],[3771,{"text":"if $nxc eq \"{\""}],[3772,{"text":"if ($svar eq \"%+\")"}],[3777,{"text":"if $update"}],[3783,{"text":"if ($update)"}],[3787,{"text":"if ($s2 eq '0') { }"}],[3799,{"text":"unless $source =~ /^..\\{(\\:?\\:?\\'?\\w+((?:(?:\\:\\:)|\\')\\w+)*)\\}/ or $source =~ /^..\\$?(\\:?\\:?\\'?\\w+((?:(?:\\:\\:)|\\')\\w+)*)/"}],[3805,{"text":"if $update"}],[3806,{"text":"if $update"}],[3810,{"text":"if $update"}],[3814,{"text":"if ($update)"}],[3828,{"text":"if substr($name, 0, 2) eq \"::\""}],[3829,{"text":"if substr($name, 0, 1) eq \"'\""}],[3830,{"text":"if substr($name, 0, 6) eq \"main::\""}],[3831,{"text":"if substr($name, 0, 5) eq \"main'\""}],[3817,{"text":"if ($1 eq 'ARGV') { }"}],[3817,{"text":"elsif ($1 eq 'INC') { }"}],[3817,{"text":"elsif ($1 eq '_') { }"}],[3804,{"text":"if (not defined $1 and substr($source, 2, 1) eq '{') { }"}],[3804,{"text":"elsif (not defined $1 and substr($source, 2, 1) eq '+') { }"}],[3846,{"text":"if ($main::implicit_global_my) { }"}],[3845,{"text":"unless ($name)"}],[3855,{"text":"if ($update)"}],[3865,{"text":"if $next_c =~ /\\s/ and not $in_string"}],[3868,{"text":"unless ($nnc =~ /[\\d\\$]/)"}],[3866,{"text":"if ($in_regex and $next_c eq \"[\")"}],[3859,{"text":"if ($ate_dollar == $tno or $tno != 0 and $ValClass[$tno - 1] eq '@' || $ValClass[$tno - 1] eq 's' && $ValPerl[$tno - 1] eq '$') { }"}],[3875,{"text":"if ($k == 0 or substr($name, $k) eq 'main') { }"}],[3894,{"text":"if ($k == 0 or substr($name, $k) eq 'main') { }"}],[3916,{"text":"if ($source =~ /^(._\\s*\\[\\s*(\\d+)\\s*\\])/) { }"}],[3916,{"text":"elsif (substr($source, 2, 1) eq '[' and !$in_regex || substr($source, 3, 1) =~ /[\\d\\$]/) { }"}],[3913,{"text":"if ($s2 eq '_') { }"}],[3913,{"text":"elsif ($s2 eq 'a' or $s2 eq 'b') { }"}],[3953,{"text":"if ($cut < length $source and substr($source, $cut, 1) eq '[') { }"}],[3943,{"text":"if ($1 eq 'ENV') { }"}],[3943,{"text":"elsif ($1 eq 'INC') { }"}],[3943,{"text":"elsif ($1 eq 'ARGV') { }"}],[3873,{"text":"if (($k = index($name, '::')) > -1) { }"}],[3873,{"text":"elsif (($k = index($name, q['])) > -1) { }"}],[3873,{"text":"elsif (length $name == 1) { }"}],[3715,{"text":"if ($s2 eq '.') { }"}],[3715,{"text":"elsif ($s2 eq '^' and substr($source, 2, 1) =~ /[A-Z]/) { }"}],[3715,{"text":"elsif (index($specials, $s2) != -1 and substr($source, 1, 2) ne '::') { }"}],[3715,{"text":"elsif ($s2 =~ /\\d/) { }"}],[3715,{"text":"elsif ($s2 eq '#') { }"}],[3715,{"text":"elsif ($source =~ /^.(\\w*((?:(?:\\:\\:)|\\')\\w+)*)/) { }"}],[3990,{"text":"if $temp[$i] eq \"o\""}],[3993,{"text":"if ($modifier ne \"\")"}],[3984,{"text":"if ($source =~ /^(\\w+)/)"}],[4003,{"text":"if ($prev_sym ne '\\\\' and $sym eq '(') { }"}],[4003,{"text":"elsif ($prev_sym eq '$' and substr($myregex, $i) =~ /^(\\w+)/ and exists $Pythonizer::VarType{$1} and exists $Pythonizer::VarType{$1}{$cs} && $Pythonizer::VarType{$1}{$cs} eq 'R' || exists $Pythonizer::VarType{$1}{'__main__'} && $Pythonizer::VarType{$1}{'__main__'} eq 'R') { }"}],[4003,{"text":"elsif ($prev_sym ne '\\\\' and index('.*+()[]?^$|', $sym) >= -1) { }"}],[4003,{"text":"elsif ($prev_sym eq '\\\\' and lc($sym) =~ /[bsdwSDW]/) { }"}],[4020,{"text":"if ($modifier eq \"\")"}],[4017,{"text":"if ($meta_no > 0)"}],[4047,{"text":"if (exists $SpecialVarsUsed{'@-'} and exists $SpecialVarsUsed{'@-'}{$cs} or exists $SpecialVarsUsed{'@+'} and exists $SpecialVarsUsed{'@-'}{$cs})"}],[4052,{"text":"if ($main::debug > 3 and $Pythonizer::PassNo != &Pythonizer::PASS_0)"}],[4055,{"text":"if (length $modifier > 1) { }"}],[4066,{"text":"if ($groups_are_present) { }"}],[4075,{"text":"if ($groups_are_present) { }"}],[4064,{"text":"if ($tno >= 1 and $ValClass[$tno - 1] eq '~') { }"}],[4062,{"text":"if (length $modifier > 0) { }"}],[4097,{"text":"unless $#ValClass > 0"}],[4102,{"text":"if ($#ValType > $#ValClass)"}],[4117,{"text":"if $offset > length $source"}],[4118,{"text":"if (index(\"{[(<\", $closing_delim) != -1)"}],[4122,{"text":"if (index(\"}])>\", $closing_delim) != -1)"}],[4135,{"text":"if ($sym eq \"\\\\\")"}],[4139,{"text":"if (defined $opening_delim and $sym eq $opening_delim)"}],[4144,{"text":"if ($nest <= 0)"}],[4143,{"text":"if ($sym eq $closing_delim)"}],[4155,{"text":"unless ($line)"}],[4173,{"text":"if ($closing_delim =~ tr/>[{//)"}],[4181,{"text":"if (length $quote == 1)"}],[4214,{"text":"if ($main::debug >= 3 and $Pythonizer::PassNo != &Pythonizer::PASS_0)"}],[4231,{"text":"if $main::debug >= 3"}],[4230,{"text":"if ($Pythonizer::PassNo != &Pythonizer::PASS_0)"}],[4226,{"text":"if ($Pythonizer::PassNo == &Pythonizer::PASS_0 or $k == -1 || $k == length($quote) - 1 and index($quote, \"\\@\") == -1)"}],[4242,{"text":"if $main::debug >= 3"}],[4240,{"text":"if ($ExtractingTokensFromDoubleQuotedStringEnd > 0)"}],[4238,{"text":"if ($Pythonizer::PassNo == &Pythonizer::PASS_1 and $close_pos != 0) { }"}],[4238,{"text":"elsif ($Pythonizer::PassNo == &Pythonizer::PASS_1 and $last_varclass_lno != $. and $last_varclass_lno) { }"}],[4261,{"text":"if ($quote =~ /[\\$\\@\\\\]/)"}],[4265,{"text":"if (index($quote, '\"') == -1 and index($quote, \"\\n\") == -1) { }"}],[4265,{"text":"elsif (index($quote, q[']) == -1 and index($quote, '{') == -1 and index($quote, \"\\n\") == -1 and index($quote, '\\\\') == -1) { }"}],[4288,{"text":"if ($special_escape_flags & 2)"}],[4293,{"text":"if ($special_escape_flags & 4)"}],[4301,{"text":"if ($special_escape_flags & 4)"}],[4300,{"text":"unless ($special_escape_flags & 2)"}],[4287,{"text":"if (exists $SPECIAL_ESCAPES{$ch}) { }"}],[4282,{"text":"if ($special_escape_mode == 0 and $special_escape_flags == 0 || !($special_escape_flags & 1)) { }"}],[4318,{"text":"if ($special_escape_flags & 2)"}],[4323,{"text":"if ($special_escape_flags & 4)"}],[4329,{"text":"if ($special_escape_flags & 2)"}],[4334,{"text":"if ($special_escape_flags & 4)"}],[4342,{"text":"if ($special_escape_flags & 4)"}],[4341,{"text":"unless ($special_escape_flags & 2)"}],[4317,{"text":"if ($sig eq '$' || $sig eq '@' and $k + 1 < length $quote) { }"}],[4317,{"text":"elsif (exists $SPECIAL_ESCAPES{$sig}) { }"}],[4353,{"text":"if length $quote == 0"}],[4316,{"text":"if ($sig ne \"\\\\\")"}],[4362,{"text":"if $special_escape_mode == 0 and $special_escape_flags == 0"}],[4364,{"text":"if ($special_escape_flags & 2)"}],[4369,{"text":"if ($special_escape_flags & 4)"}],[4379,{"text":"if length $quote == 0"}],[4363,{"text":"if ($special_escape_flags & 1) { }"}],[4383,{"text":"if length $quote == 0"}],[4359,{"text":"if (exists $SPECIAL_ESCAPE_MODES{$next_c = substr($quote, $k + 1, 1)}) { }"}],[4390,{"text":"if (($next_3 = substr($quote, $k, 3)) eq \"L\\\\u\" or $next_3 eq \"U\\\\l\")"}],[4398,{"text":"unless ($special_escape_flags & 1)"}],[4402,{"text":"if ($special_escape_flags & 2)"}],[4417,{"text":"if ($new_s & 3)"}],[4414,{"text":"if (scalar @special_escape_stack)"}],[4425,{"text":"if ($special_escape_flags & 2)"}],[4423,{"text":"if (!scalar(@special_escape_stack) & ($special_escape_flags & 1))"}],[4437,{"text":"if ($special_escape_flags & 4)"}],[4442,{"text":"if ($main::import_perllib) { }"}],[4441,{"text":"if (($func_1 = substr($func, 0, 1)) eq \"_\")"}],[4449,{"text":"if ($func_1 eq '.') { }"}],[4408,{"text":"if ($func eq '') { }"}],[4458,{"text":"if length $quote == 0"}],[4280,{"text":"if ($sig eq \"\\\\\")"}],[4466,{"text":"if $k < 0"}],[4463,{"text":"if ($k >= 0 and substr($quote, $k, 1) eq $sig) { }"}],[4468,{"text":"if (substr($quote, $pos) =~ /[\\$\\@\\\\]/) { }"}],[4461,{"text":"if ($sig eq \"\\\\\")"}],[4486,{"text":"if (substr($quote, $k + 1) =~ /[\\$\\@]/) { }"}],[4494,{"text":"if (substr($quote, $k) =~ /[\\$\\@]/) { }"}],[4485,{"text":"if ($in_regex and $sig eq '$') { }"}],[4502,{"text":"if ($sig eq \"\\@\" and $pc =~ /\\w/ and ($dot = index($quote, \".\")) != -1)"}],[4482,{"text":"if (is_escaped($quote, $k)) { }"}],[4480,{"text":"if ($k > 0)"}],[4513,{"text":"if ($special_escape_flags & 4)"}],[4512,{"text":"unless ($special_escape_flags & 2)"}],[4511,{"text":"if ($special_escape_flags & 1)"}],[4510,{"text":"if ($quote eq $sig or substr($quote, 0, 1) eq $sig and substr($quote, 1) =~ /^\\s+$/)"}],[4525,{"text":"unless ($special_escape_flags & 1)"}],[4533,{"text":"if (substr($quote, 2, 2) eq '\\\\(' and $end_br != -1) { }"}],[4531,{"text":"if (length $quote != 0 and substr($quote, 1, 1) eq \"{\")"}],[4550,{"text":"if ($end_br > 0)"}],[4547,{"text":"if ($q2 ne $quote)"}],[4545,{"text":"if ($s2 eq \"\" or $s2 =~ /\\s/)"}],[4560,{"text":"if $end_br >= 0"}],[4563,{"text":"if ($quote =~ /[\\$\\@\\\\]/)"}],[4566,{"text":"if ($k == 0) { }"}],[4576,{"text":"if $end_br >= 0"}],[4579,{"text":"if ($quote =~ /[\\$\\@\\\\]/)"}],[4557,{"text":"if ($cut == 1) { }"}],[4557,{"text":"elsif ($in_regex and $cut == 2 and substr($quote, 0, 2) eq '$)') { }"}],[4596,{"text":"unless ($nnc =~ /[\\d\\$]/)"}],[4594,{"text":"if ($in_regex and $next_c eq \"[\")"}],[4608,{"text":"if $main::import_perllib"}],[4613,{"text":"if ($in_regex and exists $Pythonizer::VarType{$ValPy[$tno]} and exists $Pythonizer::VarType{$ValPy[$tno]}{$cs} && $Pythonizer::VarType{$ValPy[$tno]}{$cs} eq 'R' || exists $Pythonizer::VarType{$ValPy[$tno]}{'__main__'} && $Pythonizer::VarType{$ValPy[$tno]}{'__main__'} eq 'R')"}],[4606,{"text":"if ($prev eq '@') { }"}],[4649,{"text":"if $end_br >= 0"}],[4652,{"text":"if ($quote =~ /[\\$\\@\\\\]/)"}],[4655,{"text":"if ($k == 0) { }"}],[4646,{"text":"if ($cut == 1)"}],[4622,{"text":"if ($end_br > 0 and substr($quote, 0, 3) eq '@[%' and substr($quote, 3, 1) =~ /[\\w:]/) { }"}],[4622,{"text":"elsif ($end_br > 0 and substr($quote, 0, 4) eq '@ [%' and substr($quote, 4, 1) =~ /[\\w:]/) { }"}],[4622,{"text":"elsif ($end_br > 0 and substr($quote, 0, 2) eq '@[') { }"}],[4622,{"text":"elsif ($end_br > 0 and substr($quote, 0, 3) eq '@ [') { }"}],[4666,{"text":"if $main::import_perllib"}],[4543,{"text":"if ($sig eq '$') { }"}],[4543,{"text":"elsif ($sig eq '@') { }"}],[4680,{"text":"if ($end_br >= 0 and $n_len > $p_len)"}],[4690,{"text":"if ($nx3 eq \"->[\" or $nx3 eq \"->{\")"}],[4700,{"text":"if ($next_c eq '{') { }"}],[4706,{"text":"if ($next_c eq '{') { }"}],[4705,{"text":"if ($l >= 0)"}],[4698,{"text":"if ($ValPy[$tno] eq \"$DEFAULT_MATCH.start\" || $ValPy[$tno] eq \"$DEFAULT_MATCH.end\" || $ValPy[$tno] eq \"$DEFAULT_MATCH.group\" and index(\"{[\", $next_c) != -1)"}],[4724,{"text":"unless $nnc =~ /[\\d\\$]/"}],[4722,{"text":"if ($in_regex and $next_c eq \"[\")"}],[4734,{"text":"if ($c eq \"-\" and substr($ind, $i + 1, 1) eq \">\")"}],[4741,{"text":"if $l < 0"}],[4750,{"text":"if ($l > 0)"}],[4748,{"text":"if (substr($var, 1, 1) eq \"{\")"}],[4759,{"text":"if ($cut == 1)"}],[4738,{"text":"if ($c eq '{') { }"}],[4738,{"text":"elsif ($c eq '$') { }"}],[4774,{"text":"if ($nx3 eq \"->[\" or $nx3 eq \"->{\")"}],[4783,{"text":"if ($prev eq \"\\@\")"}],[4672,{"text":"if ($sig eq \"\\$\")"}],[4789,{"text":"if $end_br > 0"}],[4790,{"text":"if ($special_escape_flags == 1 and $special_escape_mode == 0) { }"}],[4798,{"text":"if ($quote =~ /[\\$\\@\\\\]/)"}],[4811,{"text":"if ($special_escape_flags & 2)"}],[4816,{"text":"if ($special_escape_flags & 4)"}],[4824,{"text":"if ($special_escape_flags & 4)"}],[4823,{"text":"unless ($special_escape_flags & 2)"}],[4810,{"text":"if (exists $SPECIAL_ESCAPES{$ch}) { }"}],[4805,{"text":"if ($special_escape_mode == 0 and $special_escape_flags == 0 || !($special_escape_flags & 1)) { }"}],[4803,{"text":"if (length $quote > 0)"}],[4836,{"text":"if ($special_escape_flags & 2)"}],[4845,{"text":"if ($special_escape_flags & 1)"}],[4850,{"text":"if (substr($result, -1, 1) eq \"\\\"\" and not is_escaped($result, length($result) - 1))"}],[4849,{"text":"if ($outer_delim eq \"\\\"\\\"\\\"\")"}],[4858,{"text":"if $main::debug >= 3"}],[4869,{"text":"if $Pythonizer::PassNo != &Pythonizer::PASS_2"}],[4871,{"text":"if $main::debug"}],[4879,{"text":"if $d eq \"(\""}],[4880,{"text":"if $d eq \"[\""}],[4890,{"text":"if $ValClass[$t_start] eq \"%\""}],[4896,{"text":"if $was_hash"}],[4882,{"text":"if ($limit != -1)"}],[4903,{"text":"if $main::debug"}],[4922,{"text":"if $main::debug >= 3"}],[4923,{"text":"if $initial"}],[4931,{"text":"if $main::debug >= 5"}],[4932,{"text":"if $main::debug >= 3"}],[4937,{"text":"if ($main::debug >= 3)"}],[4941,{"text":"if $main::debug >= 3"}],[4928,{"text":"if ($ExtractingTokensFromDoubleQuotedStringEnd <= 0) { }"}],[4928,{"text":"elsif ($pos != 0) { }"}],[4950,{"text":"if (substr($quote, $pos + 2, 2) eq '\\\\(') { }"}],[4950,{"text":"elsif (substr($quote, $pos + 2, 1) eq '[') { }"}],[4950,{"text":"elsif (substr($quote, $pos + 2, 2) eq ' [') { }"}],[4950,{"text":"elsif (substr($quote, $pos + 2, 1) eq '$') { }"}],[4947,{"text":"if (substr($quote, $pos + 1, 1) eq \"{\")"}],[4988,{"text":"if ($q2 ne $quote and $end_br > 0)"}],[4986,{"text":"if ($s2 eq \"\" or $s2 =~ /\\s/)"}],[4997,{"text":"if $cut != 1"}],[4984,{"text":"if ($sigil eq '$') { }"}],[4984,{"text":"elsif ($sigil eq '@') { }"}],[5003,{"text":"if ($nx3 eq \"->[\" or $nx3 eq \"->{\")"}],[5008,{"text":"if $d eq \"{\""}],[5009,{"text":"if $d eq \"[\""}],[5010,{"text":"if $m < 0"}],[5001,{"text":"if ($cut < length $quote and $sigil ne \"\")"}],[5015,{"text":"if ($end_br != -1) { }"}],[5023,{"text":"if $main::debug >= 5"}],[5024,{"text":"if $main::debug >= 3"}],[5028,{"text":"if $main::debug >= 5"}],[5030,{"text":"if $main::debug >= 3"}],[5035,{"text":"if ($ValClass[$i] eq ')') { }"}],[5035,{"text":"elsif ($ValClass[$i] eq '(') { }"}],[5040,{"text":"if $i eq $ExtractingTokensFromDoubleQuotedStringTnoStart"}],[5045,{"text":"if ($main::debug >= 3)"}],[5053,{"text":"if ($main::debug >= 3)"}],[5063,{"text":"if ($main::debug >= 3)"}],[5067,{"text":"if $main::debug >= 5"}],[5068,{"text":"if $main::debug >= 3"}],[4924,{"text":"if (($pos = unescaped_match($quote, qr/[\\$\\@]/)) >= 0) { }"}],[4924,{"text":"elsif ($initial) { }"}],[5081,{"text":"if ($ch eq \"\\\\\")"}],[5085,{"text":"if $ch =~ /$pat/"}],[5106,{"text":"if ($nx3 eq \"->[\" or $nx3 eq \"->{\")"}],[5111,{"text":"if $d eq \"{\""}],[5112,{"text":"if $d eq \"[\""}],[5113,{"text":"if ($m >= 0) { }"}],[5102,{"text":"if ($c eq \"\\$\" and substr($str, $k + 1) =~ /^(\\:?\\:?\\w+(\\:\\:\\w+)*)/)"}],[5126,{"text":"if $m >= 0"}],[5121,{"text":"if ($k == 0 or index('$@', substr($str, $k - 1, 1)) == -1) { }"}],[5120,{"text":"if ($c eq '{') { }"}],[5120,{"text":"elsif ($c eq '}') { }"}],[5144,{"text":"if (index(\"{[(<\", $delim) != -1)"}],[5149,{"text":"if ($k + 1 < length $str and substr($str, $k + 1, 1) eq $delim)"}],[5162,{"text":"if ($arg1 =~ /^\\d/ and $Pythonizer::PassNo == &Pythonizer::PASS_2)"}],[5188,{"text":"if (substr($ValPy[$tno], 0, 1) eq \".\")"}],[5165,{"text":"if ($arg1 eq '_') { }"}],[5165,{"text":"elsif ($arg1 eq 'INC') { }"}],[5165,{"text":"elsif ($arg1 eq 'ARGV') { }"}],[5160,{"text":"if (substr($source, 1) =~ /^(\\:?\\:?\\'?\\w+((?:(?:\\:\\:)|\\')\\w+)*)/) { }"}],[5214,{"text":"if (substr($ValPy[$tno], 0, 1) eq \".\")"}],[5218,{"text":"if ($ValPy[$tno] eq 'ENV') { }"}],[5207,{"text":"if (substr($source, 1) =~ /^(\\:?\\:?\\'?[_a-zA-Z]\\w*((?:(?:\\:\\:)|\\')[_a-zA-Z]\\w*)*)/) { }"}],[5240,{"text":"if (exists $keyword_tr{$w})"}],[5243,{"text":"if (exists $CONSTANT_MAP{$w})"}],[5254,{"text":"scalar @_ == 0 ? :"}],[5256,{"text":"if $main::debug >= 5 and $Pythonizer::PassNo != &Pythonizer::PASS_0"}],[5259,{"text":"if ($has_double_brackets) { }"}],[5287,{"text":"if $main::debug >= 5"}],[5296,{"text":"@_ >= 1 ? :"}],[5305,{"text":"if (exists $backslash_map{$ord}) { }"}],[5303,{"text":"if (not $ch =~ /[[:print:]]/ and $escape_all || $ch ne \"\\n\" && $ch ne \"\\t\") { }"}],[5314,{"text":"if ($escape_to_python) { }"}],[5299,{"text":"if ($string =~ /[^[:print:]]/)"}],[5333,{"text":"if (substr($string, -1, 1) eq \"\\\"\")"}],[5332,{"text":"if (index($string, \"\\n\") != -1)"}],[5338,{"text":"if (index($string, \"'\") == -1)"}],[5339,{"text":"if (index($string, \"\\\"\") == -1)"}],[5343,{"text":"if (substr($string, -1, 1) eq \"\\\"\" and not is_escaped($string, length($string) - 1))"}],[5363,{"text":"scalar @_ == 0 ? :"}],[5365,{"text":"unless $string =~ /\\\\/"}],[5368,{"text":"$in_regex ? :"}],[5380,{"text":"if ($next_3 eq \"u\\\\L\" or $next_3 eq \"l\\\\U\")"}],[5387,{"text":"if (scalar @stack == 0) { }"}],[5393,{"text":"if ($m & 4) { }"}],[5393,{"text":"elsif ($m & 8) { }"}],[5393,{"text":"elsif ($m & 16) { }"}],[5386,{"text":"if ($m == 0) { }"}],[5376,{"text":"if (index($allowed, $ch2) != -1) { }"}],[5376,{"text":"elsif (exists $SPECIAL_ESCAPE_MODES{$ch2}) { }"}],[5374,{"text":"if ($ch eq \"\\\\\")"}],[5412,{"text":"if ($mode & 4) { }"}],[5412,{"text":"elsif ($mode & 8) { }"}],[5412,{"text":"elsif ($mode & 16) { }"}],[5421,{"text":"scalar @stack ? :"}],[5424,{"text":"scalar @stack ? :"}],[5419,{"text":"if ($mode & 1) { }"}],[5419,{"text":"elsif ($mode & 2) { }"}],[5428,{"text":"if (not $is_regex and substr($ch, 0, 1) eq \"\\\\\")"}],[5426,{"text":"if ($mode & 32)"}],[5462,{"text":"scalar @_ > 3 ? :"}],[5463,{"text":"if ($main::debug > 4 and $Pythonizer::PassNo != &Pythonizer::PASS_0)"}],[5473,{"text":"unless $s_rhs"}],[5476,{"text":"if $s_rhs"}],[5466,{"text":"if ($delim ne \"'\")"}],[5480,{"text":"if $s_rhs"}],[5490,{"text":"if exists $Pass0::line_no_convert_regex{$.}"}],[5524,{"text":"if ($regex =~ /(?:(?<=[\\\\][\\\\])|(?<![\\\\]))\\\\G/) { }"}],[5524,{"text":"elsif ($regex =~ /\\(\\?R\\)/ or $regex =~ /\\(\\?[+-]\\d+\\)/) { }"}],[5524,{"text":"elsif ($regex =~ /\\(\\?&\\w+\\)/) { }"}],[5523,{"text":"if ($Pythonizer::PassNo == &Pythonizer::PASS_2)"}],[5573,{"text":"if (index(\"{[(<\", $closing_delim) != -1)"}],[5581,{"text":"if ($ch2 eq '') { }"}],[5581,{"text":"elsif ($ch2 eq q['] and $opening_delim eq q[']) { }"}],[5581,{"text":"elsif ($ch2 eq $opening_delim or $ch2 eq $closing_delim) { }"}],[5581,{"text":"elsif ($ch2 eq '\\\\') { }"}],[5581,{"text":"elsif (index(qq[nrtfbvae01234567xNuU\\n\"'], $ch2) != -1) { }"}],[5579,{"text":"if ($ch eq '\\\\') { }"}],[5579,{"text":"elsif ($ch eq q['] and $opening_delim eq q[']) { }"}],[5655,{"text":"if (exists $SpecialVarsUsed{'qr'}) { }"}],[5663,{"text":"if ($line =~ /^\\s*\\[([\\w.]+(?:,[\\w.]+)*)\\] = perllib\\.list_of_n\\(perllib.Array\\(\\), \\d+\\)/)"}],[5681,{"text":"if in_string($line, $pos)"}],[5684,{"text":"if ($end_pos1 + 1 == $end_pos and $end_pos > $pos)"}],[5700,{"text":"if $i == $pos"}],[5707,{"text":"if $i == $pos"}],[5709,{"text":"if ($s eq \"\\\\\")"}],[5712,{"text":"if $s eq $quote"}],[5702,{"text":"if ($s eq '\\\\') { }"}],[5702,{"text":"elsif ($s eq q['] or $s eq '\"') { }"}],[5773,{"text":"scalar @_ > 2 ? :"}],[5774,{"text":"scalar @_ > 3 ? :"}],[5782,{"text":"if ($balance == 0)"}],[5793,{"text":"if ($s eq \"\\\\\")"}],[5796,{"text":"if $s eq $quote"}],[5778,{"text":"if ($s eq '(') { }"}],[5778,{"text":"elsif ($s eq ')') { }"}],[5778,{"text":"elsif ($s eq '\\\\') { }"}],[5778,{"text":"elsif ($s eq $bad_char) { }"}],[5778,{"text":"elsif ($s eq q['] or $s eq '\"') { }"}],[5811,{"text":"if (scalar @_ == 0 and scalar @PythonCode == 0)"}],[5820,{"text":"substr($_[-1], -1, 1) eq ':' ? :"}],[5824,{"text":"unless defined $ValPy[$i]"}],[5825,{"text":"if $ValPy[$i] eq \"\""}],[5828,{"text":"if (index(q['\"/], $s) != -1 or $s =~ /\\w/) { }"}],[5827,{"text":"if ($ValPy[$i - 1] =~ /\\w$/) { }"}],[5838,{"text":"if $line"}],[5843,{"text":"substr($line, -1, 1) eq ':' ? :"}],[5844,{"text":"if (defined $ValCom[-1] and length $ValCom[-1] > 1) { }"}],[5852,{"text":"if (defined $ValCom[$i] and length $ValCom[$i] > 1)"}],[5815,{"text":"if (scalar @_ > 0) { }"}],[5815,{"text":"elsif (defined $main::TrStatus and $main::TrStatus < 0 and scalar @ValPy > 0) { }"}],[5815,{"text":"elsif (scalar @PythonCode > 0) { }"}],[5815,{"text":"elsif ($line) { }"}],[5860,{"text":"if ($main::debug >= 4)"}],[5875,{"text":"if (defined $line and exists $PYTHON_KEYWORD_SET{$line})"}],[5879,{"text":"unless defined $PythonCode[$i]"}],[5880,{"text":"if $PythonCode[$i] eq \"\""}],[5883,{"text":"if (defined $line and substr($line, -1, 1) ne \" \")"}],[5882,{"text":"if (exists $PYTHON_KEYWORD_SET{$PythonCode[$i]}) { }"}],[5882,{"text":"elsif (defined $line and substr($line, -1, 1) =~ /[\\w'\"]/ and $s =~ /[\\w'\"]/) { }"}],[5882,{"text":"elsif (exists $SpaceBoth{$PythonCode[$i]} and defined $line and substr($line, -1, 1) ne ' ') { }"}],[5882,{"text":"elsif ($PythonCode[$i] eq ',') { }"}],[5914,{"text":"if (scalar @PythonCode > $MAX_CHUNKS)"}],[5925,{"text":"if (substr($chu, 0, 1) eq \"_\")"}],[5922,{"text":"if ($main::import_perllib and exists $main::Pyf{$_[$i]} and $main::Pyf{$_[$i]} == 1 and substr($_[$i], 0, length($PERLLIB) + 1) ne \"$PERLLIB.\") { }"}],[5933,{"text":"if $main::debug > 4"}],[5938,{"text":"if $main::debug >= 3"}],[5945,{"text":"if $main::debug >= 3"}],[5954,{"text":"scalar @_ > 3 ? :"}],[5960,{"text":"if ($pos < 0)"}],[5963,{"text":"if ($pos > $#ValClass)"}],[5976,{"text":"if ($pos == scalar @ValClass)"}],[5980,{"text":"if ($pos > $#ValClass)"}],[5987,{"text":"if ($pos <= $#ValType) { }"}],[6011,{"text":"if ($from == -1) { }"}],[6011,{"text":"elsif (scalar @_ == 1) { }"}],[6018,{"text":"if ($from > $#ValClass) { }"}],[6018,{"text":"elsif ($from + $howmany > scalar @ValClass) { }"}],[6031,{"text":"if (scalar @ValType >= $from + $howmany)"}],[6043,{"text":"if (length $TokenStr > 6 and substr($TokenStr, 0, 6) eq 's(s^)=') { }"}],[6043,{"text":"elsif (($wart_pos = index($TokenStr, 's^)')) > -1 and $ValPerl[$wart_pos + 2] eq ']') { }"}],[6043,{"text":"elsif (($wart_pos = index($TokenStr, '(^s')) > -1 and $ValPerl[$wart_pos] eq '[') { }"}],[6068,{"text":"scalar @_ > 2 ? :"}],[6075,{"text":"if ($balance == 0)"}],[6071,{"text":"if ($s eq '(') { }"}],[6071,{"text":"elsif ($s eq ')') { }"}],[6091,{"text":"scalar @_ > 2 ? :"}],[6098,{"text":"if ($balance == 0)"}],[6094,{"text":"if ($s eq '{') { }"}],[6094,{"text":"elsif ($s eq '}') { }"}],[6114,{"text":"scalar @_ > 2 ? :"}],[6121,{"text":"if ($balance == 0)"}],[6117,{"text":"if ($s eq '[') { }"}],[6117,{"text":"elsif ($s eq ']') { }"}],[6135,{"text":"scalar @_ >= 2 ? :"}],[6141,{"text":"if (exists $PYTHON_RESERVED_SET{$id} or $id eq $DEFAULT_PACKAGE and $i != 0 || $id eq $name and not $is_package_name and not $main::implicit_global_my) { }"}],[6141,{"text":"elsif (substr($id, 0, 1) =~ /\\d/) { }"}],[6175,{"text":"scalar @_ ? :"}],[6181,{"text":"unless defined $py_name"}],[6180,{"text":"if (exists $NameMap{$name} and exists $NameMap{$name}{$sigil}) { }"}],[6180,{"text":"elsif (not defined $py_name) { }"}],[6199,{"text":"if $esc eq $name"}],[6196,{"text":"if (substr($name, -1, 1) eq \"_\")"}],[6201,{"text":"if $sigil eq \"\\@\""}],[6202,{"text":"if $sigil eq \"%\""}],[6203,{"text":"if $sigil eq \"\\$\""}],[6212,{"text":"if $trailer eq \"[\""}],[6213,{"text":"if $trailer eq \"{\""}],[6224,{"text":"scalar @_ >= 1 ? :"}],[6226,{"text":"if $Pythonizer::PassNo == &Pythonizer::PASS_0"}],[6227,{"text":"unless $name"}],[6228,{"text":"if substr($name, -1, 1) eq \")\""}],[6229,{"text":"if $name =~ /\\.__dict__$/"}],[6230,{"text":"if substr($name, 0, 3) eq \"os.\""}],[6231,{"text":"if substr($name, 0, 4) eq \"sys.\""}],[6232,{"text":"if substr($name, 0, 5) eq \"math.\""}],[6233,{"text":"if substr($name, 0, 8) eq \"perllib.\""}],[6234,{"text":"if $name eq \".\""}],[6241,{"text":"if $id =~ /_[avh]$/ and exists $NameMap{$i = substr($id, 0, length($id) - 2)} and $NameMap{$i}{$sigil} eq $id"}],[6250,{"text":"if $main::debug >= 5"}],[6248,{"text":"if (exists $NameMap{$name} and exists $NameMap{$name}{$sigil})"}],[6257,{"text":"if $main::debug >= 5"}],[6247,{"text":"if (scalar @ids > 1)"}],[6296,{"text":"if (scalar @ids > 1 and index($ids[-1], \".\") != -1)"}],[6302,{"text":"if $main::debug >= 5"}],[6294,{"text":"if (exists $NameMap{$id} and exists $NameMap{$id}{$sigil} and $NameMap{$id}{$sigil} ne $id)"}],[6308,{"text":"if $main::debug >= 3"}],[6311,{"text":"if $sig eq $sigil"}],[6312,{"text":"unless exists $NameMap{$id}"}],[6313,{"text":"unless exists $NameMap{$id}{$sig}"}],[6316,{"text":"if $main::debug >= 3"}],[6314,{"text":"if ($NameMap{$id}{$sig} eq $id)"}],[6306,{"text":"if ($main::remap_all or $force or exists $main::remap_requests{$sigil . $id} or exists $main::remap_requests{$id} or exists $main::remap_requests{'*' . $id}) { }"}],[6322,{"text":"if (scalar @ids > 1 and index($ids[-1], \".\") != -1)"}],[6328,{"text":"if $main::debug >= 5"}],[6305,{"text":"if ($sigil ne \"\" and $sigil ne \"&\")"}],[6335,{"text":"unless exists $NameMap{$id}"}],[6336,{"text":"unless exists $NameMap{$id}{$sig}"}],[6339,{"text":"if $main::debug >= 3"}],[6344,{"text":"if $pkg ne \"\""}],[6346,{"text":"if $pkg ne \"\""}],[6347,{"text":"if $main::debug >= 5"}],[6348,{"text":"if (exists $Pythonizer::VarSubMap{$nam})"}],[6352,{"text":"if (exists $Pythonizer::VarType{$nam})"}],[6358,{"text":"if (exists $subh->{$nam})"}],[6365,{"text":"if (exists $subh->{$nam})"}],[6337,{"text":"if ($NameMap{$id}{$sig} eq $id)"}],[6334,{"text":"if ($sig ne $sigil)"}],[6374,{"text":"if $main::debug >= 5"}],[6382,{"text":"if $ValClass[$i] eq \"(\""}],[6383,{"text":"if $ValClass[$i] eq \")\""}],[6394,{"text":"if $pos == 0"}],[6395,{"text":"if substr($string, $pos - 1, 1) ne \"\\\\\""}],[6396,{"text":"if $pos == 1"}],[6397,{"text":"if substr($string, $pos - 2, 1) ne \"\\\\\""}],[6398,{"text":"if $pos == 2"}],[6399,{"text":"if substr($string, $pos - 3, 1) eq \"\\\\\""}],[6408,{"text":"if (exists $GLOBALS{$value})"}],[6414,{"text":"if (exists $GLOBALS{$value})"}],[6430,{"text":"if $source =~ /^%\\s*\\$/"}],[6432,{"text":"if $in_string"}],[6434,{"text":"if length $source > 1"}],[6440,{"text":"unless ($line)"}],[6444,{"text":"if (substr($source, 0, 1) eq '%' and substr($line, 0, 1) eq '$') { }"}],[6455,{"text":"if $main::debug >= 5"}],[6451,{"text":"if ($new_source_length < $orig_source_length)"}],[6457,{"text":"if $main::debug >= 3"}],[6480,{"text":"if ($has_double_brackets)"}],[6485,{"text":"if $has_double_brackets"}],[6487,{"text":"if (substr($arg, $i + 2) =~ /([0-9a-fA-F]+)/) { }"}],[6478,{"text":"if ($ch3 eq '{') { }"}],[6497,{"text":"if ($has_double_brackets)"}],[6502,{"text":"if $has_double_brackets"}],[6505,{"text":"if ($has_double_brackets)"}],[6510,{"text":"if $has_double_brackets"}],[6474,{"text":"if (exists $ch_escapes{$ch2}) { }"}],[6474,{"text":"elsif ($ch2 eq 'x') { }"}],[6474,{"text":"elsif ($ch2 eq 'c') { }"}],[6474,{"text":"elsif ($ch2 eq 'o' and substr($arg, $i + 2, 1) eq '{') { }"}],[6474,{"text":"elsif ($ch2 eq 'N' and substr($arg, $i + 2, 1) eq '{') { }"}],[6474,{"text":"elsif (substr($arg, $i + 1) =~ /([0-7]+)/) { }"}],[6474,{"text":"elsif ($ch2 eq '-') { }"}],[6474,{"text":"elsif ($ch2 eq '\\\\') { }"}],[6520,{"text":"if $main::debug >= 5"}],[6528,{"text":"@_ >= 1 ? :"}],[6542,{"text":"if ($has_double_brackets)"}],[6548,{"text":"if $has_double_brackets"}],[6550,{"text":"if (substr($arg, $i + 2) =~ /([0-9a-fA-F]+)/) { }"}],[6540,{"text":"if ($ch3 eq '{') { }"}],[6564,{"text":"if ($has_double_brackets)"}],[6570,{"text":"if $has_double_brackets"}],[6573,{"text":"if ($has_double_brackets)"}],[6580,{"text":"unless (defined $charname)"}],[6578,{"text":"if (substr($charname, 0, 2) eq \"U+\")"}],[6586,{"text":"unless (defined $ch)"}],[6591,{"text":"if $has_double_brackets"}],[6535,{"text":"if (exists $ch_escapes{$ch2}) { }"}],[6535,{"text":"elsif ($ch2 eq 'x') { }"}],[6535,{"text":"elsif ($ch2 eq 'c') { }"}],[6535,{"text":"elsif ($ch2 eq 'o' and substr($arg, $i + 2, 1) eq '{') { }"}],[6535,{"text":"elsif ($ch2 eq 'N' and substr($arg, $i + 2, 1) eq '{') { }"}],[6535,{"text":"elsif (substr($arg, $i + 1) =~ /([0-7]+)/) { }"}],[6535,{"text":"elsif ($ch2 eq '-') { }"}],[6535,{"text":"elsif ($ch2 eq '\\\\') { }"}],[6533,{"text":"if ($ch eq \"\\\\\")"}],[6623,{"text":"if ($ch eq \"\\\\\")"}],[6620,{"text":"if ($delim eq \"'\")"}],[6642,{"text":"if (substr($arg, $i - 1, 1) eq substr($arg, $i + 1, 1))"}],[6637,{"text":"if ($ch eq '\\\\') { }"}],[6637,{"text":"elsif ($ch eq '-' and $i > 0 and $i < length($arg) - 1) { }"}],[6663,{"text":"if length $arg2 == length $arg1"}],[6664,{"text":"if length $arg2 == 0"}],[6665,{"text":"if length $arg2 > length $arg1"}],[6681,{"text":"if (exists $hash{substr $arg1, $i, 1}) { }"}],[6718,{"text":"if ($ch2 eq '' or index('abfntrg0\\\\', $ch2) != -1) { }"}],[6718,{"text":"elsif (index('xNuU', $ch2) != -1 or $delim eq q[']) { }"}],[6716,{"text":"if ($ch eq '\\\\') { }"}],[6730,{"text":"if $main::debug >= 5 and $Pythonizer::PassNo != &Pythonizer::PASS_0"}],[6738,{"text":"if ($Pythonizer::PassNo != &Pythonizer::PASS_1)"}],[6746,{"text":"if (index(q['\"], substr($ValPy[$i], 0, 1)) != -1) { }"}],[6752,{"text":"if ($ValPerl[$i] eq 'dirname' and $ValPerl[$i + 1] eq '$0') { }"}],[6752,{"text":"elsif ($ValPerl[$i] eq 'dirname' and $ValPerl[$i + 1] eq '(' and $ValPerl[$i + 2] eq '$0') { }"}],[6743,{"text":"if ($ValClass[$i] eq '\"') { }"}],[6743,{"text":"elsif ($ValClass[$i] eq 'q') { }"}],[6743,{"text":"elsif ($ValClass[$i] eq 'f') { }"}],[6763,{"text":"if $debug"}],[6772,{"text":"if ($ValClass[$i] eq \"i\")"}],[6791,{"text":"if (-f $fullpy)"}],[6796,{"text":"unless ($path)"}],[6808,{"text":"if $main::debug"}],[6803,{"text":"if (&main::lock_it($fullpy)) { }"}],[6811,{"text":"if $main::debug"}],[6812,{"text":"unless (open PYTHON, \"<\", $fullpy)"}],[6828,{"text":"if $line =~ /^(?:[A-Za-z][A-Za-z0-9_]*[.])+([A-Za-z][A-Za-z0-9_]*) = ([A-Za-z][A-Za-z0-9_]*)/ and $1 eq $2"}],[6829,{"text":"if $line =~ /^\\s*#/"}],[6845,{"text":"if $esc eq $python_name"}],[6842,{"text":"if (substr($python_name, -1, 1) eq \"_\")"}],[6840,{"text":"if ($sig eq '') { }"}],[6834,{"text":"if ($line =~ /($pat)/)"}],[6860,{"text":"if ($main::debug >= 5)"}],[6873,{"text":"if ($Pythonizer::PassNo != &Pythonizer::PASS_1)"}],[6879,{"text":"if $main::debug >= 3"}],[6895,{"text":"if ($pos + 1 <= $#ValClass and $ValClass[$pos + 1] eq 'd' || $ValClass[$pos + 1] eq '\"' && substr($ValPy[$pos + 1], 0, 3) eq q['\\\\x] || $ValClass[$pos + 1] eq 'i' && exists $BUILTIN_LIBRARY_SET{$ValPerl[$pos + 1]}) { }"}],[6895,{"text":"elsif ($pos + 1 <= $#ValClass and $ValClass[$pos + 1] eq 'i' and $ValPerl[$pos + 1] eq 'constant' || $ValPerl[$pos + 1] eq 'open' || $ValPerl[$pos + 1] eq 'overload') { }"}],[6911,{"text":"if $opp >= $pos"}],[6913,{"text":"if $close >= $pos"}],[6919,{"text":"if (substr($ValPy[$pos + 1], 0, 1) eq 'f') { }"}],[6914,{"text":"if ($pos == $limit) { }"}],[6914,{"text":"elsif ($pos + 1 == $limit and $ValClass[$pos + 1] eq 's') { }"}],[6914,{"text":"elsif ($pos + 1 == $limit and $ValClass[$pos + 1] eq '\"') { }"}],[6914,{"text":"elsif ($pos + 1 <= $limit and $ValClass[$pos + 1] eq 'i') { }"}],[6943,{"text":"if $main::debug"}],[6944,{"text":"unless $file =~ /[A-Za-z0-9_.-]/"}],[6949,{"text":"if $main::debug"}],[6950,{"text":"unless $file =~ /[A-Za-z0-9_.]/"}],[6941,{"text":"if ($ValClass[$pos + 1] eq '\"') { }"}],[6966,{"text":"if (index(q['\"], substr($ValPy[$i], 0, 1)) != -1) { }"}],[6959,{"text":"if ($ValClass[$i] eq 'i' and $ValPerl[$i] =~ /^v\\d/) { }"}],[6959,{"text":"elsif ($ValClass[$i] eq 'd') { }"}],[6959,{"text":"elsif ($ValClass[$i] eq '\"') { }"}],[6959,{"text":"elsif ($ValClass[$i] eq 'q') { }"}],[6973,{"text":"if $desired_version and substr($desired_version, 0, 1) eq \"v\""}],[6985,{"text":"if (-f $fullfile) { }"}],[6980,{"text":"if (file_name_is_absolute($file)) { }"}],[7007,{"text":"if $debug"}],[7164,{"text":"unless $flags"}],[7171,{"text":"unless $f"}],[7172,{"text":"if (exists $regex_flag_map{$f}) { }"}],[7172,{"text":"elsif ($Pythonizer::PassNo == &Pythonizer::PASS_2) { }"}],[7185,{"text":"if $tno == 0"}],[7186,{"text":"if $ValClass[$tno - 1] eq \"\\\"\" and $ValPerl[$tno - 1] =~ /^v\\d*/ and substr($ValPy[$tno - 1], 1, 2) eq \"\\\\x\""}],[7200,{"text":"if $ch2 eq \"\\\\\" and $in_regex"}],[7208,{"text":"if ($bs2 != -1)"}],[7198,{"text":"if (exists $SPECIAL_ESCAPES{$ch2}) { }"}],[7198,{"text":"elsif ($ch2 eq '-') { }"}],[7223,{"text":"if $end_br < 0"}],[7224,{"text":"if index(substr($source, 0, $end_br), \";\") > 0"}],[7248,{"text":"if $main::debug"}],[7244,{"text":"if (index($TokenStr, \"=\") == -1)"}],[7251,{"text":"if $match < 0"}],[7256,{"text":"if $main::debug"}],[7265,{"text":"if length $source == 1"}],[7266,{"text":"if $source =~ /\\{\\s*\\}/"}],[7267,{"text":"if $source =~ /\\{\\s*\\w+\\s*=>/"}],[7268,{"text":"if $source =~ /\\{\\s*'\\w+'\\s*=>/"}],[7269,{"text":"if $source =~ /\\{\\s*q.\\w+.\\s*=>/"}],[7270,{"text":"if $source =~ /\\{\\s*qq.\\w+.\\s*=>/"}]],"subroutine":[[48,"BEGIN"],[49,"BEGIN"],[51,"BEGIN"],[52,"BEGIN"],[54,"BEGIN"],[55,"BEGIN"],[57,"BEGIN"],[58,"BEGIN"],[59,"BEGIN"],[60,"BEGIN"],[61,"BEGIN"],[62,"BEGIN"],[1196,"BEGIN"],[1273,"BEGIN"],[1487,"BEGIN"],[1509,"BEGIN"],[1549,"BEGIN"],[1584,"BEGIN"],[1605,"BEGIN"],[2082,"BEGIN"],[4188,"BEGIN"],[4191,"BEGIN"],[4676,"BEGIN"],[677,"TRY_BLOCK_EXCEPTION"],[678,"TRY_BLOCK_FINALLY"],[679,"TRY_BLOCK_HAS_CONTINUE"],[680,"TRY_BLOCK_HAS_NEXT"],[681,"TRY_BLOCK_HAS_LAST"],[682,"TRY_BLOCK_REDO_LOOP"],[683,"TRY_BLOCK_CONTINUE_NEEDED_ONE"],[702,"initialize"],[719,"add_package_name"],[759,"add_package_name_sub"],[782,"add_package_name_fh"],[808,"add_package_name_j"],[846,"get_perl_name"],[868,"cur_package"],[883,"capture_varclass_j"],[899,"capture_varclass"],[976,"propagate_varclass_for_here"],[986,"map_var_class_into_sub"],[996,"determine_varclass_keepers"],[1019,"get_sub_vars_with_class"],[1037,"get_py_name"],[1058,"def_label"],[1069,"could_be_anonymous_sub_close"],[1078,"in_conditional"],[1091,"in_sub"],[1098,"cur_sub"],[1105,"get_loop_ctr"],[1116,"set_loop_ctr_mod"],[1130,"is_continue_block"],[1148,"track_continue"],[1161,"track_redo"],[1184,"flag_next_in_continue"],[1195,"enter_block"],[1281,"exit_block"],[1311,"is_eval"],[1321,"last_next_propagates"],[1361,"handle_pos_ref"],[1373,"handle_return"],[1381,"handle_return_in_expression"],[1408,"return_in_BEGIN_needs_raise"],[1425,"handle_last_next"],[1446,"track_potential_sub_call"],[1458,"set_continue_needed_try_block"],[1479,"continue_needed_try_block"],[1501,"needs_try_block"],[1524,"in_eval"],[1532,"in_BEGIN"],[1541,"has_continue"],[1563,"set_needs_implicit_continue"],[1576,"needs_implicit_continue"],[1597,"needs_redo_loop"],[1620,"cur_loop_ndx"],[1630,"loop_ndx_with_label"],[1647,"begin_loop_label"],[1660,"cur_loop_label"],[1674,"try_block_exception_name"],[1684,"gen_try_block_finally"],[1729,"next_last_needs_raise"],[1760,"handle_local"],[1805,"prepare_local"],[1854,"prepare_locals"],[1893,"push_locals"],[1938,"init_local_typeglobs"],[1977,"choose_glob"],[2004,"tokenize"],[3534,"finish"],[3614,"select_readline"],[3626,"bash_style_or_and_fix"],[3702,"decode_scalar"],[3981,"is_regex"],[4035,"perl_match"],[4097,"popup"],[4113,"single_quoted_literal"],[4171,"double_quoted_literal"],[4200,"interpolate_strings"],[4866,"handle_expr_in_string"],[4919,"extract_tokens_from_double_quoted_string"],[5076,"unescaped_match"],[5096,"escape_curly_braces"],[5141,"remove_escaped_delimiters"],[5158,"decode_array"],[5205,"decode_hash"],[5234,"decode_bare"],[5253,"perl_hex_escapes_to_python"],[5294,"escape_non_printables"],[5329,"escape_quotes"],[5361,"remove_perl_escapes"],[5442,"escape_triple_singlequotes"],[5451,"escape_triple_doublequotes"],[5459,"put_regex_in_quotes"],[5488,"perl_regex_to_python"],[5539,"escape_only_backslash"],[5569,"escape_backslash"],[5619,"remove_oddities"],[5696,"in_string"],[5771,"python_matching_paren"],[5809,"gen_statement"],[5874,"format_chunks"],[5909,"gen_chunk"],[5938,"save_code"],[5944,"restore_code"],[5950,"append"],[5959,"replace"],[5975,"insert"],[6009,"destroy"],[6040,"autoincrement_fix"],[6066,"matching_paren"],[6089,"matching_curly_br"],[6112,"matching_square_br"],[6134,"escape_keywords"],[6173,"add_package_to_mapped_name"],[6191,"mapped_name"],[6209,"actual_sigil"],[6221,"remap_conflicting_names"],[6380,"parens_are_balanced"],[6391,"is_escaped"],[6406,"init_perllib"],[6424,"get_rest_of_variable_name"],[6467,"end_of_escape"],[6527,"unescape_string"],[6615,"expand_ranges"],[6661,"make_same_length"],[6677,"first_map_wins"],[6695,"replace_usage"],[6709,"escape_re_sub"],[6737,"handle_use_lib"],[6770,"handle_use_overload"],[6781,"get_mapped_names_for_package"],[6873,"handle_use_require"],[6935,"handle_import"],[7162,"build_in_qr_flags"],[7185,"is_concat"],[7194,"replace_escape_with_chr"],[7220,"semicolon_in_block"],[7241,"handle_while_magic_function"],[7263,"looks_like_anon_hash_def"]],"file":"C:/pythonizer/pythonizer/Perlscan.pm","statement":[48,48,49,49,49,51,51,51,52,52,52,54,54,54,55,55,55,57,57,57,58,58,58,59,59,59,60,60,60,61,61,61,62,62,62,1196,1196,1196,1273,1273,1273,1487,1487,1487,1509,1509,1509,1549,1549,1549,1584,1584,1584,1605,1605,1605,2082,2082,2082,4188,4188,4188,4191,4191,4191,4676,4676,4676,677,678,679,680,681,682,683,702,703,704,705,706,707,708,709,710,719,720,723,724,725,726,727,729,730,731,732,733,734,735,736,737,739,740,741,743,744,745,747,748,749,751,759,761,762,763,764,765,766,770,771,772,773,774,782,784,785,786,787,788,789,791,792,794,796,797,798,799,808,809,810,811,812,813,814,815,817,818,819,821,823,824,825,828,829,830,831,832,833,834,835,836,837,838,846,847,848,850,851,852,854,855,856,858,860,862,863,868,869,870,872,874,876,877,883,884,885,886,888,889,890,891,893,899,900,901,902,903,904,905,906,907,908,909,912,913,915,916,918,919,922,923,925,926,928,929,930,931,933,936,937,939,940,941,942,943,944,945,947,948,950,951,952,953,954,955,970,976,977,978,980,986,987,988,989,990,996,997,1004,1005,1005,1006,1007,1008,1009,1012,1013,1019,1020,1022,1023,1024,1024,1025,1026,1027,1030,1037,1039,1040,1041,1042,1043,1045,1048,1049,1051,1052,1053,1058,1059,1060,1062,1063,1069,1070,1071,1072,1073,1078,1079,1080,1081,1084,1085,1086,1091,1092,1093,1098,1099,1100,1105,1106,1107,1108,1110,1116,1118,1119,1120,1121,1122,1130,1132,1133,1134,1135,1137,1138,1139,1141,1142,1148,1149,1150,1152,1154,1161,1163,1165,1166,1168,1169,1170,1171,1172,1174,1175,1177,1178,1184,1185,1186,1187,1195,1197,1199,1200,1201,1202,1203,1205,1206,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1224,1228,1229,1230,1232,1238,1242,1243,1244,1246,1247,1248,1249,1250,1251,1253,1254,1255,1257,1259,1260,1261,1264,1265,1266,1268,1271,1272,1274,1274,1276,1281,1282,1283,1285,1287,1288,1289,1291,1292,1294,1295,1296,1297,1298,1298,1299,1300,1301,1305,1311,1312,1314,1321,1322,1324,1325,1326,1327,1328,1329,1330,1331,1332,1333,1335,1336,1337,1341,1343,1344,1345,1346,1347,1348,1349,1351,1354,1361,1363,1365,1366,1373,1374,1375,1381,1384,1385,1386,1387,1388,1389,1390,1392,1393,1394,1395,1397,1399,1400,1401,1408,1409,1410,1411,1412,1414,1417,1420,1425,1427,1429,1430,1431,1433,1434,1435,1436,1437,1438,1446,1448,1449,1450,1451,1452,1458,1459,1461,1462,1463,1464,1466,1467,1468,1470,1471,1473,1479,1481,1482,1483,1484,1486,1488,1488,1490,1492,1493,1495,1496,1501,1503,1504,1505,1506,1508,1510,1510,1512,1514,1515,1517,1518,1524,1525,1526,1532,1533,1534,1536,1541,1543,1544,1545,1546,1548,1550,1550,1552,1554,1555,1557,1558,1563,1565,1566,1567,1568,1569,1570,1571,1571,1576,1578,1579,1580,1581,1583,1585,1585,1587,1588,1590,1591,1592,1597,1599,1600,1601,1602,1604,1606,1606,1608,1610,1611,1613,1614,1620,1621,1622,1624,1630,1632,1633,1635,1636,1637,1638,1641,1647,1648,1649,1650,1652,1654,1660,1661,1662,1663,1665,1667,1674,1675,1676,1677,1678,1684,1685,1686,1687,1688,1689,1690,1691,1692,1692,1693,1694,1697,1698,1699,1700,1701,1702,1703,1704,1705,1706,1709,1710,1712,1713,1714,1716,1718,1721,1722,1729,1731,1732,1733,1734,1735,1737,1739,1740,1760,1761,1763,1765,1766,1767,1768,1769,1771,1773,1774,1776,1780,1781,1782,1785,1786,1790,1791,1792,1794,1795,1795,1797,1799,1800,1805,1806,1808,1809,1811,1812,1813,1814,1815,1816,1818,1820,1822,1823,1824,1826,1829,1830,1831,1832,1834,1836,1839,1840,1841,1842,1843,1844,1854,1855,1856,1857,1858,1859,1860,1861,1862,1863,1864,1865,1866,1867,1867,1868,1870,1871,1872,1859,1878,1879,1880,1881,1882,1883,1884,1885,1886,1893,1895,1896,1897,1898,1899,1900,1901,1903,1903,1904,1905,1905,1906,1907,1910,1911,1912,1913,1914,1915,1916,1917,1918,1919,1921,1924,1925,1926,1929,1930,1938,1940,1942,1943,1948,1950,1951,1953,1954,1955,1956,1957,1957,1958,1959,1960,1962,1963,1964,1977,1978,1980,1981,1982,1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1996,2004,2005,2006,2007,2008,2009,2010,2012,2013,2015,2016,2017,2018,2019,2020,2025,2026,2027,2028,2029,2030,2031,2032,2033,2034,2036,2038,2039,2040,2041,2042,2043,2044,2045,2042,2048,2050,2051,2053,2055,2058,2060,2062,2063,2064,2065,2067,2073,2074,2075,2076,2078,2082,2083,2084,2085,2087,2089,2090,2091,2095,2096,2099,2099,2099,2100,2100,2101,2101,2101,2101,2102,2102,2104,2107,2108,2110,2112,2113,2114,2116,2117,2120,2121,2123,2125,2130,2131,2132,2137,2138,2139,2140,2141,2142,2143,2144,2145,2146,2151,2154,2156,2157,2158,2159,2160,2162,2163,2163,2163,2164,2164,2165,2165,2165,2165,2166,2166,2167,2170,2185,2189,2190,2191,2192,2193,2194,2199,2200,2201,2203,2204,2205,2207,2208,2209,2210,2211,2212,2218,2221,2222,2224,2226,2227,2229,2239,2241,2242,2243,2256,2259,2260,2261,2262,2264,2265,2266,2267,2273,2274,2275,2276,2277,2278,2279,2280,2281,2282,2286,2288,2289,2290,2295,2296,2298,2299,2300,2301,2302,2305,2307,2311,2312,2313,2316,2319,2320,2321,2323,2324,2325,2326,2327,2330,2332,2334,2337,2338,2339,2342,2343,2344,2346,2347,2349,2350,2351,2352,2353,2354,2357,2358,2360,2361,2363,2364,2365,2369,2371,2375,2378,2379,2380,2384,2387,2388,2389,2390,2391,2395,2396,2397,2398,2399,2400,2401,2402,2403,2404,2405,2407,2408,2410,2411,2413,2414,2415,2416,2420,2421,2425,2426,2428,2429,2430,2431,2432,2433,2434,2436,2437,2439,2440,2442,2444,2445,2447,2449,2450,2452,2453,2455,2456,2457,2460,2461,2462,2463,2464,2466,2467,2469,2471,2473,2474,2477,2478,2479,2480,2481,2482,2483,2484,2485,2486,2487,2488,2493,2494,2496,2497,2498,2500,2501,2502,2503,2506,2508,2509,2511,2512,2513,2516,2527,2528,2530,2530,2530,2530,2532,2532,2532,2532,2533,2534,2535,2536,2537,2538,2539,2540,2541,2543,2544,2552,2553,2554,2555,2556,2557,2559,2561,2580,2582,2586,2589,2590,2591,2596,2597,2598,2600,2601,2602,2603,2605,2606,2607,2608,2612,2613,2614,2615,2616,2619,2620,2621,2622,2623,2625,2628,2629,2630,2632,2633,2635,2636,2637,2638,2639,2642,2643,2645,2648,2650,2652,2653,2658,2659,2662,2664,2666,2668,2669,2670,2671,2672,2673,2674,2676,2679,2681,2682,2683,2684,2685,2686,2688,2691,2693,2695,2697,2698,2701,2704,2705,2708,2713,2716,2717,2718,2719,2720,2721,2723,2727,2728,2730,2731,2732,2733,2734,2736,2738,2741,2743,2744,2745,2746,2747,2748,2749,2751,2753,2755,2756,2757,2758,2759,2761,2762,2764,2765,2766,2767,2768,2769,2770,2772,2773,2774,2776,2777,2778,2779,2781,2782,2784,2785,2786,2788,2789,2790,2791,2792,2793,2794,2800,2801,2802,2803,2805,2821,2822,2835,2837,2838,2839,2842,2843,2844,2845,2847,2853,2854,2859,2860,2861,2862,2863,2864,2865,2866,2867,2868,2870,2871,2873,2874,2877,2880,2881,2882,2883,2884,2885,2887,2892,2893,2894,2896,2897,2902,2903,2904,2905,2906,2907,2908,2909,2913,2914,2915,2916,2918,2919,2921,2922,2923,2924,2925,2926,2927,2929,2930,2931,2932,2934,2935,2937,2938,2939,2942,2943,2944,2945,2946,2951,2952,2954,2955,2958,2959,2965,2966,2967,2969,2970,2971,2972,2973,2974,2975,2977,2978,2979,2982,2983,2984,2986,2987,2988,2989,2990,2991,2992,2993,2995,2999,3000,3001,3004,3006,3007,3009,3013,3014,3015,3018,3019,3020,3021,3022,3023,3024,3025,3026,3027,3029,3030,3032,3033,3034,3036,3037,3038,3039,3042,3043,3044,3046,3051,3052,3053,3054,3055,3056,3057,3058,3059,3060,3061,3062,3064,3065,3066,3067,3068,3070,3071,3073,3074,3076,3078,3079,3081,3083,3084,3085,3086,3088,3090,3094,3095,3097,3100,3101,3103,3104,3105,3106,3108,3109,3110,3111,3112,3113,3114,3116,3117,3121,3127,3128,3129,3130,3131,3132,3133,3134,3135,3136,3137,3141,3142,3143,3145,3147,3148,3149,3150,3152,3155,3156,3157,3158,3159,3160,3164,3165,3166,3167,3168,3169,3172,3173,3176,3177,3180,3181,3182,3183,3184,3185,3186,3187,3188,3190,3191,3192,3194,3195,3197,3198,3199,3201,3204,3206,3209,3210,3212,3214,3216,3217,3218,3219,3221,3222,3224,3229,3230,3233,3235,3237,3238,3241,3242,3244,3246,3247,3248,3250,3251,3260,3264,3265,3267,3269,3270,3271,3272,3274,3275,3276,3277,3278,3279,3285,3286,3287,3288,3289,3291,3293,3296,3297,3298,3299,3301,3302,3303,3309,3310,3311,3314,3316,3317,3318,3322,3323,3328,3329,3330,3338,3339,3340,3345,3346,3351,3352,3353,3354,3358,3359,3360,3361,3368,3369,3370,3371,3373,3374,3377,3378,3379,3380,3381,3382,3383,3385,3386,3387,3388,3389,3390,3391,3393,3395,3396,3397,3400,3401,3402,3403,3405,3406,3407,3408,3410,3413,3414,3416,3417,3418,3420,3421,3423,3424,3425,3427,3432,3433,3434,3437,3440,3441,3443,3446,3448,3449,3450,3452,3454,3456,3457,3458,3460,3461,3462,3463,3464,3465,3466,3467,3469,3471,3473,3475,3477,3479,3481,3483,3484,3485,3486,3488,3490,3493,3494,3495,3496,3497,3498,3499,3500,3504,3508,3509,3510,3512,3515,3516,3517,3518,3522,3523,3525,3534,3535,3536,3537,3540,3543,3545,3546,3547,3548,3549,3550,3551,3552,3553,3554,3556,3558,3560,3562,3563,3564,3567,3568,3570,3572,3574,3576,3577,3578,3580,3581,3582,3583,3584,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3597,3598,3599,3601,3603,3604,3614,3615,3616,3617,3618,3620,3626,3627,3629,3630,3631,3632,3633,3634,3636,3639,3641,3642,3644,3645,3646,3649,3650,3651,3654,3655,3660,3661,3663,3664,3667,3669,3670,3671,3673,3674,3675,3676,3678,3679,3681,3682,3683,3684,3686,3687,3688,3690,3691,3702,3703,3704,3705,3706,3707,3708,3710,3711,3712,3713,3715,3719,3720,3721,3722,3724,3725,3727,3728,3729,3730,3731,3732,3734,3735,3736,3737,3738,3739,3740,3741,3742,3743,3745,3746,3747,3748,3749,3750,3751,3752,3753,3754,3756,3759,3764,3765,3766,3767,3768,3769,3770,3771,3772,3773,3775,3776,3777,3779,3780,3781,3782,3783,3784,3785,3787,3788,3790,3792,3793,3795,3799,3804,3805,3806,3807,3808,3810,3811,3812,3814,3815,3817,3818,3819,3821,3822,3824,3825,3827,3828,3829,3830,3831,3832,3833,3834,3835,3836,3839,3843,3844,3845,3846,3847,3849,3851,3853,3855,3856,3858,3859,3864,3865,3866,3867,3868,3869,3873,3875,3876,3877,3878,3879,3880,3881,3882,3885,3886,3887,3888,3889,3890,3894,3895,3896,3897,3898,3899,3900,3901,3904,3905,3906,3907,3908,3909,3912,3913,3914,3915,3916,3917,3918,3919,3921,3922,3923,3925,3926,3927,3932,3933,3935,3936,3942,3943,3944,3945,3946,3948,3949,3950,3952,3953,3954,3955,3957,3958,3961,3962,3963,3967,3968,3969,3971,3981,3982,3983,3984,3985,3986,3987,3988,3990,3991,3993,3993,3994,3995,3997,3998,3999,4000,4001,4002,4003,4004,4008,4010,4012,4014,4016,4017,4020,4020,4021,4024,4035,4036,4037,4039,4040,4041,4045,4046,4047,4049,4052,4053,4055,4057,4060,4062,4064,4066,4067,4069,4075,4076,4078,4085,4086,4097,4098,4099,4100,4101,4102,4103,4113,4114,4117,4118,4119,4121,4122,4123,4124,4126,4127,4128,4131,4133,4135,4136,4137,4139,4140,4141,4143,4144,4145,4147,4151,4152,4153,4154,4155,4156,4157,4159,4160,4171,4172,4173,4174,4176,4177,4178,4179,4180,4181,4182,4183,4185,4200,4201,4202,4203,4204,4210,4211,4212,4214,4215,4217,4218,4219,4221,4225,4226,4229,4230,4231,4233,4238,4239,4240,4241,4242,4243,4249,4250,4257,4258,4260,4261,4262,4265,4266,4270,4272,4274,4275,4276,4277,4278,4279,4280,4282,4283,4285,4286,4287,4288,4289,4290,4291,4293,4294,4295,4297,4298,4300,4301,4302,4303,4305,4306,4308,4312,4313,4314,4315,4316,4317,4318,4319,4320,4321,4323,4324,4325,4327,4329,4330,4331,4332,4334,4335,4336,4338,4339,4341,4342,4343,4344,4346,4347,4349,4350,4352,4353,4354,4359,4360,4362,4363,4364,4365,4366,4367,4369,4370,4371,4373,4374,4375,4377,4378,4379,4380,4381,4383,4384,4385,4390,4391,4392,4393,4395,4396,4397,4398,4399,4400,4402,4403,4404,4405,4407,4408,4409,4410,4411,4412,4414,4415,4416,4417,4418,4419,4420,4423,4425,4426,4427,4429,4430,4431,4432,4433,4434,4437,4438,4439,4441,4442,4443,4445,4449,4450,4451,4453,4454,4457,4458,4461,4462,4463,4464,4466,4468,4469,4470,4471,4472,4474,4475,4476,4478,4480,4481,4482,4485,4486,4487,4489,4492,4494,4495,4497,4500,4502,4503,4506,4509,4510,4511,4512,4513,4514,4515,4517,4518,4521,4522,4523,4525,4526,4527,4530,4531,4532,4533,4534,4535,4536,4537,4539,4543,4544,4545,4546,4547,4548,4550,4551,4554,4556,4557,4558,4559,4560,4561,4562,4563,4564,4566,4567,4568,4570,4572,4574,4575,4576,4577,4578,4579,4580,4582,4583,4593,4594,4595,4596,4597,4605,4606,4607,4608,4609,4611,4612,4613,4616,4622,4623,4624,4625,4627,4628,4631,4632,4633,4635,4636,4639,4640,4642,4643,4645,4646,4647,4648,4649,4650,4651,4652,4653,4655,4656,4658,4660,4662,4665,4666,4667,4670,4671,4672,4674,4676,4677,4679,4680,4681,4689,4690,4691,4692,4697,4698,4700,4701,4703,4705,4706,4707,4708,4709,4710,4711,4713,4714,4716,4717,4718,4721,4722,4723,4724,4726,4728,4732,4733,4734,4735,4736,4738,4739,4741,4742,4746,4748,4749,4750,4751,4752,4753,4757,4758,4759,4760,4761,4762,4763,4765,4766,4767,4770,4772,4773,4774,4775,4776,4779,4780,4783,4784,4786,4789,4790,4791,4792,4794,4797,4798,4799,4803,4805,4806,4808,4809,4810,4811,4812,4813,4814,4816,4817,4818,4820,4821,4823,4824,4825,4826,4828,4829,4831,4836,4837,4838,4840,4841,4842,4843,4845,4846,4849,4850,4851,4853,4855,4857,4858,4859,4866,4867,4869,4871,4872,4873,4874,4875,4877,4878,4879,4880,4881,4882,4883,4884,4885,4886,4887,4888,4889,4890,4891,4892,4893,4894,4895,4896,4897,4900,4901,4902,4903,4904,4919,4920,4922,4923,4924,4927,4928,4930,4931,4932,4933,4936,4937,4938,4940,4941,4942,4944,4945,4946,4947,4948,4950,4951,4953,4955,4956,4958,4960,4962,4963,4965,4967,4969,4970,4972,4974,4976,4978,4980,4981,4984,4985,4986,4987,4988,4989,4991,4993,4996,4997,4999,5000,5001,5002,5003,5004,5006,5007,5008,5009,5010,5011,5012,5015,5017,5018,5020,5022,5023,5024,5025,5027,5028,5029,5030,5031,5033,5034,5035,5036,5038,5040,5042,5043,5044,5045,5046,5048,5050,5051,5052,5053,5054,5056,5058,5059,5060,5061,5062,5063,5064,5066,5067,5068,5069,5076,5077,5079,5080,5081,5082,5083,5085,5087,5096,5099,5100,5101,5102,5103,5104,5105,5106,5107,5109,5110,5111,5112,5113,5114,5116,5120,5121,5122,5123,5125,5126,5129,5130,5135,5141,5142,5144,5145,5148,5149,5150,5153,5158,5160,5161,5162,5163,5165,5166,5169,5170,5171,5175,5176,5177,5184,5186,5187,5188,5189,5192,5193,5195,5199,5205,5207,5208,5211,5212,5213,5214,5216,5218,5219,5220,5221,5222,5224,5225,5228,5234,5236,5237,5238,5239,5240,5241,5243,5244,5253,5254,5256,5259,5260,5260,5262,5262,5264,5265,5266,5267,5268,5269,5270,5271,5273,5273,5275,5275,5277,5278,5279,5280,5281,5282,5283,5284,5287,5289,5294,5295,5296,5298,5299,5300,5301,5302,5303,5304,5305,5306,5308,5311,5314,5315,5317,5320,5329,5330,5332,5333,5334,5336,5338,5339,5343,5345,5347,5361,5362,5363,5365,5367,5368,5369,5370,5372,5373,5374,5375,5376,5377,5379,5380,5381,5382,5383,5385,5386,5387,5388,5390,5393,5394,5395,5397,5398,5400,5401,5403,5404,5407,5409,5410,5412,5413,5415,5417,5419,5420,5421,5423,5424,5426,5427,5428,5429,5433,5436,5442,5444,5445,5451,5453,5454,5459,5460,5461,5462,5463,5464,5466,5467,5468,5473,5474,5475,5476,5477,5480,5481,5488,5490,5494,5496,5497,5498,5499,5500,5502,5503,5504,5505,5506,5507,5508,5509,5510,5511,5512,5513,5514,5515,5518,5519,5520,5521,5523,5524,5525,5527,5529,5533,5539,5540,5569,5570,5572,5573,5574,5576,5577,5578,5579,5580,5581,5582,5584,5588,5590,5592,5594,5595,5597,5599,5613,5619,5623,5626,5629,5632,5635,5638,5641,5644,5647,5650,5655,5656,5658,5663,5664,5679,5680,5681,5682,5683,5684,5685,5686,5690,5696,5697,5699,5700,5701,5702,5703,5705,5706,5707,5708,5709,5710,5712,5716,5771,5772,5773,5774,5776,5777,5778,5779,5781,5782,5783,5786,5788,5790,5791,5792,5793,5794,5796,5801,5809,5810,5811,5812,5813,5815,5817,5818,5820,5822,5823,5824,5825,5826,5827,5828,5830,5832,5835,5838,5841,5842,5843,5844,5847,5849,5851,5852,5854,5858,5860,5861,5866,5867,5868,5874,5875,5876,5878,5879,5880,5881,5882,5883,5884,5886,5889,5893,5895,5898,5901,5909,5913,5914,5915,5916,5917,5918,5919,5920,5922,5924,5925,5926,5928,5930,5933,5938,5939,5940,5944,5945,5950,5951,5952,5953,5954,5959,5960,5961,5963,5964,5966,5967,5968,5969,5975,5976,5977,5978,5980,5981,5983,5984,5985,5986,5987,5994,6009,6011,6012,6013,6015,6018,6019,6020,6021,6023,6024,6025,6027,6028,6029,6030,6031,6032,6040,6041,6043,6044,6045,6046,6047,6048,6050,6051,6052,6055,6056,6066,6067,6068,6069,6070,6071,6072,6074,6075,6076,6080,6089,6090,6091,6092,6093,6094,6095,6097,6098,6099,6103,6112,6113,6114,6115,6116,6117,6118,6120,6121,6122,6126,6134,6135,6137,6138,6139,6140,6141,6142,6144,6146,6148,6173,6174,6175,6177,6178,6180,6181,6183,6185,6191,6192,6193,6195,6196,6197,6198,6199,6201,6202,6203,6204,6209,6210,6212,6213,6214,6221,6222,6223,6224,6226,6227,6228,6229,6230,6231,6232,6233,6234,6235,6236,6237,6238,6240,6241,6246,6247,6248,6249,6250,6251,6254,6255,6256,6257,6258,6294,6295,6296,6299,6300,6302,6303,6305,6306,6307,6308,6310,6311,6312,6313,6314,6315,6316,6317,6321,6322,6325,6326,6328,6329,6332,6333,6334,6335,6336,6337,6338,6339,6340,6341,6342,6343,6344,6345,6346,6347,6348,6349,6350,6352,6353,6354,6356,6357,6358,6359,6360,6363,6364,6365,6366,6367,6374,6375,6380,6381,6382,6383,6385,6391,6392,6394,6395,6396,6397,6398,6399,6400,6406,6407,6408,6409,6412,6413,6414,6415,6424,6425,6427,6429,6430,6431,6432,6433,6434,6436,6437,6438,6439,6440,6441,6442,6444,6445,6447,6450,6451,6452,6453,6454,6455,6457,6458,6467,6468,6470,6473,6474,6475,6477,6478,6479,6480,6481,6482,6484,6485,6487,6488,6490,6494,6496,6497,6498,6499,6501,6502,6504,6505,6506,6507,6509,6510,6512,6514,6516,6518,6520,6521,6527,6528,6529,6531,6532,6533,6534,6535,6536,6537,6539,6540,6541,6542,6543,6544,6546,6547,6548,6550,6551,6552,6554,6555,6559,6560,6561,6563,6564,6565,6566,6568,6569,6570,6572,6573,6574,6575,6577,6578,6579,6580,6581,6582,6585,6586,6587,6588,6590,6591,6593,6594,6596,6597,6599,6600,6602,6603,6607,6609,6615,6616,6618,6620,6621,6622,6623,6625,6626,6628,6630,6633,6635,6636,6637,6639,6640,6642,6643,6644,6646,6647,6650,6654,6661,6663,6664,6665,6666,6667,6668,6670,6677,6678,6680,6681,6682,6683,6684,6686,6689,6695,6697,6698,6700,6702,6709,6710,6712,6714,6715,6716,6717,6718,6719,6721,6722,6724,6725,6727,6730,6731,6737,6738,6739,6741,6742,6743,6744,6746,6747,6749,6749,6752,6753,6754,6756,6757,6759,6763,6764,6764,6770,6771,6772,6773,6781,6784,6785,6786,6787,6788,6789,6790,6791,6792,6793,6796,6797,6798,6799,6801,6803,6805,6808,6809,6811,6812,6813,6814,6816,6817,6818,6820,6821,6825,6826,6828,6829,6830,6831,6832,6834,6836,6837,6838,6839,6840,6841,6842,6843,6844,6845,6847,6849,6853,6854,6859,6860,6861,6862,6863,6864,6866,6873,6874,6877,6879,6895,6899,6901,6908,6909,6910,6911,6912,6913,6914,6919,6922,6925,6935,6937,6939,6940,6941,6942,6943,6944,6945,6946,6948,6949,6950,6951,6952,6953,6957,6958,6959,6960,6962,6964,6966,6967,6969,6973,6975,6977,6978,6979,6980,6981,6983,6984,6985,6986,6987,6988,6990,6994,7003,7004,7004,7005,7005,7005,7006,7006,7007,7162,7164,7166,7167,7168,7169,7170,7171,7172,7173,7175,7178,7185,7186,7187,7194,7195,7197,7198,7199,7200,7201,7203,7204,7206,7207,7208,7209,7210,7212,7213,7220,7222,7223,7224,7225,7241,7243,7244,7245,7246,7247,7248,7250,7251,7252,7253,7254,7255,7256,7257,7263,7265,7266,7267,7268,7269,7270,7271],"pod":[[677,"TRY_BLOCK_EXCEPTION"],[678,"TRY_BLOCK_FINALLY"],[679,"TRY_BLOCK_HAS_CONTINUE"],[680,"TRY_BLOCK_HAS_NEXT"],[681,"TRY_BLOCK_HAS_LAST"],[682,"TRY_BLOCK_REDO_LOOP"],[683,"TRY_BLOCK_CONTINUE_NEEDED_ONE"],[702,"initialize"],[719,"add_package_name"],[759,"add_package_name_sub"],[782,"add_package_name_fh"],[808,"add_package_name_j"],[846,"get_perl_name"],[868,"cur_package"],[883,"capture_varclass_j"],[899,"capture_varclass"],[976,"propagate_varclass_for_here"],[986,"map_var_class_into_sub"],[996,"determine_varclass_keepers"],[1019,"get_sub_vars_with_class"],[1037,"get_py_name"],[1058,"def_label"],[1069,"could_be_anonymous_sub_close"],[1078,"in_conditional"],[1091,"in_sub"],[1098,"cur_sub"],[1105,"get_loop_ctr"],[1116,"set_loop_ctr_mod"],[1130,"is_continue_block"],[1148,"track_continue"],[1161,"track_redo"],[1184,"flag_next_in_continue"],[1195,"enter_block"],[1281,"exit_block"],[1311,"is_eval"],[1321,"last_next_propagates"],[1361,"handle_pos_ref"],[1373,"handle_return"],[1381,"handle_return_in_expression"],[1408,"return_in_BEGIN_needs_raise"],[1425,"handle_last_next"],[1446,"track_potential_sub_call"],[1458,"set_continue_needed_try_block"],[1479,"continue_needed_try_block"],[1501,"needs_try_block"],[1524,"in_eval"],[1532,"in_BEGIN"],[1541,"has_continue"],[1563,"set_needs_implicit_continue"],[1576,"needs_implicit_continue"],[1597,"needs_redo_loop"],[1620,"cur_loop_ndx"],[1630,"loop_ndx_with_label"],[1647,"begin_loop_label"],[1660,"cur_loop_label"],[1674,"try_block_exception_name"],[1684,"gen_try_block_finally"],[1729,"next_last_needs_raise"],[1760,"handle_local"],[1805,"prepare_local"],[1854,"prepare_locals"],[1893,"push_locals"],[1938,"init_local_typeglobs"],[1977,"choose_glob"],[2004,"tokenize"],[3534,"finish"],[3614,"select_readline"],[3626,"bash_style_or_and_fix"],[3702,"decode_scalar"],[3981,"is_regex"],[4035,"perl_match"],[4097,"popup"],[4113,"single_quoted_literal"],[4171,"double_quoted_literal"],[4200,"interpolate_strings"],[4866,"handle_expr_in_string"],[4919,"extract_tokens_from_double_quoted_string"],[5076,"unescaped_match"],[5096,"escape_curly_braces"],[5141,"remove_escaped_delimiters"],[5158,"decode_array"],[5205,"decode_hash"],[5234,"decode_bare"],[5253,"perl_hex_escapes_to_python"],[5294,"escape_non_printables"],[5329,"escape_quotes"],[5361,"remove_perl_escapes"],[5442,"escape_triple_singlequotes"],[5451,"escape_triple_doublequotes"],[5459,"put_regex_in_quotes"],[5488,"perl_regex_to_python"],[5539,"escape_only_backslash"],[5569,"escape_backslash"],[5619,"remove_oddities"],[5696,"in_string"],[5771,"python_matching_paren"],[5809,"gen_statement"],[5874,"format_chunks"],[5909,"gen_chunk"],[5938,"save_code"],[5944,"restore_code"],[5950,"append"],[5959,"replace"],[5975,"insert"],[6009,"destroy"],[6040,"autoincrement_fix"],[6066,"matching_paren"],[6089,"matching_curly_br"],[6112,"matching_square_br"],[6134,"escape_keywords"],[6173,"add_package_to_mapped_name"],[6191,"mapped_name"],[6209,"actual_sigil"],[6221,"remap_conflicting_names"],[6380,"parens_are_balanced"],[6391,"is_escaped"],[6406,"init_perllib"],[6424,"get_rest_of_variable_name"],[6467,"end_of_escape"],[6527,"unescape_string"],[6615,"expand_ranges"],[6661,"make_same_length"],[6677,"first_map_wins"],[6695,"replace_usage"],[6709,"escape_re_sub"],[6737,"handle_use_lib"],[6770,"handle_use_overload"],[6781,"get_mapped_names_for_package"],[6873,"handle_use_require"],[6935,"handle_import"],[7162,"build_in_qr_flags"],[7185,"is_concat"],[7194,"replace_escape_with_chr"],[7220,"semicolon_in_block"],[7241,"handle_while_magic_function"],[7263,"looks_like_anon_hash_def"]],"digest":"eeba04bc144d77962057219c841c4ec8"}